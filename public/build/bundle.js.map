{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/game.ts","../../src/Canvas.svelte","../../src/Background.svelte","../../src/DotGrid.svelte","../../src/Graph.svelte","../../src/Text.svelte","../../src/FPS.svelte","../../src/InputRange.svelte","../../src/Checkbox.svelte","../../src/ColorSelector.svelte","../../src/Window.svelte","../../src/translations.ts","../../src/RadioButtons.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getContext, onMount } from 'svelte';\r\nimport { writable, derived } from 'svelte/store';\r\n// Some props for the app\r\nexport const width = writable(window.innerWidth);\r\nexport const height = writable(window.innerHeight);\r\nexport const pixelRatio = writable(window.devicePixelRatio);\r\nexport const context = writable();\r\nexport const canvas = writable();\r\nexport const time = writable(0);\r\n// A more convenient store for grabbing all game props\r\nexport const props = deriveObject({\r\n    context,\r\n    canvas,\r\n    width,\r\n    height,\r\n    pixelRatio,\r\n    time\r\n});\r\nexport const key = Symbol();\r\nexport const getState = () => {\r\n    const api = getContext(key);\r\n    return api.getState();\r\n};\r\nexport const renderable = (render) => {\r\n    const api = getContext(key);\r\n    const element = {\r\n        ready: false,\r\n        mounted: false\r\n    };\r\n    if (typeof render === 'function') {\r\n        element.render = render;\r\n    }\r\n    else if (render) {\r\n        if (render.render)\r\n            element.render = render.render;\r\n        if (render.setup)\r\n            element.setup = render.setup;\r\n    }\r\n    api.add(element);\r\n    onMount(() => {\r\n        element.mounted = true;\r\n        return () => {\r\n            api.remove(element);\r\n            element.mounted = false;\r\n        };\r\n    });\r\n};\r\nfunction deriveObject(obj) {\r\n    const keys = Object.keys(obj);\r\n    const list = keys.map(key => {\r\n        return obj[key];\r\n    });\r\n    return derived(list, (array) => {\r\n        return array.reduce((dict, value, i) => {\r\n            dict[keys[i]] = value;\r\n            return dict;\r\n        }, {});\r\n    });\r\n}\r\n","<script>\n\timport { onMount, onDestroy, setContext } from 'svelte';\n\n\timport {\n\t\tkey,\n\t\twidth,\n\t\theight,\n\t\tcanvas as canvasStore,\n\t\tcontext as contextStore,\n\t\tpixelRatio,\n\t\tprops,\n\t\ttime\n\t} from './game.js';\n\n\texport let killLoopOnError = true;\n\texport let attributes = {};\n\texport let onClick = (ev) => {}\n\texport let onMouseDown = (ev) => {}\n\texport let onTouchStart = (ev) => {}\n\t\n\tlet listeners = [];\n\tlet canvas;\n\tlet context;\n\tlet frame;\n\n\tonMount(() => {\n\t\t// prepare canvas stores\n\t\tcontext = canvas.getContext('2d', attributes);\n\t\tcanvasStore.set(canvas);\n\t\tcontextStore.set(context);\n\n\t\t// setup entities\n\t\tlisteners.forEach(async entity => {\n\t\t\tif (entity.setup) {\n\t\t\t\tlet p = entity.setup($props);\n\t\t\t\tif (p && p.then) await p;\n\t\t\t}\n\t\t\tentity.ready = true;\n\t\t});\n\t\t\n\t\t// start game loop\n\t\treturn createLoop((elapsed, dt) => {\n\t\t\ttime.set(elapsed);\n\t\t\trender(dt);\n\t\t});\n\t});\n\t\n\tsetContext(key, {\n\t\tadd (fn) {\n\t\t\tthis.remove(fn);\n\t\t\tlisteners.push(fn);\n\t\t},\n\t\tremove (fn) {\n\t\t\tconst idx = listeners.indexOf(fn);\n\t\t\tif (idx >= 0) listeners.splice(idx, 1);\n\t\t}\n\t});\n\t\n\tfunction render (dt) {\n\t\tcontext.save();\n\t\tcontext.scale($pixelRatio, $pixelRatio);\n\t\tlisteners.forEach(entity => {\n\t\t\ttry {\n\t\t\t\tif (entity.mounted && entity.ready && entity.render) {\n\t\t\t\t\tentity.render($props, dt);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\tif (killLoopOnError) {\n\t\t\t\t\tcancelAnimationFrame(frame);\n\t\t\t\t\tconsole.warn('Animation loop stopped due to an error');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tcontext.restore();\n\t}\n\t\n\tfunction handleResize () {\n\t\twidth.set(window.innerWidth);\n\t\theight.set(window.innerHeight);\n\t\tpixelRatio.set(window.devicePixelRatio);\n\t}\n\t\n\tfunction createLoop (fn) {\n\t\tlet elapsed = 0;\n\t\tlet lastTime = performance.now();\n\t\t(function loop() {\n\t\t\tframe = requestAnimationFrame(loop);\n\t\t\tconst beginTime = performance.now();\n\t\t\tconst dt = (beginTime - lastTime) / 1000;\n\t\t\tlastTime = beginTime;\n\t\t\telapsed += dt;\n\t\t\tfn(elapsed, dt);\n\t\t})();\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(frame);\n\t\t};\n\t}\n</script>\n\n<canvas\n\tbind:this={canvas}\n\ton:click|preventDefault={onClick}\n\ton:mousedown={onMouseDown}\n\ton:touchstart={onTouchStart}\n\twidth={$width * $pixelRatio}\n\theight={$height * $pixelRatio}\n\tstyle=\"width: {$width}px; height: {$height}px;\"></canvas>\n\n<svelte:window on:resize|passive={handleResize} />\n\n<slot></slot>\n","<script>\n\timport { renderable } from './game.ts';\n\texport let color = null;\n\t\n\trenderable(props => {\n\t\tconst { context, width, height } = props;\n\t\tcontext.clearRect(0, 0, width, height);\n\t\tif (color) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fillRect(0, 0, width, height);\n\t\t}\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>\n","<script>\n\timport { renderable } from './game.js';\n\t\n\texport let color = 'black';\n\texport let divisions = 20;\n\texport let pointSize = 1;\n\n\trenderable(props => {\n\t\tconst { context, width, height } = props;\n\t\tconst aspect = width / height;\n\t\t\n\t\tcontext.save();\n\t\tfor (let y = 0; y < divisions; y++) {\n\t\t\tcontext.beginPath();\n\t\t\tfor (let x = 0; x < divisions; x++) {\n\t\t\t\tconst u = divisions <= 1 ? 0.5 : x / (divisions - 1);\n\t\t\t\tconst v = divisions <= 1 ? 0.5 : y / (divisions - 1);\n\n\t\t\t\tlet px, py;\n\t\t\t\tif (width > height) {\n\t\t\t\t\tpx = u * width;\n\t\t\t\t\tpy = (v * aspect) * height;\n\t\t\t\t} else {\n\t\t\t\t\tpx = (u / aspect) * width;\n\t\t\t\t\tpy = v * height;\n\t\t\t\t}\n\t\t\t\tcontext.arc(px, py, pointSize, 0, Math.PI * 2);\n\t\t\t}\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fill();\n\t\t}\n\t\tcontext.restore();\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>","<script lang=\"ts\">\r\n    import { renderable, width, height } from './game.js'\r\n\r\n    export let vertexColor = '#ffe554'\r\n    export let edgeColor = '#ffe554'\r\n    export let vertexSize = 10\r\n    export let edgeSize = 3\r\n    export let showVertexLabel = true\r\n    export let removeEdgesOnMoving = false\r\n    export let vertexLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let vertexLabelSize = 8\r\n    export let verticesGenerationCount = 30\r\n    export let showEdgeLabel = true\r\n    export let edgeLabelDistance = 30\r\n    export let edgeLabelSize = 8\r\n    export let edgeLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let totalDistance = '0'\r\n    export let totalDistanceWithStart = '0'\r\n    export let connectAlgorithm = ''\r\n\r\n    interface Vertex {\r\n        x: number\r\n        y: number\r\n    }\r\n\r\n    interface Edge {\r\n        i: number\r\n        j: number\r\n    }\r\n\r\n    let vertices: Vertex[] = []\r\n    let edges: Edge[] = []\r\n    let minDistance = 80\r\n    let startPosition = { x: 0, y: 0 }\r\n\r\n    let mouse: Vertex = null\r\n    let movingVertexId = -1\r\n    let mouseDown = false\r\n    let time = -1\r\n\r\n    const CLICK_TIME_MS = 100\r\n\r\n    renderable((props) => {\r\n        const { context } = props\r\n\r\n        if (mouseDown && movingVertexId !== -1 && Date.now() - time > CLICK_TIME_MS) {\r\n            let x = mouse.x\r\n            let y = mouse.y\r\n\r\n            if (x > $width) {\r\n                x = $width\r\n            } else if (x < 0) {\r\n                x = 0\r\n            }\r\n\r\n            if (y > $height) {\r\n                y = $height\r\n            } else if (y < 0) {\r\n                y = 0\r\n            }\r\n\r\n            vertices[movingVertexId] = { x, y }\r\n\r\n            if (removeEdgesOnMoving) {\r\n                removeAllEdges()\r\n            } else {\r\n                calculateDistances()\r\n            }\r\n        }\r\n\r\n        for (let edge of edges) {\r\n            drawLine(context, vertices[edge.i], vertices[edge.j])\r\n        }\r\n\r\n        for (let vertex of vertices) {\r\n            context.lineCap = 'round'\r\n            context.beginPath()\r\n            context.fillStyle = vertexColor\r\n            context.strokeStyle = vertexColor\r\n            context.lineWidth = 3\r\n            context.arc(vertex.x, vertex.y, vertexSize, 0, Math.PI * 2)\r\n            context.fill()\r\n        }\r\n\r\n        if (showVertexLabel) {\r\n            for (let vertex of vertices) {\r\n                let text = `(${Math.round(vertex.x)}, ${Math.round(vertex.y)})`\r\n                drawVertexLabel({ context, text, x: vertex.x, y: vertex.y + vertexSize + 10 })\r\n            }\r\n        }\r\n\r\n        if (showEdgeLabel) {\r\n            for (let edge of edges) {\r\n                drawEdgeLabel(context, vertices[edge.i], vertices[edge.j])\r\n            }\r\n        }\r\n    })\r\n\r\n    export function handleClick(ev) {\r\n        if (Date.now() - time > CLICK_TIME_MS && time !== -1) {\r\n            time = -1\r\n            return\r\n        }\r\n\r\n        time = -1\r\n        removeAllEdges()\r\n\r\n        let x = ev.clientX\r\n        let y = ev.clientY\r\n\r\n        let nearest = getNearestVertex(x, y)\r\n\r\n        if (nearest.value <= vertexSize && nearest.index !== -1) {\r\n            vertices = [...vertices.slice(0, nearest.index), ...vertices.slice(nearest.index + 1, vertices.length)]\r\n            return\r\n        }\r\n\r\n        let vertex: Vertex = { x, y }\r\n        vertices = [...vertices, vertex]\r\n    }\r\n\r\n    export function handleMouseDown(ev) {\r\n        let x = ev.clientX\r\n        let y = ev.clientY\r\n\r\n        let nearest = getNearestVertex(x, y)\r\n\r\n        if (nearest.value > vertexSize || nearest.index === -1) {\r\n            return\r\n        }\r\n\r\n        movingVertexId = nearest.index\r\n        mouse = vertices[movingVertexId]\r\n        mouseDown = true\r\n        time = Date.now()\r\n    }\r\n\r\n    function handleMouseMove(ev) {\r\n        if (!mouse) {\r\n            return\r\n        }\r\n\r\n        mouse.x += ev.movementX\r\n        mouse.y += ev.movementY\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        mouseDown = false\r\n        movingVertexId = -1\r\n        previousTouch = null\r\n    }\r\n\r\n    export function handleTouchStart(ev) {\r\n        let touch = ev.touches[0]\r\n        handleMouseDown(touch)\r\n    }\r\n\r\n    let previousTouch = null\r\n    function handleTouchMove(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        if (previousTouch) {\r\n            touch.movementX = touch.pageX - previousTouch.pageX\r\n            touch.movementY = touch.pageY - previousTouch.pageY\r\n            handleMouseMove(touch)\r\n        }\r\n\r\n        previousTouch = touch\r\n    }\r\n\r\n    export function removeAllEdges() {\r\n        edges = []\r\n        totalDistance = '0'\r\n        totalDistanceWithStart = '0'\r\n        resetDistances()\r\n    }\r\n\r\n    export function removeAllVertices() {\r\n        removeAllEdges()\r\n        vertices = []\r\n    }\r\n\r\n    function getRandomInt(min: number, max:number): number {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n    }\r\n\r\n    export function generateVertices() {\r\n        removeAllVertices()\r\n        let attempts = 0\r\n\r\n        while (vertices.length !== verticesGenerationCount && attempts !== 5000) {\r\n            let x = getRandomInt(0, $width - 1)\r\n            let y = getRandomInt(0, $height - 1)\r\n\r\n            let nearest = getNearestVertex(x, y)\r\n\r\n            if (nearest.value < minDistance && nearest.index != -1) {\r\n                attempts++\r\n                continue\r\n            }\r\n\r\n            let vertex: Vertex = { x, y }\r\n            vertices = [...vertices, vertex]\r\n\r\n            attempts = 0\r\n        }\r\n\r\n        console.log(`Generated ${vertices.length} vertices`)\r\n    }\r\n\r\n    function fillEdges() {\r\n        removeAllEdges()\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let j = i + 1\r\n\r\n            if (j < vertices.length) {\r\n                edges = [...edges, { i, j }]\r\n            }\r\n        }\r\n\r\n        calculateDistances()\r\n    }\r\n\r\n    export function connectEdges() {\r\n\r\n        switch (connectAlgorithm) {\r\n            case 'greedy':\r\n                greedy()\r\n                break\r\n            case 'prim':\r\n                prim()\r\n                break\r\n            case 'salesman':\r\n                salesman()\r\n                break\r\n            case 'spanningTree':\r\n                spanningTree()\r\n                break\r\n            case 'lastOrder':\r\n                fillEdges()\r\n        }\r\n    }\r\n\r\n    function greedy() {\r\n        console.log('greedy')\r\n        fillEdges()\r\n    }\r\n\r\n    function prim() {\r\n        console.log('prim')\r\n        fillEdges()\r\n    }\r\n\r\n    function salesman() {\r\n        console.log('salesman')\r\n        fillEdges()\r\n    }\r\n\r\n    function spanningTree() {\r\n        console.log('spanningTree')\r\n        fillEdges()\r\n    }\r\n\r\n    function calculateDistances() {\r\n        let totalDistanceCount = 0\r\n\r\n        for (let edge of edges) {\r\n            totalDistanceCount += getDistance(vertices[edge.i], vertices[edge.j])\r\n        }\r\n\r\n        let totalDistanceWithStartCount = totalDistanceCount\r\n\r\n        if (vertices.length) {\r\n            totalDistanceWithStartCount += getDistance(startPosition, vertices[0])\r\n            totalDistanceWithStartCount += getDistance(startPosition, vertices.at(-1))\r\n        }\r\n\r\n        totalDistance = Math.round(totalDistanceCount).toString()\r\n        totalDistanceWithStart = Math.round(totalDistanceWithStartCount).toString()\r\n    }\r\n\r\n    function resetDistances() {\r\n        totalDistance = '0'\r\n        totalDistanceWithStart = '0'\r\n    }\r\n\r\n    function drawVertexLabel(props) {\r\n        const { context, text, x, y } = props\r\n\r\n        let align = 'center'\r\n        let baseline = 'top'\r\n        let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\r\n\r\n        if (text && context) {\r\n            context.fillStyle = vertexLabelColor\r\n            context.font = `${vertexLabelSize}px ${fontFamily}`\r\n            context.textAlign = align\r\n            context.textBaseline = baseline\r\n            context.fillText(text, x, y)\r\n        }\r\n    }\r\n\r\n    function drawLine(context, vertexI: Vertex, vertexJ: Vertex) {\r\n        if (!context) {\r\n            return\r\n        }\r\n\r\n        context.beginPath()\r\n        context.moveTo(vertexI.x, vertexI.y)\r\n        context.lineTo(vertexJ.x, vertexJ.y)\r\n        context.strokeStyle = edgeColor\r\n        context.lineWidth = edgeSize\r\n        context.stroke()\r\n    }\r\n\r\n    function drawEdgeLabel(context, vertexI: Vertex, vertexJ: Vertex) {\r\n        if (!context) {\r\n            return\r\n        }\r\n\r\n        let label = String(Math.round(getDistance(vertexI, vertexJ)))\r\n\r\n        let x = (vertexI.x + vertexJ.x) / 2\r\n        let y = (vertexI.y + vertexJ.y) / 2\r\n\r\n        let thetaVertices = angle(vertexI.x, vertexI.y, vertexJ.x, vertexJ.y)\r\n\r\n        let radius = edgeLabelDistance\r\n        let resultX = radius * Math.cos(thetaVertices + 3 * Math.PI / 2) + x\r\n        let resultY = radius * Math.sin(thetaVertices + 3 * Math.PI / 2) + y\r\n\r\n        let align = 'center'\r\n        let baseline = 'top'\r\n        let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\r\n\r\n        context.beginPath()\r\n        context.fillStyle = edgeLabelColor\r\n        context.font = `${edgeLabelSize}px ${fontFamily}`\r\n        context.textAlign = align\r\n        context.textBaseline = baseline\r\n        context.save()\r\n        context.translate(resultX, resultY)\r\n        context.rotate(thetaVertices)\r\n        context.fillText(label, 0, 0)\r\n        context.restore()\r\n    }\r\n\r\n    function angle(cx, cy, ex, ey) {\r\n        let dy = ey - cy\r\n        let dx = ex - cx\r\n        let theta = Math.atan2(dy, dx) // range (-PI, PI]\r\n        return theta >= -(Math.PI / 2) && theta <= (Math.PI / 2) ? theta : theta + Math.PI\r\n    }\r\n\r\n    function getDistance(vertexI: Vertex, vertexJ: Vertex): number {\r\n        if (vertexI.x === vertexJ.x && vertexI.y === vertexJ.y) {\r\n            return 0\r\n        }\r\n\r\n        let x1: number = vertexI.x\r\n        let x2: number = vertexJ.x\r\n        let y1: number = vertexI.y\r\n        let y2: number = vertexJ.y\r\n\r\n        return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\r\n    }\r\n\r\n    function getNearestVertex(x: number, y: number, verticesList = vertices): {index: number, value: number} {\r\n        let nearestIndex: number = -1\r\n        let nearestValue: number = -1\r\n\r\n        for (let i = 0; i < verticesList.length; i++) {\r\n            let vertex: Vertex = verticesList[i]\r\n\r\n            let value: number = getDistance(vertex, { x, y })\r\n\r\n            if (nearestIndex === -1 || nearestValue > value) {\r\n                nearestIndex = i\r\n                nearestValue = value\r\n            }\r\n        }\r\n\r\n        return { value: nearestValue, index: nearestIndex }\r\n    }\r\n</script>\r\n\r\n<svelte:window\r\n        on:mouseup={handleMouseUp}\r\n        on:touchend={handleMouseUp}\r\n        on:mousemove={handleMouseMove}\r\n        on:touchmove={handleTouchMove}\r\n\r\n/>\r\n\r\n<!-- The following allows this component to nest children -->\r\n<slot></slot>\r\n","<script lang=\"ts\">\n\timport { renderable } from './game.js'\n\n    export let show = true\n\t\n\texport let color = 'hsl(0, 0%, 100%)'\n\texport let align = 'center'\n\texport let baseline = 'middle'\n\t\n\texport let text = ''\n\texport let x = 0\n\texport let y = 0\n\t\n\texport let fontSize = 16\n\texport let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\n\t\n\trenderable(props => {\n\t\tconst { context, width, height } = props\n\t\tif (text && show) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.font = `${fontSize}px ${fontFamily}`\n\t\t\tcontext.textAlign = align;\n\t\t\tcontext.textBaseline = baseline;\t\t\n\t\t\tcontext.fillText(text, x, y);\n\t\t}\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>\n","<script>\n\timport Text from './Text.svelte'\n\timport { width, renderable } from './game.js'\n\n\texport let show = true\n\n\tlet text = ''\n\tlet frames = 0\n\tlet prevTime = performance.now()\n\n\trenderable((state, dt) => {\n\t\tlet time = performance.now()\n\t\tframes++\n\n\t\tif ( time >= prevTime + 1000 ) {\n\t\t\tconst fps = ((frames * 1000) / (time - prevTime))\n\t\t\ttext = `${fps.toFixed(1)} FPS`\n\t\t\tprevTime = time\n\t\t\tframes = 0\n\t\t}\n\n\t\tif (!show) {\n\t\t\ttext = ''\n\t\t}\n\t})\n</script>\n\n<Text\n\t{text}\n\tfontSize=12\n\tfontFamily='Courier New'\n\talign='left'\n\tbaseline='top'\n\tx={20}\n\ty={20} />\n\n<!-- The following allows this component to nest children -->\n<slot></slot>","<script lang=\"ts\">\n  export let name: string;\n  export let min: number = 0;\n  export let max: number = 100;\n  export let value: number = min;\n  export let step: number = 1;\n</script>\n\n<label class=\"wrapper\">\n  <div>{name}: {value}</div>\n  <input type=\"range\" bind:value {min} {max} {step} />\n</label>\n\n<style>\n  .wrapper {\n    /* display: flex; */\n    display: block;\n    /* font-weight: bold; */\n  }\n  .wrapper:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  input {\n    display: block;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    /* margin-left: 10px; */\n    /* transform: translateY(-4px); */\n  }\n  div {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n    overflow: hidden;\n    /* font-family: monospace; */\n    font-size: 65%;\n  }\n  input {\n    margin-top: 2px;\n  }\n</style>\n","<script>\n  export let title;\n  export let checked = false;\n</script>\n\n<label>\n  <input type=\"checkbox\" bind:checked />\n  <span>{title}</span>\n</label>\n\n<style>\n  label {\n    display: block;\n    cursor: pointer;\n    margin-bottom: 5px;\n  }\n  input {\n    user-select: none;\n    position: relative;\n    appearance: none;\n    -webkit-appearance: none;\n    margin: 0px 5px 0px 0px;\n    outline: none;\n    border: none;\n  }\n\n  input::before {\n    content: \"\";\n    box-sizing: border-box;\n    transform: translate(0px, 2px);\n    display: block;\n    width: 15px;\n    height: 15px;\n    border-radius: 2px;\n    background-color: rgba(255, 255, 255, 0.3);\n    transition-duration: 0.2s;\n  }\n\n  input:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    left: 1px;\n    top: 3px;\n    width: 10px;\n    height: 5px;\n    transform: translateY(-2px) rotateZ(-45deg);\n    border-bottom: 4px solid whitesmoke;\n    border-left: 4px solid whitesmoke;\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n  input:checked::after {\n    transform: rotateZ(-45deg);\n    opacity: 1;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte'\n\n  export let colors: string[] = []\n  export let selectedId: number = 0\n\n  let checkmarkColor = 'white'\n\n  onMount(function(){\n    checkmarkColor = invertColor(colors[selectedId])\n  })\n\n  function invertColor(hex) {\n    if (hex === 'white') {\n      hex = '#FFFFFF'\n    } else if (hex === 'black') {\n      hex = '#000000'\n    }\n\n    if (hex.indexOf('#') === 0) {\n      hex = hex.slice(1)\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n    }\n    if (hex.length !== 6) {\n      throw new Error('Invalid HEX color.')\n    }\n\n    let r = parseInt(hex.slice(0, 2), 16),\n            g = parseInt(hex.slice(2, 4), 16),\n            b = parseInt(hex.slice(4, 6), 16)\n\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n            ? 'black'\n            : 'white'\n  }\n</script>\n\n<div class=\"wrapper\">\n  {#each Array(...colors.entries()) as idAndColor}\n    <button\n      class=\"{selectedId === idAndColor[0] ? 'selected' : ''} {checkmarkColor}\"\n      name=\"color\"\n      type=\"radio\"\n      style={`background-color: ${idAndColor[1]};`}\n      on:click={() => {\n        selectedId = idAndColor[0]\n        checkmarkColor = invertColor(colors[selectedId])\n      }}\n    />\n  {/each}\n</div>\n\n<style>\n  .selected.white:before {\n    content: \"\";\n    display: block;\n    width: 6px;\n    height: 14px;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    transform: translateY(-2px) rotate(45deg);\n  }\n  .selected.black:before {\n    content: \"\";\n    display: block;\n    width: 6px;\n    height: 14px;\n    border-bottom: 3px solid black;\n    border-right: 3px solid black;\n    transform: translateY(-2px) rotate(45deg);\n  }\n  .wrapper {\n    display: flex;\n    /* flex-wrap: wrap; */\n    overflow: hidden;\n    border-radius: 5px;\n    /* border: 2px dotted rgba(0, 0, 0, 0.5); */\n  }\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 29px;\n    padding: 0;\n    margin: 0;\n    border-radius: 0;\n  }\n  /* label {\n    font-size: 75%;\n    text-align: center;\n    width: 30px;\n    line-height: 30px;\n    overflow: hidden;\n    cursor: pointer;\n    width: 100%;\n  }\n  label:hover {\n    box-shadow: inset 0 0 0 100px rgba(0, 0, 0, 0.1);\n  }\n  input {\n    appearance: none;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n  input:checked::before {\n    content: \"\";\n    display: block;\n    width: 5px;\n    height: 10px;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    transform: rotate(45deg) translateY(-1px);\n    margin-right: 7px;\n  } */\n</style>\n","<script lang=\"ts\">\r\n    import {height, width} from \"./game\"\r\n    import {afterUpdate} from \"svelte\"\r\n\r\n    let window\r\n\r\n    export let title = ''\r\n    export let isOpened = true\r\n    export let zIndex = 0\r\n    export let onCloseHandler = null\r\n    export let onClickHandler = null\r\n    export let x = 100\r\n    export let y = 100\r\n\r\n    let isMouseDown = false\r\n    let isFirstRender = true\r\n    let mouse: { x: Number, y: Number }\r\n    let outOfBoundLimitX = 100\r\n    let outOfBoundLimitY = 100\r\n\r\n    afterUpdate(() => {\r\n        if (isFirstRender && window) {\r\n            x = Math.floor($width / 2) - Math.floor(window.clientWidth / 2)\r\n            y = Math.floor($height / 2) - Math.floor(window.clientHeight / 2)\r\n\r\n            isFirstRender = false\r\n        }\r\n\r\n        if (window) {\r\n            outOfBoundLimitX = Math.floor(window.clientWidth / 2)\r\n            outOfBoundLimitY = Math.floor(window.clientHeight / 2)\r\n\r\n            checkPosition()\r\n        }\r\n    })\r\n\r\n    function onClose() {\r\n        isOpened = false\r\n\r\n        if (onCloseHandler) {\r\n            onCloseHandler()\r\n        }\r\n    }\r\n\r\n    function checkPosition() {\r\n        if (x > $width - outOfBoundLimitX) {\r\n            x = $width - outOfBoundLimitX\r\n        } else if (x < -outOfBoundLimitX) {\r\n            x = -outOfBoundLimitX\r\n        }\r\n\r\n        if (y > $height - outOfBoundLimitY) {\r\n            y = $height - outOfBoundLimitY\r\n        } else if (y < -outOfBoundLimitY) {\r\n            y = -outOfBoundLimitY\r\n        }\r\n    }\r\n\r\n    function handleTouchStart(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        handleMouseDown(touch)\r\n    }\r\n\r\n    let previousTouch = null\r\n    function handleTouchMove(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        if (previousTouch) {\r\n            touch.movementX = touch.pageX - previousTouch.pageX\r\n            touch.movementY = touch.pageY - previousTouch.pageY\r\n            handleMouseMove(touch)\r\n        }\r\n\r\n        previousTouch = touch\r\n    }\r\n\r\n    function handleMouseDown(ev) {\r\n        const classes = ev.target.className\r\n        const moveClasses = ['controls', 'controls-block', 'controls-block__title']\r\n        const dy = ev.clientY - y\r\n\r\n        if (moveClasses.some(classes.includes.bind(classes)) && dy < 50) {\r\n            isMouseDown = true\r\n            mouse = { x, y }\r\n        }\r\n\r\n        if (onClickHandler) {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    function handleMouseMove(ev) {\r\n        if (isMouseDown && mouse) {\r\n            mouse.x += ev.movementX\r\n            mouse.y += ev.movementY\r\n            x = mouse.x\r\n            y = mouse.y\r\n\r\n            checkPosition()\r\n        }\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        isMouseDown = false\r\n        previousTouch = null\r\n    }\r\n</script>\r\n\r\n<svelte:window\r\n        on:mouseup={handleMouseUp}\r\n        on:touchend={handleMouseUp}\r\n        on:mousemove={handleMouseMove}\r\n        on:touchmove={handleTouchMove}\r\n/>\r\n\r\n{#if isOpened}\r\n    <div class=\"controls\"\r\n         style=\"z-index: {zIndex + 1}; left: {x}px; top: {y}px;\"\r\n         on:mousedown={handleMouseDown}\r\n         on:touchstart={handleTouchStart}\r\n         bind:this={window}\r\n    >\r\n        <div class=\"controls-block\">\r\n            <h2 class=\"controls-block__title\">\r\n                {title}\r\n            </h2>\r\n            <button on:click=\"{onClose}\" class=\"close\"></button>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .controls {\r\n        overflow-y: scroll;\r\n        box-shadow: 0 0 10px 0 black;\r\n        position: fixed;\r\n        max-height: calc(100% - 40px);\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        backdrop-filter: blur(8px);\r\n        -webkit-backdrop-filter: blur(8px);\r\n        -ms-overflow-style: none; /* IE and Edge */\r\n        scrollbar-width: none; /* Firefox */\r\n        padding: 10px;\r\n        width: 300px;\r\n        border-radius: 10px;\r\n    }\r\n    .controls::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    .controls-block > * {\r\n        margin-bottom: 0;\r\n    }\r\n    .controls-block:not(:last-child) {\r\n        margin-bottom: 20px;\r\n    }\r\n    .controls-block__title {\r\n        margin: 0;\r\n        margin-bottom: 5px;\r\n        text-transform: uppercase;\r\n        font-size: 100%;\r\n    }\r\n    @supports (not (backdrop-filter: blur())) and\r\n    (not (-webkit-backdrop-filter: blur())) {\r\n        .controls {\r\n            background-color: rgba(150, 150, 150, 0.95);\r\n        }\r\n    }\r\n    .close {\r\n        display: block;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 10px;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15px;\r\n        height: 15px;\r\n        border: 0;\r\n        color: black;\r\n        border-radius: 1.5rem;\r\n        background: transparent;\r\n        box-shadow: 0 0 0 1px black;\r\n        transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\r\n        background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n        -webkit-appearance: none;\r\n    }\r\n\r\n    .close:before,\r\n    .close:after {\r\n        content: '';\r\n        display: block;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: 50%;\r\n        width: 9px;\r\n        height: 1px;\r\n        background: black;\r\n        transform-origin: center;\r\n        transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\r\n        background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n    }\r\n\r\n    .close:before {\r\n        -webkit-transform: translate(0, -50%) rotate(45deg);\r\n        -moz-transform: translate(0, -50%) rotate(45deg);\r\n        transform: translate(0, -50%) rotate(45deg);\r\n        left: 3px;\r\n        top: 7px;\r\n    }\r\n\r\n    .close:after {\r\n        -webkit-transform: translate(0, -50%) rotate(-45deg);\r\n        -moz-transform: translate(0, -50%) rotate(-45deg);\r\n        transform: translate(0, -50%) rotate(-45deg);\r\n        left: 3px;\r\n        top: 7px;\r\n    }\r\n\r\n    .close:hover {\r\n        background: black;\r\n    }\r\n\r\n    .close:hover:before,\r\n    .close:hover:after {\r\n        height: 2px;\r\n        background: white;\r\n    }\r\n\r\n    .close:focus {\r\n        border-color: #3399ff;\r\n        box-shadow: 0 0 0 2px #3399ff;\r\n    }\r\n\r\n    .close:active {\r\n        transform: scale(0.9);\r\n    }\r\n\r\n    .close:hover,\r\n    .close:focus,\r\n    .close:active {\r\n        outline: none;\r\n    }\r\n</style>\r\n","export default {\r\n    language: {\r\n        en: \"Language\",\r\n        ru: \"Язык\",\r\n    },\r\n    english: {\r\n        en: \"English\",\r\n        ru: \"Английский\",\r\n    },\r\n    russian: {\r\n        en: \"Russian\",\r\n        ru: \"Русский\",\r\n    },\r\n    showMenu: {\r\n        en: \"Show Menu\",\r\n        ru: \"Показать меню\"\r\n    },\r\n    hideMenu: {\r\n        en: \"Hide menu\",\r\n        ru: \"Скрыть меню\"\r\n    },\r\n    addHint: {\r\n        en: 'Click to add vertex.',\r\n        ru: 'Нажмите чтобы добавить вершину.',\r\n    },\r\n    showHint: {\r\n        en: 'Show Hint',\r\n        ru: 'Показать подсказку'\r\n    },\r\n    about: {\r\n        en: \"About\",\r\n        ru: \"О программе\"\r\n    },\r\n    graphicalSettings: {\r\n        en: \"Graphical settings\",\r\n        ru: \"Настройки просмотра\",\r\n    },\r\n    showFPS: {\r\n        en: \"Show FPS\",\r\n        ru: \"Показать FPS\",\r\n    },\r\n    vertexColor: {\r\n        en: \"Vertex color\",\r\n        ru: \"Цвет вершин\",\r\n    },\r\n    edgeColor: {\r\n        en: \"Edge color\",\r\n        ru: \"Цвет граней\",\r\n    },\r\n    vertexSize: {\r\n        en: \"Vertex size\",\r\n        ru: \"Размер вершин\",\r\n    },\r\n    edgeSize: {\r\n        en: \"Edge size\",\r\n        ru: \"Размер грани\",\r\n    },\r\n    showVertexLabel: {\r\n        en: \"Show vertex label\",\r\n        ru: \"Показывать координаты вершин\",\r\n    },\r\n    vertexLabelSize: {\r\n        en: \"Vertex label size\",\r\n        ru: \"Размер шрифта координат вершины\",\r\n    },\r\n    vertexLabelColor: {\r\n        en: \"Vertex label color\",\r\n        ru: \"Цвет шрифта координат вершины\",\r\n    },\r\n    graphControls: {\r\n        en: \"Graph Controls\",\r\n        ru: \"Управление Графом\",\r\n    },\r\n    removeAllVertices: {\r\n        en: \"Remove all vertices\",\r\n        ru: \"Удалить все вершины\",\r\n    },\r\n    removeAllEdges: {\r\n        en: \"Remove all edges\",\r\n        ru: \"Удалить все грани\",\r\n    },\r\n    generateVertices: {\r\n        en: \"Generate vertices\",\r\n        ru: \"Генерировать вершины\",\r\n    },\r\n    verticesGenerationCount: {\r\n        en: \"Vertices generation count\",\r\n        ru: \"Количество генерируемых вершин\",\r\n    },\r\n    removeEdgesOnMoving: {\r\n        en: \"Remove edges on moving\",\r\n        ru: \"Удалять грани при перемещении\",\r\n    },\r\n    edgeLabelDistance: {\r\n        en: \"Edge label distance\",\r\n        ru: \"Удалённость этикетки грани\",\r\n    },\r\n    edgeLabelSize: {\r\n        en: \"Edge label size\",\r\n        ru: \"Размер этикетки грани\",\r\n    },\r\n    edgeLabelColor: {\r\n        en: \"Edge label color\",\r\n        ru: \"Цвет этикетки грани\",\r\n    },\r\n    showEdgeLabel: {\r\n        en: \"Show edge label\",\r\n        ru: \"Показывать этекетку грани\",\r\n    },\r\n    vertexSettings: {\r\n        en: \"Vertex Settings\",\r\n        ru: \"Настройка вершин\",\r\n    },\r\n    edgeSettings: {\r\n        en: \"Edge Settings\",\r\n        ru: \"Настройка граней\",\r\n    },\r\n    otherSettings: {\r\n        en: \"Other Settings\",\r\n        ru: \"Другие Настройки\",\r\n    },\r\n    settings: {\r\n        en: \"Settings\",\r\n        ru: \"Настройки\",\r\n    },\r\n    openVertexSettings: {\r\n        en: \"Open Vertex Settings\",\r\n        ru: \"Открыть настройки вершин\"\r\n    },\r\n    openEdgeSettings: {\r\n        en: \"Open Edge Settings\",\r\n        ru: \"Открыть настройки граней\"\r\n    },\r\n    openOtherSettings: {\r\n        en: \"Open Other Settings\",\r\n        ru: \"Открыть другие настройки\"\r\n    },\r\n    exitFullsceen: {\r\n        en: \"Exit fullscreen\",\r\n        ru: \"Выйти из полноэкранного режима\"\r\n    },\r\n    enterFullsceen: {\r\n        en: \"Enter fullscreen\",\r\n        ru: \"Развернуть на весь экран\"\r\n    },\r\n    pcbDrillingOptimazer: {\r\n        en: \"PCB drilling optimazer\",\r\n        ru: \"Оптимизатор сверления печатных плат\"\r\n    },\r\n    githubPage: {\r\n        en: \"GitHub page\",\r\n        ru: \"Страница на GitHub\"\r\n    },\r\n    developedUsingSvelte: {\r\n        en: \"Developed using svelte\",\r\n        ru: \"Разработано с использованием svelte\"\r\n    },\r\n    distance: {\r\n        en: \"Distance\",\r\n        ru: \"Расстояние\"\r\n    },\r\n    totalDistance: {\r\n        en: \"Total distance\",\r\n        ru: \"Общее расстояние\"\r\n    },\r\n    totalDistanceWithStart: {\r\n        en: \"Total distance with start\",\r\n        ru: \"Общее расстояние со старта\"\r\n    },\r\n    showTotalDistance: {\r\n        en: \"Show total distance\",\r\n        ru: \"Показать общее расстояние\"\r\n    },\r\n    connectVertices: {\r\n        en: \"Connect vertices\",\r\n        ru: \"Соединить вершины\"\r\n    },\r\n    connect: {\r\n        en: \"Connect\",\r\n        ru: \"Соединить\"\r\n    },\r\n    algorithms: {\r\n        en: \"Algorithms\",\r\n        ru: \"Алгоритмы\"\r\n    },\r\n    greedy: {\r\n        en: \"Greedy\",\r\n        ru: \"Жадный\"\r\n    },\r\n    prim: {\r\n        en: \"Prim\",\r\n        ru: \"Прима\"\r\n    },\r\n    salesman: {\r\n        en: \"Salesman\",\r\n        ru: \"Конвояжёры\"\r\n    },\r\n    spanningTree: {\r\n        en: \"Spanning tree\",\r\n        ru: \"Остановое дерево\"\r\n    },\r\n    lastOrder: {\r\n        en: \"Last order\",\r\n        ru: \"В текущем порядке\"\r\n    }\r\n};\r\n","<script lang=\"ts\">\r\n    export let options: {option: any, label: string, id: string}[]\r\n    export let group: any = null\r\n    export let groupName: string = \"\"\r\n    export let lang = 'en'\r\n    export let getTranslation = (lang: string, key: string) => { return key }\r\n</script>\r\n\r\n{#each options as { option, label, id }}\r\n    <div class=\"input_row\">\r\n        <div class=\"option\">\r\n            <input id=\"{id}\" type=radio bind:group={group} name=\"{groupName}\" value={option}>\r\n            <label for=\"{id}\">{getTranslation(lang, label)}</label>\r\n        </div>\r\n    </div>\r\n{/each}\r\n\r\n<style>\r\n    input[type=\"radio\"] {\r\n        position: absolute;\r\n        clip: rect(0, 0, 0, 0);\r\n    }\r\n    input[type=\"radio\"] + label::before {\r\n        content: '\\a0';\r\n        display: inline-block;\r\n        margin: .2em .5em;\r\n        width: .8em;\r\n        height: .8em;\r\n        line-height: .75em;\r\n        transition: all .5s;\r\n        border: 1px solid silver;\r\n    }\r\n    input[type=\"radio\"] + label::before {\r\n        border-radius: 50%;\r\n    }\r\n    input[type=\"radio\"]:checked + label::before {\r\n        content: '\\a0';\r\n        background: rgba(255, 255, 255, 0.3);\r\n        box-shadow: inset 0 0 0 2px silver, 0 0 0 2px rgba(255, 255, 255, 0.3);\r\n    }\r\n    .input_row {\r\n        position: relative;\r\n        left: -7px;\r\n        display: flex;\r\n    }\r\n    .input_row:not(:last-child){\r\n        margin-bottom: 5px;\r\n    }\r\n    .input_row .option {\r\n        width: 100%;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { width, height } from './game.ts'\r\n\r\n\timport { onMount } from 'svelte'\r\n\timport Canvas from './Canvas.svelte'\r\n\timport Background from './Background.svelte'\r\n\timport DotGrid from './DotGrid.svelte'\r\n\timport Graph from './Graph.svelte'\r\n\timport Text from './Text.svelte'\r\n\timport FPS from './FPS.svelte'\r\n\timport InputRange from \"./InputRange.svelte\"\r\n\timport Checkbox from \"./Checkbox.svelte\"\r\n\timport ColorSelector from \"./ColorSelector.svelte\"\r\n\timport Window from \"./Window.svelte\"\r\n\r\n\timport TRANSLATIONS from \"./translations\"\r\n\timport RadioButtons from \"./RadioButtons.svelte\"\r\n\r\n\tfunction getTranslation(lang: string, key: string) {\r\n\t\tconst phrase: { [key: string]: string } = TRANSLATIONS[key]\r\n\t\treturn Object.keys(phrase).includes(lang) ? phrase[lang] : phrase[\"en\"]\r\n\t}\r\n\r\n\tlet languages = [{option: 'en', label: 'english', id: \"en_radio\"},\r\n\t\t\t\t\t {option: 'ru', label: 'russian', id: \"ru_radio\"}]\r\n\r\n\tlet connectAlgorithmsStrings = ['greedy', 'prim', 'salesman', 'spanningTree', 'lastOrder']\r\n\r\n\tlet connectAlgorithms = connectAlgorithmsStrings.map((algorithm) => {\r\n\t\treturn {option: algorithm, label: algorithm, id: algorithm + '_radio'}\r\n\t})\r\n\r\n\tconst COLORS = [\r\n\t\t\"#fa1414\",\r\n\t\t\"#c88c64\",\r\n\t\t\"#50aa8c\",\r\n\t\t\"#0096e6\",\r\n\t\t\"#0a14e6\",\r\n\t\t\"#8200c8\",\r\n\t\t\"#fa96d2\",\r\n\t\t\"#828282\",\r\n\t\t\"green\",\r\n\t\t\"white\",\r\n\t]\r\n\r\n\tlet lang = new URLSearchParams(location.search).get(\"lang\") || \"en\"\r\n\tlet showMenu = true\r\n\tlet showFPS = true\r\n\tlet showHint = true\r\n\tlet showVertexLabel = true\r\n\tlet showEdgeLabel = true\r\n\tlet removeEdgesOnMoving = false\r\n\tlet isFullscreen = false\r\n\tlet vertexColorId = 0\r\n\tlet edgeColorId = 0\r\n\tlet vertexSize = 10\r\n\tlet edgeSize = 3\r\n\tlet vertexLabelColorId = 9\r\n\tlet vertexLabelSize = 8\r\n\tlet verticesGenerationCount = 30\r\n\tlet edgeLabelDistance = 30\r\n\tlet edgeLabelSize = 8\r\n\tlet edgeLabelColorId = 9\r\n\tlet totalDistance = '0'\r\n\tlet totalDistanceWithStart = '0'\r\n\tlet connectAlgorithm = connectAlgorithmsStrings[0]\r\n\r\n\tlet graphComponent\r\n\tlet graphClickHandler\r\n\tlet graphMouseDownHandler\r\n\tlet graphTouchStartHandler\r\n\tlet graphRemoveVerticesHandler\r\n\tlet graphRemoveEdgesHandler\r\n\tlet graphGenerateVerticesHandler\r\n\tlet graphConnectEdgesHandler\r\n\r\n\tonMount(function(){\r\n\t\tgraphClickHandler = function(ev) {\r\n\t\t\tgraphComponent.handleClick(ev)\r\n\t\t}\r\n\t\tgraphMouseDownHandler = function(ev) {\r\n\t\t\tgraphComponent.handleMouseDown(ev)\r\n\t\t}\r\n\t\tgraphTouchStartHandler = function (ev) {\r\n\t\t\tgraphComponent.handleTouchStart(ev)\r\n\t\t}\r\n\t\tgraphRemoveVerticesHandler = function() {\r\n\t\t\tgraphComponent.removeAllVertices()\r\n\t\t}\r\n\t\tgraphRemoveEdgesHandler = function() {\r\n\t\t\tgraphComponent.removeAllEdges()\r\n\t\t}\r\n\t\tgraphGenerateVerticesHandler = function() {\r\n\t\t\tgraphComponent.generateVertices()\r\n\t\t}\r\n\t\tgraphConnectEdgesHandler = function() {\r\n\t\t\tgraphComponent.connectEdges()\r\n\t\t}\r\n\t})\r\n\r\n\tenum Windows {\r\n\t\tVertexSettings,\r\n\t\tEdgeSettings,\r\n\t\tOtherSettings,\r\n\t\tAbout,\r\n\t\tTotalDistance,\r\n\t\tConnectVertices,\r\n\t\tSize,\r\n\t}\r\n\r\n\tlet windowsOrder = [...Array(Windows.Size).keys()]\r\n\tlet windowsStatus = new Array<boolean>(Windows.Size)\r\n\twindowsStatus.fill(false)\r\n\r\n\tfunction makeWindowActive(window: Windows) {\r\n\t\twindowsStatus[window] = true\r\n\r\n\t\tfor (let i = 0; i < windowsOrder.length; i++) {\r\n\t\t\tif (windowsOrder[i] > windowsOrder[window]) {\r\n\t\t\t\twindowsOrder[i] -= 1\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindowsOrder[window] = Windows.Size - 1\r\n\t}\r\n\r\n\tfunction makeWindowInactive(window: Windows) {\r\n\t\twindowsStatus[window] = false\r\n\r\n\t\tfor (let i = 0; i < windowsOrder.length; i++) {\r\n\t\t\tif (windowsOrder[i] < windowsOrder[window]) {\r\n\t\t\t\twindowsOrder[i] += 1\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindowsOrder[window] = 0\r\n\t}\r\n\r\n\tfunction switchFullscreen() {\r\n\t\tif (document.fullscreenElement) {\r\n\t\t\tdocument.exitFullscreen()\r\n\t\t\t\t.then(function() {\r\n\t\t\t\t\t// element has exited fullscreen mode\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t// element could not exit fullscreen mode\r\n\t\t\t\t\t// error message\r\n\t\t\t\t\tconsole.log(error.message);\r\n\t\t\t\t})\r\n\r\n\t\t\tisFullscreen = false\r\n\t\t} else {\r\n\t\t\tdocument.documentElement.requestFullscreen()\r\n\t\t\t\t.then(function() {\r\n\t\t\t\t\t// element has entered fullscreen mode successfully\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t// element could not enter fullscreen mode\r\n\t\t\t\t\t// error message\r\n\t\t\t\t\tconsole.log(error.message);\r\n\t\t\t\t})\r\n\r\n\t\t\tisFullscreen = true\r\n\t\t}\r\n\t}\r\n\r\n</script>\r\n\r\n<Canvas\r\n\t\tonClick={graphClickHandler}\r\n\t\tonMouseDown={graphMouseDownHandler}\r\n\t\tonTouchStart={graphTouchStartHandler}\r\n>\r\n\t<Background color='hsl(0, 0%, 10%)'>\r\n\t\t<DotGrid divisions={30} color='hsla(0, 0%, 100%, 0.5)' />\r\n\t</Background>\r\n\t<Graph\r\n\t\t\tbind:this={graphComponent}\r\n\t\t\tbind:totalDistance={totalDistance}\r\n\t\t\tbind:totalDistanceWithStart={totalDistanceWithStart}\r\n\t\t\tvertexColor={COLORS[vertexColorId]}\r\n\t\t\tedgeColor={COLORS[edgeColorId]}\r\n\t\t\tvertexSize={vertexSize}\r\n\t\t\tedgeSize={edgeSize}\r\n\t\t\tshowVertexLabel={showVertexLabel}\r\n\t\t\tremoveEdgesOnMoving={removeEdgesOnMoving}\r\n\t\t\tvertexLabelSize={vertexLabelSize}\r\n\t\t\tvertexLabelColor={COLORS[vertexLabelColorId]}\r\n\t\t\tverticesGenerationCount={verticesGenerationCount}\r\n\t\t\tshowEdgeLabel={showEdgeLabel}\r\n\t\t\tedgeLabelColor={COLORS[edgeLabelColorId]}\r\n\t\t\tedgeLabelSize={edgeLabelSize}\r\n\t\t\tedgeLabelDistance={edgeLabelDistance}\r\n\t\t\tconnectAlgorithm={connectAlgorithm}\r\n\t/>\r\n\t<Text\r\n\t\t\tshow={showHint}\r\n\t\t\ttext={getTranslation(lang, 'addHint')}\r\n\t\t\tfontSize={12}\r\n\t\t\talign='right'\r\n\t\t\tbaseline='bottom'\r\n\t\t\tx={$width - 20}\r\n\t\t\ty={$height - 20}\r\n\t/>\r\n\t<FPS show={showFPS} />\r\n</Canvas>\r\n<div class=\"controls\" class:controls_opened={showMenu}>\r\n\t{#if showMenu}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.About)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"about\")}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button on:click={() => (showMenu = false)}>\r\n\t\t\t\t\t{getTranslation(lang, \"hideMenu\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"graphControls\")}\r\n\t\t\t</h2>\r\n\t\t\t<Checkbox\r\n\t\t\t\t\ttitle={getTranslation(lang, \"removeEdgesOnMoving\")}\r\n\t\t\t\t\tbind:checked={removeEdgesOnMoving}\r\n\t\t\t/>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={graphRemoveVerticesHandler}>\r\n\t\t\t\t\t{getTranslation(lang, \"removeAllVertices\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={graphRemoveEdgesHandler}>\r\n\t\t\t\t\t{getTranslation(lang, \"removeAllEdges\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={graphGenerateVerticesHandler}>\r\n\t\t\t\t\t{getTranslation(lang, \"generateVertices\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation(lang, \"verticesGenerationCount\")}\r\n\t\t\t\t\tmin={2}\r\n\t\t\t\t\tmax={100}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tbind:value={verticesGenerationCount}\r\n\t\t\t/>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.ConnectVertices)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"connectVertices\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.TotalDistance)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"showTotalDistance\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"settings\")}\r\n\t\t\t</h2>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.VertexSettings)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"openVertexSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.EdgeSettings)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"openEdgeSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.OtherSettings)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"openOtherSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<button on:click={() => (showMenu = true)}>\r\n\t\t\t{getTranslation(lang, \"showMenu\")}\r\n\t\t</button>\r\n\t{/if}\r\n</div>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'vertexSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.VertexSettings]}\r\n\t\tzIndex={windowsOrder[Windows.VertexSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.VertexSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.VertexSettings) }}\r\n>\r\n\t<Checkbox\r\n\t\t\ttitle={getTranslation(lang, \"showVertexLabel\")}\r\n\t\t\tbind:checked={showVertexLabel}\r\n\t/>\r\n\t<InputRange\r\n\t\t\tname={getTranslation(lang, \"vertexSize\")}\r\n\t\t\tmin={5}\r\n\t\t\tmax={20}\r\n\t\t\tstep={0.3}\r\n\t\t\tbind:value={vertexSize}\r\n\t/>\r\n\t{#if showVertexLabel}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"vertexLabelSize\")}\r\n\t\t\t\tmin={8}\r\n\t\t\t\tmax={16}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={vertexLabelSize}\r\n\t\t/>\r\n\t{/if}\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, \"vertexColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tcolors={COLORS}\r\n\t\t\t\tbind:selectedId={vertexColorId}\r\n\t\t/>\r\n\t</div>\r\n\t{#if showVertexLabel}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"vertexLabelColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={vertexLabelColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'edgeSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.EdgeSettings]}\r\n\t\tzIndex={windowsOrder[Windows.EdgeSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.EdgeSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.EdgeSettings) }}\r\n>\r\n\t<Checkbox\r\n\t\t\ttitle={getTranslation(lang, \"showEdgeLabel\")}\r\n\t\t\tbind:checked={showEdgeLabel}\r\n\t/>\r\n\t<InputRange\r\n\t\t\tname={getTranslation(lang, \"edgeSize\")}\r\n\t\t\tmin={1}\r\n\t\t\tmax={10}\r\n\t\t\tstep={0.3}\r\n\t\t\tbind:value={edgeSize}\r\n\t/>\r\n\t{#if showEdgeLabel}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"edgeLabelSize\")}\r\n\t\t\t\tmin={8}\r\n\t\t\t\tmax={16}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={edgeLabelSize}\r\n\t\t/>\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"edgeLabelDistance\")}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={40}\r\n\t\t\t\tstep={0.3}\r\n\t\t\t\tbind:value={edgeLabelDistance}\r\n\t\t/>\r\n\t{/if}\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, \"edgeColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tcolors={COLORS}\r\n\t\t\t\tbind:selectedId={edgeColorId}\r\n\t\t/>\r\n\t</div>\r\n\t{#if showEdgeLabel}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"edgeLabelColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={edgeLabelColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'otherSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.OtherSettings]}\r\n\t\tzIndex={windowsOrder[Windows.OtherSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.OtherSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.OtherSettings) }}\r\n>\r\n\t<div class=\"controls-block\">\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"showFPS\")}\r\n\t\t\t\tbind:checked={showFPS}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"showHint\")}\r\n\t\t\t\tbind:checked={showHint}\r\n\t\t/>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, 'language')}\r\n\t\t</h2>\r\n\t\t<RadioButtons\r\n\t\t\t\toptions={languages}\r\n\t\t\t\tbind:group={lang}\r\n\t\t\t\tgroupName=\"lang\"\r\n\t\t\t\tgetTranslation={getTranslation}\r\n\t\t\t\tlang={lang}\r\n\t\t/>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t<button on:click={switchFullscreen}>\r\n\t\t\t\t{#if isFullscreen}\r\n\t\t\t\t\t{getTranslation(lang, 'exitFullsceen')}\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t{getTranslation(lang, 'enterFullsceen')}\r\n\t\t\t\t{/if}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'about')}\"\r\n\t\tisOpened={windowsStatus[Windows.About]}\r\n\t\tzIndex={windowsOrder[Windows.About]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.About) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.About) }}\r\n>\r\n\t<p style=\"text-align: center\">\r\n\t\t{getTranslation(lang, 'pcbDrillingOptimazer')}<br>\r\n\t\t<a\r\n\t\t\t\thref=\"https://github.com/ITsJust4Fun/DrillingOptimizer\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t>\r\n\t\t\t{getTranslation(lang, 'githubPage')}\r\n\t\t</a>\r\n\t</p>\r\n\t<p style=\"text-align: center\">{getTranslation(lang, 'developedUsingSvelte')}</p>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'distance')}\"\r\n\t\tisOpened={windowsStatus[Windows.TotalDistance]}\r\n\t\tzIndex={windowsOrder[Windows.TotalDistance]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.TotalDistance) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.TotalDistance) }}\r\n>\r\n\t<div>\r\n\t\t{getTranslation(lang, 'totalDistance')}: {totalDistance}\r\n\t</div>\r\n\t<div>\r\n\t\t{getTranslation(lang, 'totalDistanceWithStart')}: {totalDistanceWithStart}\r\n\t</div>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'connectVertices')}\"\r\n\t\tisOpened={windowsStatus[Windows.ConnectVertices]}\r\n\t\tzIndex={windowsOrder[Windows.ConnectVertices]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.ConnectVertices) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.ConnectVertices) }}\r\n>\r\n\t<h2 class=\"controls-block__title\">\r\n\t\t{getTranslation(lang, 'algorithms')}\r\n\t</h2>\r\n\t<RadioButtons\r\n\t\t\toptions={connectAlgorithms}\r\n\t\t\tbind:group={connectAlgorithm}\r\n\t\t\tgroupName=\"connectAlgorithm\"\r\n\t\t\tgetTranslation={getTranslation}\r\n\t\t\tlang={lang}\r\n\t/>\r\n\t<div class=\"controls-block\">\r\n\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t<button on:click={graphConnectEdgesHandler}>\r\n\t\t\t\t{getTranslation(lang, 'connect')}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</Window>\r\n\r\n<svelte:window\r\n\t\ton:fullscreenchange={() => { isFullscreen = document.fullscreenElement !== null }}\r\n/>\r\n\r\n<style>\r\n\t:global(body) {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\tbutton {\r\n\t\tpadding: 8px 15px;\r\n\t\tcolor: inherit;\r\n\t\tfont-size: 13px;\r\n\t\t/* white-space: nowrap; */\r\n\t\t/* overflow: hidden;\r\n        text-overflow: ellipsis; */\r\n\t}\r\n\t.controls {\r\n\t\toverflow-y: scroll;\r\n\t\tbox-shadow: 0 0 10px 0 black;\r\n\t\t/* display: flex; */\r\n\t\t/* flex-direction: row; */\r\n\t\tposition: fixed;\r\n\t\t/* width: 300px; */\r\n\t\tmax-height: calc(100% - 40px);\r\n\t\tright: 20px;\r\n\t\ttop: 20px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\r\n\t\t/* padding: 10px; */\r\n\t\tborder-radius: 5px;\r\n\t\tbackdrop-filter: blur(8px);\r\n\t\t-webkit-backdrop-filter: blur(8px);\r\n\t\t-ms-overflow-style: none; /* IE and Edge */\r\n\t\tscrollbar-width: none; /* Firefox */\r\n\t\ttransition-duration: 0.2s;\r\n\t}\r\n\t.controls::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.controls_opened {\r\n\t\tpadding: 10px;\r\n\t\twidth: 300px;\r\n\t\tborder-radius: 10px;\r\n\t}\r\n\t.controls-block > * {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t.controls-block:not(:last-child) {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\t.controls-block__title {\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: 5px;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 100%;\r\n\t}\r\n\t.buttons-row {\r\n\t\tdisplay: flex;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t.buttons-row button {\r\n\t\twidth: 100%;\r\n\t}\r\n\t@supports (not (backdrop-filter: blur())) and\r\n    (not (-webkit-backdrop-filter: blur())) {\r\n\t\t.controls {\r\n\t\t\tbackground-color: rgba(150, 150, 150, 0.95);\r\n\t\t}\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","bind","index","props","bound","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","width","innerWidth","height","innerHeight","pixelRatio","devicePixelRatio","canvas","time","list","array","reduce","dict","deriveObject","Symbol","renderable","render","api","get","getContext","mounted","setup","remove","preventDefault","call","frame","killLoopOnError","attributes","onClick","ev","onMouseDown","onTouchStart","listeners","canvasStore","contextStore","entity","$props","elapsed","lastTime","performance","now","loop","requestAnimationFrame","beginTime","dt","cancelAnimationFrame","createLoop","save","scale","$pixelRatio","err","console","error","warn","restore","setContext","idx","color","clearRect","fillStyle","fillRect","divisions","pointSize","aspect","y","beginPath","x","u","v","px","py","arc","PI","getRandomInt","min","floor","random","getDistance","vertexI","vertexJ","x1","x2","y1","y2","sqrt","vertexColor","edgeColor","vertexSize","edgeSize","showVertexLabel","removeEdgesOnMoving","vertexLabelColor","vertexLabelSize","verticesGenerationCount","showEdgeLabel","edgeLabelDistance","edgeLabelSize","edgeLabelColor","totalDistance","totalDistanceWithStart","connectAlgorithm","vertices","edges","startPosition","mouse","movingVertexId","mouseDown","handleMouseDown","nearest","getNearestVertex","clientX","clientY","Date","handleMouseMove","movementX","movementY","$width","$height","removeAllEdges","calculateDistances","edge","drawLine","j","vertex","lineCap","strokeStyle","lineWidth","drawVertexLabel","round","drawEdgeLabel","previousTouch","removeAllVertices","fillEdges","totalDistanceCount","totalDistanceWithStartCount","at","toString","font","textAlign","textBaseline","fillText","moveTo","lineTo","stroke","label","String","thetaVertices","cx","cy","ex","ey","dy","dx","theta","atan2","angle","radius","resultX","cos","resultY","sin","translate","rotate","verticesList","nearestIndex","nearestValue","touch","touches","pageX","pageY","attempts","log","show","align","baseline","fontSize","fontFamily","frames","prevTime","state","toFixed","step","title","checked","entries","invertColor","hex","parseInt","colors","selectedId","checkmarkColor","idAndColor","isOpened","zIndex","onCloseHandler","onClickHandler","isMouseDown","isFirstRender","outOfBoundLimitX","outOfBoundLimitY","checkPosition","clientWidth","clientHeight","classes","className","some","includes","language","en","ru","english","russian","showMenu","hideMenu","addHint","showHint","about","graphicalSettings","showFPS","graphControls","generateVertices","vertexSettings","edgeSettings","otherSettings","settings","openVertexSettings","openEdgeSettings","openOtherSettings","exitFullsceen","enterFullsceen","pcbDrillingOptimazer","githubPage","developedUsingSvelte","distance","showTotalDistance","connectVertices","connect","algorithms","greedy","prim","salesman","spanningTree","lastOrder","group","groupName","lang","getTranslation","VertexSettings","EdgeSettings","OtherSettings","About","TotalDistance","ConnectVertices","connectAlgorithmsStrings","connectAlgorithms","algorithm","option","id","graphComponent","graphClickHandler","graphMouseDownHandler","graphTouchStartHandler","graphRemoveVerticesHandler","graphRemoveEdgesHandler","graphGenerateVerticesHandler","graphConnectEdgesHandler","URLSearchParams","location","search","isFullscreen","vertexColorId","edgeColorId","vertexLabelColorId","edgeLabelColorId","Windows","handleClick","handleTouchStart","connectEdges","windowsOrder","Size","windowsStatus","makeWindowActive","makeWindowInactive","phrase","TRANSLATIONS","fullscreenElement","exitFullscreen","catch","message","documentElement","requestFullscreen","body"],"mappings":"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"}
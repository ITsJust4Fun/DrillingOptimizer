{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/game.ts","../../src/Canvas.svelte","../../src/Background.svelte","../../src/DotGrid.svelte","../../src/Text.svelte","../../node_modules/gl-vec2/epsilon.js","../../node_modules/gl-vec2/create.js","../../node_modules/gl-vec2/clone.js","../../node_modules/gl-vec2/fromValues.js","../../node_modules/gl-vec2/copy.js","../../node_modules/gl-vec2/set.js","../../node_modules/gl-vec2/equals.js","../../node_modules/gl-vec2/exactEquals.js","../../node_modules/gl-vec2/add.js","../../node_modules/gl-vec2/subtract.js","../../node_modules/gl-vec2/sub.js","../../node_modules/gl-vec2/multiply.js","../../node_modules/gl-vec2/mul.js","../../node_modules/gl-vec2/divide.js","../../node_modules/gl-vec2/div.js","../../node_modules/gl-vec2/inverse.js","../../node_modules/gl-vec2/min.js","../../node_modules/gl-vec2/max.js","../../node_modules/gl-vec2/rotate.js","../../node_modules/gl-vec2/floor.js","../../node_modules/gl-vec2/ceil.js","../../node_modules/gl-vec2/round.js","../../node_modules/gl-vec2/scale.js","../../node_modules/gl-vec2/scaleAndAdd.js","../../node_modules/gl-vec2/distance.js","../../node_modules/gl-vec2/dist.js","../../node_modules/gl-vec2/squaredDistance.js","../../node_modules/gl-vec2/sqrDist.js","../../node_modules/gl-vec2/length.js","../../node_modules/gl-vec2/len.js","../../node_modules/gl-vec2/squaredLength.js","../../node_modules/gl-vec2/sqrLen.js","../../node_modules/gl-vec2/negate.js","../../node_modules/gl-vec2/normalize.js","../../node_modules/gl-vec2/dot.js","../../node_modules/gl-vec2/cross.js","../../node_modules/gl-vec2/lerp.js","../../node_modules/gl-vec2/random.js","../../node_modules/gl-vec2/transformMat2.js","../../node_modules/gl-vec2/transformMat2d.js","../../node_modules/gl-vec2/transformMat3.js","../../node_modules/gl-vec2/transformMat4.js","../../node_modules/gl-vec2/forEach.js","../../node_modules/gl-vec2/limit.js","../../node_modules/gl-vec2/index.js","../../src/Drill.svelte","../../src/PriorityNode.ts","../../src/PriorityQueue.ts","../../src/salesman/index.js","../../src/Graph.svelte","../../src/FPS.svelte","../../src/InputRange.svelte","../../src/Checkbox.svelte","../../src/ColorSelector.svelte","../../src/Window.svelte","../../src/translations.ts","../../src/RadioButtons.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getContext, onMount } from 'svelte';\r\nimport { writable, derived } from 'svelte/store';\r\n// Some props for the app\r\nexport const width = writable(window.innerWidth);\r\nexport const height = writable(window.innerHeight);\r\nexport const pixelRatio = writable(window.devicePixelRatio);\r\nexport const context = writable();\r\nexport const canvas = writable();\r\nexport const time = writable(0);\r\n// A more convenient store for grabbing all game props\r\nexport const props = deriveObject({\r\n    context,\r\n    canvas,\r\n    width,\r\n    height,\r\n    pixelRatio,\r\n    time\r\n});\r\nexport const key = Symbol();\r\nexport const getState = () => {\r\n    const api = getContext(key);\r\n    return api.getState();\r\n};\r\nexport const renderable = (render) => {\r\n    const api = getContext(key);\r\n    const element = {\r\n        ready: false,\r\n        mounted: false\r\n    };\r\n    if (typeof render === 'function') {\r\n        element.render = render;\r\n    }\r\n    else if (render) {\r\n        if (render.render)\r\n            element.render = render.render;\r\n        if (render.setup)\r\n            element.setup = render.setup;\r\n    }\r\n    api.add(element);\r\n    onMount(() => {\r\n        element.mounted = true;\r\n        return () => {\r\n            api.remove(element);\r\n            element.mounted = false;\r\n        };\r\n    });\r\n};\r\nfunction deriveObject(obj) {\r\n    const keys = Object.keys(obj);\r\n    const list = keys.map(key => {\r\n        return obj[key];\r\n    });\r\n    return derived(list, (array) => {\r\n        return array.reduce((dict, value, i) => {\r\n            dict[keys[i]] = value;\r\n            return dict;\r\n        }, {});\r\n    });\r\n}\r\n","<script>\n\timport { onMount, onDestroy, setContext } from 'svelte';\n\n\timport {\n\t\tkey,\n\t\twidth,\n\t\theight,\n\t\tcanvas as canvasStore,\n\t\tcontext as contextStore,\n\t\tpixelRatio,\n\t\tprops,\n\t\ttime\n\t} from './game.js';\n\n\texport let killLoopOnError = true;\n\texport let attributes = {};\n\texport let onClick = (ev) => {}\n\texport let onMouseDown = (ev) => {}\n\texport let onTouchStart = (ev) => {}\n\t\n\tlet listeners = [];\n\tlet canvas;\n\tlet context;\n\tlet frame;\n\n\tonMount(() => {\n\t\t// prepare canvas stores\n\t\tcontext = canvas.getContext('2d', attributes);\n\t\tcanvasStore.set(canvas);\n\t\tcontextStore.set(context);\n\n\t\t// setup entities\n\t\tlisteners.forEach(async entity => {\n\t\t\tif (entity.setup) {\n\t\t\t\tlet p = entity.setup($props);\n\t\t\t\tif (p && p.then) await p;\n\t\t\t}\n\t\t\tentity.ready = true;\n\t\t});\n\t\t\n\t\t// start game loop\n\t\treturn createLoop((elapsed, dt) => {\n\t\t\ttime.set(elapsed);\n\t\t\trender(dt);\n\t\t});\n\t});\n\t\n\tsetContext(key, {\n\t\tadd (fn) {\n\t\t\tthis.remove(fn);\n\t\t\tlisteners.push(fn);\n\t\t},\n\t\tremove (fn) {\n\t\t\tconst idx = listeners.indexOf(fn);\n\t\t\tif (idx >= 0) listeners.splice(idx, 1);\n\t\t}\n\t});\n\t\n\tfunction render (dt) {\n\t\tcontext.save();\n\t\tcontext.scale($pixelRatio, $pixelRatio);\n\t\tlisteners.forEach(entity => {\n\t\t\ttry {\n\t\t\t\tif (entity.mounted && entity.ready && entity.render) {\n\t\t\t\t\tentity.render($props, dt);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\tif (killLoopOnError) {\n\t\t\t\t\tcancelAnimationFrame(frame);\n\t\t\t\t\tconsole.warn('Animation loop stopped due to an error');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tcontext.restore();\n\t}\n\t\n\tfunction handleResize () {\n\t\twidth.set(window.innerWidth);\n\t\theight.set(window.innerHeight);\n\t\tpixelRatio.set(window.devicePixelRatio);\n\t}\n\t\n\tfunction createLoop (fn) {\n\t\tlet elapsed = 0;\n\t\tlet lastTime = performance.now();\n\t\t(function loop() {\n\t\t\tframe = requestAnimationFrame(loop);\n\t\t\tconst beginTime = performance.now();\n\t\t\tconst dt = (beginTime - lastTime) / 1000;\n\t\t\tlastTime = beginTime;\n\t\t\telapsed += dt;\n\t\t\tfn(elapsed, dt);\n\t\t})();\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(frame);\n\t\t};\n\t}\n</script>\n\n<canvas\n\tbind:this={canvas}\n\ton:click|preventDefault={onClick}\n\ton:mousedown={onMouseDown}\n\ton:touchstart={onTouchStart}\n\twidth={$width * $pixelRatio}\n\theight={$height * $pixelRatio}\n\tstyle=\"width: {$width}px; height: {$height}px;\"></canvas>\n\n<svelte:window on:resize|passive={handleResize} />\n\n<slot></slot>\n","<script>\n\timport { renderable } from './game.ts';\n\texport let color = null;\n\t\n\trenderable(props => {\n\t\tconst { context, width, height } = props;\n\t\tcontext.clearRect(0, 0, width, height);\n\t\tif (color) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fillRect(0, 0, width, height);\n\t\t}\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>\n","<script>\n\timport { renderable } from './game.js';\n\t\n\texport let color = 'black';\n\texport let divisions = 20;\n\texport let pointSize = 1;\n\n\trenderable(props => {\n\t\tconst { context, width, height } = props;\n\t\tconst aspect = width / height;\n\t\t\n\t\tcontext.save();\n\t\tfor (let y = 0; y < divisions; y++) {\n\t\t\tcontext.beginPath();\n\t\t\tfor (let x = 0; x < divisions; x++) {\n\t\t\t\tconst u = divisions <= 1 ? 0.5 : x / (divisions - 1);\n\t\t\t\tconst v = divisions <= 1 ? 0.5 : y / (divisions - 1);\n\n\t\t\t\tlet px, py;\n\t\t\t\tif (width > height) {\n\t\t\t\t\tpx = u * width;\n\t\t\t\t\tpy = (v * aspect) * height;\n\t\t\t\t} else {\n\t\t\t\t\tpx = (u / aspect) * width;\n\t\t\t\t\tpy = v * height;\n\t\t\t\t}\n\t\t\t\tcontext.arc(px, py, pointSize, 0, Math.PI * 2);\n\t\t\t}\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fill();\n\t\t}\n\t\tcontext.restore();\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>","<script lang=\"ts\">\n\timport { renderable } from './game.js'\n\n    export let show = true\n\t\n\texport let color = 'hsl(0, 0%, 100%)'\n\texport let align = 'center'\n\texport let baseline = 'middle'\n\t\n\texport let text = ''\n\texport let x = 0\n\texport let y = 0\n\t\n\texport let fontSize = 16\n\texport let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\n\t\n\trenderable(props => {\n\t\tconst { context, width, height } = props\n\t\tif (text && show) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.font = `${fontSize}px ${fontFamily}`\n\t\t\tcontext.textAlign = align;\n\t\t\tcontext.textBaseline = baseline;\t\t\n\t\t\tcontext.fillText(text, x, y);\n\t\t}\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>\n","module.exports = 0.000001\n","module.exports = create\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n    var out = new Float32Array(2)\n    out[0] = 0\n    out[1] = 0\n    return out\n}","module.exports = clone\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(2)\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = fromValues\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n    var out = new Float32Array(2)\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = copy\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = set\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var b0 = b[0]\n  var b1 = b[1]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)))\n}\n","module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1]\n}\n","module.exports = add\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    return out\n}","module.exports = subtract\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    return out\n}","module.exports = require('./subtract')\n","module.exports = multiply\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    return out\n}","module.exports = require('./multiply')\n","module.exports = divide\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    return out\n}","module.exports = require('./divide')\n","module.exports = inverse\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  return out\n}\n","module.exports = min\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    return out\n}","module.exports = max\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    return out\n}","module.exports = rotate\n\n/**\n * Rotates a vec2 by an angle\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to rotate\n * @param {Number} angle the angle of rotation (in radians)\n * @returns {vec2} out\n */\nfunction rotate(out, a, angle) {\n  var c = Math.cos(angle),\n      s = Math.sin(angle)\n  var x = a[0],\n      y = a[1]\n\n  out[0] = x * c - y * s\n  out[1] = x * s + y * c\n\n  return out\n}\n\n","module.exports = floor\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  return out\n}\n","module.exports = ceil\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  return out\n}\n","module.exports = round\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  return out\n}\n","module.exports = scale\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    return out\n}","module.exports = scaleAndAdd\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    return out\n}","module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./distance')\n","module.exports = squaredDistance\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredDistance')\n","module.exports = length\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./length')\n","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredLength')\n","module.exports = negate\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    return out\n}","module.exports = normalize\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1]\n    var len = x*x + y*y\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n    }\n    return out\n}","module.exports = dot\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1]\n}","module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    return out\n}","module.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n    var r = Math.random() * 2.0 * Math.PI\n    out[0] = Math.cos(r) * scale\n    out[1] = Math.sin(r) * scale\n    return out\n}","module.exports = transformMat2\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y\n    out[1] = m[1] * x + m[3] * y\n    return out\n}","module.exports = transformMat2d\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y + m[4]\n    out[1] = m[1] * x + m[3] * y + m[5]\n    return out\n}","module.exports = transformMat3\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[3] * y + m[6]\n    out[1] = m[1] * x + m[4] * y + m[7]\n    return out\n}","module.exports = transformMat4\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], \n        y = a[1]\n    out[0] = m[0] * x + m[4] * y + m[12]\n    out[1] = m[1] * x + m[5] * y + m[13]\n    return out\n}","module.exports = forEach\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n    var i, l\n    if(!stride) {\n        stride = 2\n    }\n\n    if(!offset) {\n        offset = 0\n    }\n    \n    if(count) {\n        l = Math.min((count * stride) + offset, a.length)\n    } else {\n        l = a.length\n    }\n\n    for(i = offset; i < l; i += stride) {\n        vec[0] = a[i]\n        vec[1] = a[i+1]\n        fn(vec, vec, arg)\n        a[i] = vec[0]\n        a[i+1] = vec[1]\n    }\n    \n    return a\n}","module.exports = limit;\n\n/**\n * Limit the magnitude of this vector to the value used for the `max`\n * parameter.\n *\n * @param  {vec2} the vector to limit\n * @param  {Number} max the maximum magnitude for the vector\n * @returns {vec2} out\n */\nfunction limit(out, a, max) {\n  var mSq = a[0] * a[0] + a[1] * a[1];\n\n  if (mSq > max * max) {\n    var n = Math.sqrt(mSq);\n    out[0] = a[0] / n * max;\n    out[1] = a[1] / n * max;\n  } else {\n    out[0] = a[0];\n    out[1] = a[1];\n  }\n\n  return out;\n}\n","module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , inverse: require('./inverse')\n  , min: require('./min')\n  , max: require('./max')\n  , rotate: require('./rotate')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat2: require('./transformMat2')\n  , transformMat2d: require('./transformMat2d')\n  , transformMat3: require('./transformMat3')\n  , transformMat4: require('./transformMat4')\n  , forEach: require('./forEach')\n  , limit: require('./limit')\n}\n","<script>\n\timport { renderable } from './game.js'\n\timport Text from './Text.svelte'\n\timport vec2 from 'gl-vec2'\n\n\texport let isShow = true\n\texport let isShowLabel = true\n\texport let drillColor = '#419e5a'\n\texport let normalColor = '#ffe554'\n\texport let size = 10\n\texport let thickness = 3\n\texport let moveTo = [ 0, 0 ]\n\texport let isSpinEnabled = false\n\texport let isFinished = true\n\texport let moveSpeed = 0.1\n\texport let spinSpeed = 0.5\n\texport let rotationsCount = 50\n\texport let labelSize = 8\n\texport let labelColor = 'hsl(0, 0%, 100%)'\n\t\n\tlet text\n\t\n\tlet x = 0\n\tlet y = 0\n\tlet velocity = [ 0, 0 ]\n\tlet lastNormal = [ 1, 0 ]\n\n\tlet isSpin = false\n\tlet spinOffset = 0\n\tlet rotationsCompleted = 0\n\t\n\trenderable((props, dt) => {\n\t\tconst { context, width, height } = props\n\n\t\tif (!isShow) {\n\t\t\ttext.$set({\n\t\t\t\ttext: '',\n\t\t\t\tx,\n\t\t\t\ty: y + size + 10\n\t\t\t})\n\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlet position = [ x, y ]\n\t\tif (!isFinished) {\n\t\t\tconst delta = vec2.sub([], moveTo, position)\n\t\t\tvec2.normalize(delta, delta)\n\t\t\tvec2.scaleAndAdd(velocity, velocity, delta, moveSpeed)\n\t\t}\n\t\t\n\t\tif (x < 0 || x > width) {\n\t\t\tvelocity = [ 0, 0 ]\n\t\t}\n\n\t\tif (y < 0 || y > height) {\n\t\t\tvelocity = [ 0, 0 ]\n\t\t}\n\n\t\tx += velocity[0]\n\t\ty += velocity[1]\n\t\t\n\t\tposition[0] = x\n\t\tposition[1] = y\n\n\t\tconst delta = vec2.sub([], moveTo, position)\n\n\t\tif (checkDistance(delta, 0) && checkDistance(delta, 1)) {\n\t\t\tstop()\n\t\t}\n\n\t\tcontext.lineCap = 'round'\n\n\t\tcontext.beginPath()\n\t\tcontext.fillStyle = drillColor\n\t\tcontext.strokeStyle = drillColor\n\t\tcontext.lineWidth = thickness\n\t\tcontext.arc(x, y, size, 0, Math.PI * 2)\n\t\tcontext.fill()\n\n\t\tlet normal\n\t\t\n\t\tif (vec2.squaredLength(velocity) > 0) {\n\t\t\tnormal = vec2.normalize([], velocity)\n\t\t\tlastNormal = normal\n\t\t} else {\n\t\t\tnormal = lastNormal\n\t\t}\n\n\t\tcontext.fillStyle = normalColor\n\t\tcontext.strokeStyle = normalColor\n\t\tcontext.lineWidth = thickness\n\n\t\tif (isSpin) {\n\t\t\tspin(context, normal)\n\t\t} else {\n\t\t\tdrawNormal(context, position, normal, size)\n\t\t}\n\n\t\t// We use this to make sure the text is in sync with the character\n\t\t// Because regular prop reactivity happens a frame too late\n\t\tif (isShowLabel) {\n\t\t\ttext.$set({\n\t\t\t\ttext: `(${position.map(n => Math.round(n)).join(', ')})`,\n\t\t\t\tx,\n\t\t\t\ty: y + size + 10\n\t\t\t})\n\t\t} else {\n\t\t\ttext.$set({\n\t\t\t\ttext: '',\n\t\t\t\tx,\n\t\t\t\ty: y + size + 10\n\t\t\t})\n\t\t}\n\t})\n\t\n\tfunction drawNormal(context, position, normal, length) {\n\t\tconst point = vec2.scaleAndAdd([], position, normal, length)\n\t\tcontext.beginPath()\n\t\tcontext.moveTo(position[0], position[1])\n\t\tcontext.lineTo(point[0], point[1])\n\t\tcontext.stroke()\n\t}\n\n\tfunction stop() {\n\t\tx = moveTo[0]\n\t\ty = moveTo[1]\n\n\t\tvelocity = [ 0, 0 ]\n\n\t\tif (isSpinEnabled) {\n\t\t\tif (!isFinished) {\n\t\t\t\tisSpin = true\n\t\t\t}\n\t\t} else {\n\t\t\tisFinished = true\n\t\t}\n\t}\n\n\tfunction spin(context, normal) {\n\n\t\tlet theta = angle(0, 0, normal[0], normal[1]) + spinOffset\n\t\tlet resultX = Math.cos(theta)\n\t\tlet resultY = Math.sin(theta)\n\n\t\tdrawNormal(context, [ x, y ], vec2.normalize([], [ resultX, resultY ]), size)\n\n\t\tlet isFinishingRotation = (spinOffset + spinSpeed) - 2 * Math.PI > 0.01\n\n\t\tif (!isFinishingRotation) {\n\t\t\tspinOffset += spinSpeed\n\t\t} else {\n\t\t\tspinOffset = 0\n\t\t\trotationsCompleted++\n\n\t\t\tif (rotationsCompleted >= rotationsCount) {\n\t\t\t\trotationsCompleted = 0\n\t\t\t\tisSpin = false\n\t\t\t\tisFinished = true\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction checkDistance(delta, index) {\n\t\tlet zone = Math.abs(velocity[index])\n\t\tzone = zone !== 0 ? zone : 1\n\n\t\treturn Math.abs(delta[index]) < zone\n\t}\n\n\tfunction angle(cx, cy, ex, ey) {\n\t\tlet dy = ey - cy\n\t\tlet dx = ex - cx\n\t\treturn Math.atan2(dy, dx) // range (-PI, PI]\n\t}\n</script>\n\n<Text\n\tfontSize={labelSize}\n\tcolor={labelColor}\n\tbaseline='top'\n\tbind:this={text}\n/>\n\n<slot></slot>\n","export class PriorityNode {\r\n    constructor(value, priority) {\r\n        this.value = value;\r\n        this.priority = priority;\r\n    }\r\n}\r\n","import { PriorityNode } from './PriorityNode';\r\nexport class PriorityQueue {\r\n    enqueue(value, priority) {\r\n        const node = new PriorityNode(value, priority);\r\n        if (!this.head) {\r\n            this.head = this.tail = node;\r\n        }\r\n        else {\r\n            let previous = this.head;\r\n            if (previous.priority > priority) {\r\n                node.next = previous;\r\n                this.head = node;\r\n                return node;\r\n            }\r\n            let next = previous === null || previous === void 0 ? void 0 : previous.next;\r\n            while (previous && next) {\r\n                if (next.priority > priority) {\r\n                    node.next = next;\r\n                    previous.next = node;\r\n                    return node;\r\n                }\r\n                previous = previous.next;\r\n                next = next.next;\r\n            }\r\n            this.tail.next = node;\r\n            this.tail = node;\r\n        }\r\n        return node;\r\n    }\r\n    dequeue() {\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        const oldHead = this.head;\r\n        this.head = oldHead.next;\r\n        return oldHead;\r\n    }\r\n    peek() {\r\n        var _a;\r\n        return (_a = this.head) === null || _a === void 0 ? void 0 : _a.value;\r\n    }\r\n    isEmpty() {\r\n        return this.head == null;\r\n    }\r\n    get data() {\r\n        const values = [];\r\n        let head = this.head;\r\n        while (head) {\r\n            values.push(head.value);\r\n            head = head.next;\r\n        }\r\n        return values;\r\n    }\r\n}\r\n","/**\r\n * @module\r\n * @author Ophir LOJKINE\r\n * salesman npm module\r\n *\r\n * Good heuristic for the traveling salesman problem using simulated annealing.\r\n * @see {@link https://lovasoa.github.io/salesman.js/|demo}\r\n **/\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nfunction Path(points) {\r\n    this.points = points;\r\n    this.order = new Array(points.length);\r\n    for(var i=0; i<points.length; i++) this.order[i] = i;\r\n    this.distances = new Array(points.length * points.length);\r\n    for(var i=0; i<points.length; i++)\r\n        for(var j=0; j<points.length; j++)\r\n            this.distances[j + i*points.length] = distance(points[i], points[j]);\r\n}\r\nPath.prototype.change = function(temp) {\r\n    var i = this.randomPos(), j = this.randomPos();\r\n    var delta = this.delta_distance(i, j);\r\n    if (delta < 0 || Math.random() < Math.exp(-delta / temp)) {\r\n        this.swap(i,j);\r\n    }\r\n};\r\nPath.prototype.size = function() {\r\n    var s = 0;\r\n    for (var i=0; i<this.points.length; i++) {\r\n        s += this.distance(i, ((i+1)%this.points.length));\r\n    }\r\n    return s;\r\n};\r\nPath.prototype.swap = function(i,j) {\r\n    var tmp = this.order[i];\r\n    this.order[i] = this.order[j];\r\n    this.order[j] = tmp;\r\n};\r\nPath.prototype.delta_distance = function(i, j) {\r\n    var jm1 = this.index(j-1),\r\n        jp1 = this.index(j+1),\r\n        im1 = this.index(i-1),\r\n        ip1 = this.index(i+1);\r\n    var s =\r\n        this.distance(jm1, i  )\r\n        + this.distance(i  , jp1)\r\n        + this.distance(im1, j  )\r\n        + this.distance(j  , ip1)\r\n        - this.distance(im1, i  )\r\n        - this.distance(i  , ip1)\r\n        - this.distance(jm1, j  )\r\n        - this.distance(j  , jp1);\r\n    if (jm1 === i || jp1 === i)\r\n        s += 2*this.distance(i,j);\r\n    return s;\r\n};\r\nPath.prototype.index = function(i) {\r\n    return (i + this.points.length) % this.points.length;\r\n};\r\nPath.prototype.access = function(i) {\r\n    return this.points[this.order[this.index(i)]];\r\n};\r\nPath.prototype.distance = function(i, j) {\r\n    return this.distances[this.order[i] * this.points.length + this.order[j]];\r\n};\r\n// Random index between 1 and the last position in the array of points\r\nPath.prototype.randomPos = function() {\r\n    return 1 + Math.floor(Math.random() * (this.points.length - 1));\r\n};\r\n\r\n/**\r\n * Solves the following problem:\r\n *  Given a list of points and the distances between each pair of points,\r\n *  what is the shortest possible route that visits each point exactly\r\n *  once and returns to the origin point?\r\n *\r\n * @param {Point[]} points The points that the path will have to visit.\r\n * @param {Number} [temp_coeff=0.999] changes the convergence speed of the algorithm: the closer to 1, the slower the algorithm and the better the solutions.\r\n * @param {Function} [callback=] An optional callback to be called after each iteration.\r\n *\r\n * @returns {Number[]} An array of indexes in the original array. Indicates in which order the different points are visited.\r\n *\r\n * @example\r\n * var points = [\r\n *       new salesman.Point(2,3)\r\n *       //other points\r\n *     ];\r\n * var solution = salesman.solve(points);\r\n * var ordered_points = solution.map(i => points[i]);\r\n * // ordered_points now contains the points, in the order they ought to be visited.\r\n **/\r\nfunction solve(points, temp_coeff, callback) {\r\n    var path = new Path(points);\r\n    if (points.length < 2) return path.order; // There is nothing to optimize\r\n    if (!temp_coeff)\r\n        temp_coeff = 1 - Math.exp(-10 - Math.min(points.length,1e6)/1e5);\r\n    var has_callback = typeof(callback) === \"function\";\r\n\r\n    for (var temperature = 100 * distance(path.access(0), path.access(1));\r\n         temperature > 1e-6;\r\n         temperature *= temp_coeff) {\r\n        path.change(temperature);\r\n        if (has_callback) callback(path.order);\r\n    }\r\n    return path.order;\r\n};\r\n\r\n/**\r\n * Represents a point in two dimensions.\r\n * @class\r\n * @param {Number} x abscissa\r\n * @param {Number} y ordinate\r\n */\r\nfunction Point(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n};\r\n\r\nfunction distance(p, q) {\r\n    var dx = p.x - q.x, dy = p.y - q.y;\r\n    return Math.sqrt(dx*dx + dy*dy);\r\n}\r\n\r\nif (typeof module === \"object\") {\r\n    module.exports = {\r\n        \"solve\": solve,\r\n        \"Point\": Point\r\n    };\r\n}\r\n","<script lang=\"ts\">\r\n    import { renderable, width, height } from './game.js'\r\n    import Drill from \"./Drill.svelte\"\r\n    import {PriorityQueue} from \"./PriorityQueue\"\r\n\r\n    import salesmanAlgorithm from './salesman'\r\n\r\n    export let vertexColor = '#ffe554'\r\n    export let edgeColor = '#ffe554'\r\n    export let vertexSize = 10\r\n    export let edgeSize = 3\r\n    export let showVertexLabel = true\r\n    export let removeEdgesOnMoving = false\r\n    export let vertexLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let vertexLabelSize = 8\r\n    export let verticesGenerationCount = 30\r\n    export let showEdgeLabel = true\r\n    export let edgeLabelDistance = 30\r\n    export let edgeLabelSize = 8\r\n    export let edgeLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let totalDistance = '0'\r\n    export let totalDistanceWithStart = '0'\r\n    export let connectAlgorithm = ''\r\n    export let isSimulationMode = false\r\n    export let drillColor = '#419e5a'\r\n    export let drillNormalColor = '#ffe554'\r\n    export let drillLabelSize = 8\r\n    export let drillLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let drillMoveSpeed = 0.1\r\n    export let drillSpinSpeed = 0.5\r\n    export let drillRotationsCount = 50\r\n    export let isShowDrillLabel = true\r\n    export let isDrillingFinished = true\r\n    export let isInfiniteSimulation = false\r\n    export let isReturnDrillToStart = true\r\n    export let drillingTime = 0\r\n    export let lastDrillingTime = 0\r\n    export let isBlockDrillControls = false\r\n    export let drilledVertexColor = 'hsl(0, 0%, 100%)'\r\n    export let zAlgorithmRowSize = 30\r\n\r\n    interface Vertex {\r\n        x: number\r\n        y: number\r\n    }\r\n\r\n    interface Edge {\r\n        i: number\r\n        j: number\r\n    }\r\n\r\n    let vertices: Vertex[] = []\r\n    let drilledVertices: number[] = []\r\n    let edges: Edge[] = []\r\n    let minDistance = 80\r\n    let startPosition = { x: 0, y: 0 }\r\n\r\n    let mouse: Vertex = null\r\n    let movingVertexId = -1\r\n    let mouseDown = false\r\n    let time = -1\r\n\r\n    const CLICK_TIME_MS = 100\r\n\r\n    let isDrillingHoleFinished = true\r\n    let moveDrillTo = [ 0, 0 ]\r\n    let drillingEdgeIndex = -1\r\n    let isSpinEnabled = true\r\n    let isMovingToStart = false\r\n    let drillingStartTime = 0\r\n    let drilledVertex = -1\r\n\r\n    renderable((props) => {\r\n        const { context } = props\r\n\r\n        if (mouseDown && movingVertexId !== -1 && Date.now() - time > CLICK_TIME_MS) {\r\n            let x = mouse.x\r\n            let y = mouse.y\r\n\r\n            if (x > $width) {\r\n                x = $width\r\n            } else if (x < 0) {\r\n                x = 0\r\n            }\r\n\r\n            if (y > $height) {\r\n                y = $height\r\n            } else if (y < 0) {\r\n                y = 0\r\n            }\r\n\r\n            vertices[movingVertexId] = { x, y }\r\n\r\n            if (removeEdgesOnMoving) {\r\n                removeAllEdges()\r\n            } else {\r\n                calculateDistances()\r\n            }\r\n        }\r\n\r\n        for (let edge of edges) {\r\n            drawLine(context, vertices[edge.i], vertices[edge.j])\r\n        }\r\n\r\n        for (let [index, vertex] of vertices.entries()) {\r\n            let vertexDrawColor = vertexColor\r\n\r\n            if (isSimulationMode && drilledVertices.includes(index)) {\r\n                vertexDrawColor = drilledVertexColor\r\n            }\r\n\r\n            context.lineCap = 'round'\r\n            context.beginPath()\r\n            context.fillStyle = vertexDrawColor\r\n            context.strokeStyle = vertexDrawColor\r\n            context.lineWidth = 3\r\n            context.arc(vertex.x, vertex.y, vertexSize, 0, Math.PI * 2)\r\n            context.fill()\r\n        }\r\n\r\n        if (showVertexLabel) {\r\n            for (let vertex of vertices) {\r\n                let text = `(${Math.round(vertex.x)}, ${Math.round(vertex.y)})`\r\n                drawVertexLabel({ context, text, x: vertex.x, y: vertex.y + vertexSize + 10 })\r\n            }\r\n        }\r\n\r\n        if (showEdgeLabel) {\r\n            for (let edge of edges) {\r\n                drawEdgeLabel(context, vertices[edge.i], vertices[edge.j])\r\n            }\r\n        }\r\n\r\n        if (isMovingToStart) {\r\n            finishMovingToStart()\r\n        } else if (isSimulationMode) {\r\n            moveDrill()\r\n        }\r\n\r\n        if (drillingStartTime !== 0) {\r\n            drillingTime = Date.now() - drillingStartTime\r\n        }\r\n    })\r\n\r\n    export function handleClick(ev) {\r\n        if (isSimulationMode) {\r\n            return\r\n        }\r\n\r\n        if (Date.now() - time > CLICK_TIME_MS && time !== -1) {\r\n            time = -1\r\n            return\r\n        }\r\n\r\n        time = -1\r\n        removeAllEdges()\r\n\r\n        let x = ev.clientX\r\n        let y = ev.clientY\r\n\r\n        let nearest = getNearestVertex(x, y)\r\n\r\n        if (nearest.value <= vertexSize && nearest.index !== -1) {\r\n            vertices = [...vertices.slice(0, nearest.index), ...vertices.slice(nearest.index + 1, vertices.length)]\r\n            return\r\n        }\r\n\r\n        let vertex: Vertex = { x, y }\r\n        vertices = [...vertices, vertex]\r\n    }\r\n\r\n    export function handleMouseDown(ev) {\r\n        if (isSimulationMode) {\r\n            return\r\n        }\r\n\r\n        let x = ev.clientX\r\n        let y = ev.clientY\r\n\r\n        let nearest = getNearestVertex(x, y)\r\n\r\n        if (nearest.value > vertexSize || nearest.index === -1) {\r\n            return\r\n        }\r\n\r\n        movingVertexId = nearest.index\r\n        mouse = vertices[movingVertexId]\r\n        mouseDown = true\r\n        time = Date.now()\r\n    }\r\n\r\n    function handleMouseMove(ev) {\r\n        if (!mouse) {\r\n            return\r\n        }\r\n\r\n        mouse.x += ev.movementX\r\n        mouse.y += ev.movementY\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        if (isSimulationMode) {\r\n            return\r\n        }\r\n\r\n        mouseDown = false\r\n        movingVertexId = -1\r\n        previousTouch = null\r\n    }\r\n\r\n    export function handleTouchStart(ev) {\r\n        let touch = ev.touches[0]\r\n        handleMouseDown(touch)\r\n    }\r\n\r\n    let previousTouch = null\r\n    function handleTouchMove(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        if (previousTouch) {\r\n            touch.movementX = touch.pageX - previousTouch.pageX\r\n            touch.movementY = touch.pageY - previousTouch.pageY\r\n            handleMouseMove(touch)\r\n        }\r\n\r\n        previousTouch = touch\r\n    }\r\n\r\n    export function removeAllEdges() {\r\n        edges = []\r\n        totalDistance = '0'\r\n        totalDistanceWithStart = '0'\r\n        resetDistances()\r\n    }\r\n\r\n    export function removeAllVertices() {\r\n        removeAllEdges()\r\n        vertices = []\r\n        drilledVertices = []\r\n    }\r\n\r\n    function getRandomInt(min: number, max:number): number {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n    }\r\n\r\n    export function generateVertices() {\r\n        removeAllVertices()\r\n        let attempts = 0\r\n\r\n        while (vertices.length !== verticesGenerationCount && attempts !== 5000) {\r\n            let x = getRandomInt(0, $width - 1)\r\n            let y = getRandomInt(0, $height - 1)\r\n\r\n            let nearest = getNearestVertex(x, y)\r\n\r\n            if (nearest.value < minDistance && nearest.index != -1) {\r\n                attempts++\r\n                continue\r\n            }\r\n\r\n            let vertex: Vertex = { x, y }\r\n            vertices = [...vertices, vertex]\r\n\r\n            attempts = 0\r\n        }\r\n\r\n        console.log(`Generated ${vertices.length} vertices`)\r\n    }\r\n\r\n    function fillEdges() {\r\n        removeAllEdges()\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let j = i + 1\r\n\r\n            if (j < vertices.length) {\r\n                edges = [...edges, { i, j }]\r\n            }\r\n        }\r\n\r\n        calculateDistances()\r\n    }\r\n\r\n    export function moveDrillToStart() {\r\n        moveDrillTo = [ 0, 0 ]\r\n        isSpinEnabled = false\r\n        isMovingToStart = true\r\n        isDrillingFinished = true\r\n        isDrillingHoleFinished = false\r\n        isBlockDrillControls = true\r\n    }\r\n\r\n    function finishMovingToStart() {\r\n        if (isDrillingHoleFinished) {\r\n            isSpinEnabled = true\r\n            isMovingToStart = false\r\n            isBlockDrillControls = false\r\n\r\n            if (isReturnDrillToStart) {\r\n                stopDrillingTime()\r\n            }\r\n        }\r\n    }\r\n\r\n    export function startSimulation() {\r\n        drillingStartTime = Date.now()\r\n\r\n        if (vertices.length === 0) {\r\n            generateVertices()\r\n        }\r\n\r\n        connectEdges()\r\n        calculateDistances()\r\n\r\n        isSpinEnabled = true\r\n        isDrillingFinished = false\r\n        drillingEdgeIndex = -1\r\n        isBlockDrillControls = true\r\n        drilledVertex = -1\r\n        drilledVertices = []\r\n    }\r\n\r\n    export function connectEdges() {\r\n\r\n        switch (connectAlgorithm) {\r\n            case 'zAlgorithm':\r\n                zAlgorithm()\r\n                break\r\n            case 'greedy':\r\n                greedy()\r\n                break\r\n            case 'spanningTreePrim':\r\n                if (!isSimulationMode) {\r\n                    spanningTreePrim()\r\n                } else {\r\n                    prim()\r\n                }\r\n                break\r\n            case 'prim':\r\n                prim()\r\n                break\r\n            case 'salesman':\r\n                salesman()\r\n                break\r\n            case 'lastOrder':\r\n                fillEdges()\r\n        }\r\n    }\r\n\r\n    function zAlgorithm() {\r\n        vertices.sort((a:Vertex, b:Vertex) => {\r\n            let isYEqual = Math.abs(a.y - b.y) < zAlgorithmRowSize\r\n            let isYLess = a.y - b.y < -zAlgorithmRowSize\r\n\r\n            if (isYLess) {\r\n                return -1\r\n            } else if (isYEqual) {\r\n                if (a.x < b.x) {\r\n                    return -1\r\n                } else if (a.x > b.x) {\r\n                    return 1\r\n                }\r\n            } else if (!isYLess) {\r\n                return 1\r\n            }\r\n\r\n            return 0\r\n        })\r\n\r\n        fillEdges()\r\n    }\r\n\r\n    function greedy() {\r\n        if (vertices.length <= 1) {\r\n            return\r\n        }\r\n\r\n        let sortedVertices: Vertex[] = []\r\n        let searchVertexes: Vertex[] = vertices\r\n\r\n        let sortVertices = (index) => {\r\n            let vertex: Vertex = searchVertexes[index]\r\n            sortedVertices.push(vertex)\r\n            searchVertexes = vertices.filter(n => !sortedVertices.includes(n))\r\n\r\n            if (searchVertexes.length == 0) {\r\n                return sortedVertices\r\n            }\r\n\r\n            let nearestVertex = getNearestVertex(vertex.x, vertex.y, searchVertexes)\r\n            return sortVertices(nearestVertex.index)\r\n        }\r\n\r\n        let nearestToDrillVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[1], vertices).index\r\n\r\n        vertices = sortVertices(nearestToDrillVertex)\r\n        fillEdges()\r\n    }\r\n\r\n    function spanningTreePrim() {\r\n        if (vertices.length === 0) {\r\n            return\r\n        }\r\n\r\n        let keys: number[] = []\r\n        let p: number[] = []\r\n        let queue = new PriorityQueue<number>()\r\n        let allEdges: Edge[] = []\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            keys.push(Infinity)\r\n            p.push(-1)\r\n        }\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            for (let j = 0; j < i; j++) {\r\n                allEdges.push({ i, j })\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let minKey = Infinity\r\n\r\n            for (let j = 0; j < i; j++) {\r\n                let key = getDistance(vertices[i], vertices[j])\r\n\r\n                if (key < minKey) {\r\n                    minKey = key\r\n                }\r\n            }\r\n\r\n            queue.enqueue(i, minKey)\r\n        }\r\n\r\n        let nearestVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[0], vertices)\r\n\r\n        if (nearestVertex.index === -1 || nearestVertex.value === -1) {\r\n            nearestVertex = { index: 0, value: 0 }\r\n        }\r\n\r\n        keys[nearestVertex.index]\r\n\r\n        while (!queue.isEmpty()) {\r\n            let v = queue.dequeue().value\r\n\r\n            for (let edge of allEdges) {\r\n                let u = -1\r\n\r\n                if (edge.i === v) {\r\n                    u = edge.j\r\n                }\r\n\r\n                if (edge.j === v) {\r\n                    u = edge.i\r\n                }\r\n\r\n                if (u !== -1) {\r\n                    let distance = getDistance(vertices[v], vertices[u])\r\n\r\n                    if (queue.data.includes(u) && keys[u] > distance) {\r\n                        p[u] = v\r\n                        keys[u] = distance\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        removeAllEdges()\r\n\r\n        for (let i = 0; i < p.length; i++) {\r\n            if (p[i] !== -1) {\r\n                edges = [...edges, {i, j: p[i]}]\r\n            }\r\n        }\r\n    }\r\n\r\n    function prim() {\r\n        if (vertices.length === 0) {\r\n            return\r\n        }\r\n\r\n        spanningTreePrim()\r\n        spanningTreeToPath()\r\n    }\r\n\r\n    function spanningTreeToPath() {\r\n        let getChildren = (index: number, edgesList: Edge[]) => {\r\n            let children: Edge[] = []\r\n\r\n            for (let edge of edgesList) {\r\n                if (edge.i === index) {\r\n                    children.push(edge)\r\n                }\r\n            }\r\n\r\n            for (let edge of edgesList) {\r\n                if (edge.j === index) {\r\n                    children.push({ i: edge.j, j: edge.i })\r\n                }\r\n            }\r\n\r\n            return children\r\n        }\r\n\r\n        let nearestVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[0], vertices)\r\n\r\n        if (nearestVertex.index === -1 || nearestVertex.value === -1) {\r\n            nearestVertex = { index: 0, value: 0 }\r\n        }\r\n\r\n        let edgesList = edges\r\n\r\n        let transformToPath = (startIndex: number) => {\r\n            if (edgesList.length === 0) {\r\n                return [startIndex]\r\n            }\r\n\r\n            let isEdgeEqual = (edge) => {\r\n                return (element) => {\r\n                    return element.i === edge.i && element.j === edge.j\r\n                }\r\n            }\r\n\r\n            let children = getChildren(startIndex, edgesList)\r\n            let path = [startIndex]\r\n\r\n            for (let child of children) {\r\n\r\n                let childIndex = edgesList.findIndex(isEdgeEqual(child))\r\n                let reversedChildIndex = edgesList.findIndex(isEdgeEqual({ i: child.j, j: child.i }))\r\n\r\n                if (childIndex > -1) {\r\n                    edgesList.splice(childIndex, 1)\r\n                } else if (reversedChildIndex > -1) {\r\n                    edgesList.splice(reversedChildIndex, 1)\r\n                }\r\n\r\n                path.push(...transformToPath(child.j))\r\n            }\r\n\r\n            return path\r\n        }\r\n\r\n        let verticesIndexes = transformToPath(nearestVertex.index)\r\n\r\n        let newVertices: Vertex[] = []\r\n\r\n        for (let verticesIndex of verticesIndexes) {\r\n            newVertices.push(vertices[verticesIndex])\r\n        }\r\n\r\n        vertices = newVertices\r\n\r\n        fillEdges()\r\n    }\r\n\r\n    function salesman() {\r\n        let points = []\r\n\r\n        for (let vertex of vertices) {\r\n            points.push(new salesmanAlgorithm.Point(vertex.x, vertex.y))\r\n        }\r\n\r\n        //  let orderedVertices = salesmanAlgorithm.solve(points, 1-5e-7).map(i => vertices[i]) - take time but better\r\n        let orderedVertices  = salesmanAlgorithm.solve(points).map(i => vertices[i])\r\n        let nearestVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[1], orderedVertices)\r\n\r\n        if (nearestVertex.index === -1) {\r\n            vertices = orderedVertices\r\n            fillEdges()\r\n\r\n            return\r\n        }\r\n\r\n        vertices = []\r\n\r\n        for (let i = nearestVertex.index; i < orderedVertices.length; i++) {\r\n            vertices.push(orderedVertices[i])\r\n        }\r\n\r\n        for (let i = 0; i < nearestVertex.index; i++) {\r\n            vertices.push(orderedVertices[i])\r\n        }\r\n\r\n        fillEdges()\r\n    }\r\n\r\n    function calculateDistances() {\r\n        if (!isSimulationMode && connectAlgorithm.includes('spanningTree')) {\r\n            return\r\n        }\r\n\r\n        let totalDistanceCount = 0\r\n\r\n        for (let edge of edges) {\r\n            totalDistanceCount += getDistance(vertices[edge.i], vertices[edge.j])\r\n        }\r\n\r\n        let totalDistanceWithStartCount = totalDistanceCount\r\n\r\n        if (vertices.length) {\r\n            totalDistanceWithStartCount += getDistance(startPosition, vertices[0])\r\n            totalDistanceWithStartCount += getDistance(startPosition, vertices.at(-1))\r\n        }\r\n\r\n        totalDistance = Math.round(totalDistanceCount).toString()\r\n        totalDistanceWithStart = Math.round(totalDistanceWithStartCount).toString()\r\n    }\r\n\r\n    function resetDistances() {\r\n        totalDistance = '0'\r\n        totalDistanceWithStart = '0'\r\n    }\r\n\r\n    function drawVertexLabel(props) {\r\n        const { context, text, x, y } = props\r\n\r\n        let align = 'center'\r\n        let baseline = 'top'\r\n        let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\r\n\r\n        if (text && context) {\r\n            context.fillStyle = vertexLabelColor\r\n            context.font = `${vertexLabelSize}px ${fontFamily}`\r\n            context.textAlign = align\r\n            context.textBaseline = baseline\r\n            context.fillText(text, x, y)\r\n        }\r\n    }\r\n\r\n    function drawLine(context, vertexI: Vertex, vertexJ: Vertex) {\r\n        if (!context) {\r\n            return\r\n        }\r\n\r\n        context.beginPath()\r\n        context.moveTo(vertexI.x, vertexI.y)\r\n        context.lineTo(vertexJ.x, vertexJ.y)\r\n        context.strokeStyle = edgeColor\r\n        context.lineWidth = edgeSize\r\n        context.stroke()\r\n    }\r\n\r\n    function drawEdgeLabel(context, vertexI: Vertex, vertexJ: Vertex) {\r\n        if (!context) {\r\n            return\r\n        }\r\n\r\n        let label = String(Math.round(getDistance(vertexI, vertexJ)))\r\n\r\n        let x = (vertexI.x + vertexJ.x) / 2\r\n        let y = (vertexI.y + vertexJ.y) / 2\r\n\r\n        let thetaVertices = angle(vertexI.x, vertexI.y, vertexJ.x, vertexJ.y)\r\n\r\n        let radius = edgeLabelDistance\r\n        let resultX = radius * Math.cos(thetaVertices + 3 * Math.PI / 2) + x\r\n        let resultY = radius * Math.sin(thetaVertices + 3 * Math.PI / 2) + y\r\n\r\n        let align = 'center'\r\n        let baseline = 'top'\r\n        let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\r\n\r\n        context.beginPath()\r\n        context.fillStyle = edgeLabelColor\r\n        context.font = `${edgeLabelSize}px ${fontFamily}`\r\n        context.textAlign = align\r\n        context.textBaseline = baseline\r\n        context.save()\r\n        context.translate(resultX, resultY)\r\n        context.rotate(thetaVertices)\r\n        context.fillText(label, 0, 0)\r\n        context.restore()\r\n    }\r\n\r\n    function angle(cx, cy, ex, ey) {\r\n        let dy = ey - cy\r\n        let dx = ex - cx\r\n        let theta = Math.atan2(dy, dx) // range (-PI, PI]\r\n        return theta >= -(Math.PI / 2) && theta <= (Math.PI / 2) ? theta : theta + Math.PI\r\n    }\r\n\r\n    function getDistance(vertexI: Vertex, vertexJ: Vertex): number {\r\n        if (vertexI.x === vertexJ.x && vertexI.y === vertexJ.y) {\r\n            return 0\r\n        }\r\n\r\n        let x1: number = vertexI.x\r\n        let x2: number = vertexJ.x\r\n        let y1: number = vertexI.y\r\n        let y2: number = vertexJ.y\r\n\r\n        return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\r\n    }\r\n\r\n    function getNearestVertex(x: number, y: number, verticesList = vertices): {index: number, value: number} {\r\n        let nearestIndex: number = -1\r\n        let nearestValue: number = -1\r\n\r\n        for (let i = 0; i < verticesList.length; i++) {\r\n            let vertex: Vertex = verticesList[i]\r\n\r\n            let value: number = getDistance(vertex, { x, y })\r\n\r\n            if (nearestIndex === -1 || nearestValue > value) {\r\n                nearestIndex = i\r\n                nearestValue = value\r\n            }\r\n        }\r\n\r\n        return { value: nearestValue, index: nearestIndex }\r\n    }\r\n\r\n    function moveDrill() {\r\n        if (isDrillingFinished) {\r\n            if (!isInfiniteSimulation) {\r\n                drillingEdgeIndex = -1\r\n                isBlockDrillControls = false\r\n                return\r\n            }\r\n\r\n            if (drillingEdgeIndex !== -1) {\r\n                generateVertices()\r\n                startSimulation()\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n\r\n        if (drillingEdgeIndex >= edges.length || vertices.length === 0) {\r\n            if (isDrillingHoleFinished) {\r\n                if (drilledVertex !== -1) {\r\n                    drilledVertices = [...drilledVertices, drilledVertex]\r\n                }\r\n\r\n                if (!isReturnDrillToStart) {\r\n                    isDrillingFinished = true\r\n                    stopDrillingTime()\r\n                } else {\r\n                    moveDrillToStart()\r\n                }\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        if (!isDrillingHoleFinished) {\r\n            return\r\n        }\r\n\r\n        if (drilledVertex !== -1) {\r\n            drilledVertices = [...drilledVertices, drilledVertex]\r\n        }\r\n\r\n        let moveToVertex\r\n\r\n        if (edges.length === 0) {\r\n            moveToVertex = vertices[0]\r\n            drilledVertex = 0\r\n        } else if (drillingEdgeIndex === -1) {\r\n            moveToVertex = vertices[edges[0].i]\r\n            drilledVertex = edges[0].i\r\n        } else {\r\n            moveToVertex = vertices[edges[drillingEdgeIndex].j]\r\n            drilledVertex = edges[drillingEdgeIndex].j\r\n        }\r\n\r\n        moveDrillTo = [ moveToVertex.x, moveToVertex.y ]\r\n        isDrillingHoleFinished = false\r\n        drillingEdgeIndex++\r\n    }\r\n\r\n    function stopDrillingTime() {\r\n        lastDrillingTime = drillingTime\r\n        drillingStartTime = 0\r\n        drillingTime = 0\r\n    }\r\n</script>\r\n\r\n<svelte:window\r\n        on:mouseup={handleMouseUp}\r\n        on:touchend={handleMouseUp}\r\n        on:mousemove={handleMouseMove}\r\n        on:touchmove={handleTouchMove}\r\n\r\n/>\r\n\r\n<slot>\r\n    <Drill\r\n          bind:isFinished={isDrillingHoleFinished}\r\n          bind:moveTo={moveDrillTo}\r\n          isShow={isSimulationMode}\r\n          size={vertexSize}\r\n          drillColor={drillColor}\r\n          normalColor={drillNormalColor}\r\n          isSpinEnabled={isSpinEnabled}\r\n          moveSpeed={drillMoveSpeed}\r\n          spinSpeed={drillSpinSpeed}\r\n          rotationsCount={drillRotationsCount}\r\n          isShowLabel={isShowDrillLabel}\r\n          labelSize={drillLabelSize}\r\n          labelColor={drillLabelColor}\r\n    />\r\n</slot>\r\n","<script>\n\timport Text from './Text.svelte'\n\timport { width, renderable } from './game.js'\n\n\texport let show = true\n\n\tlet text = ''\n\tlet frames = 0\n\tlet prevTime = performance.now()\n\n\trenderable((state, dt) => {\n\t\tlet time = performance.now()\n\t\tframes++\n\n\t\tif ( time >= prevTime + 1000 ) {\n\t\t\tconst fps = ((frames * 1000) / (time - prevTime))\n\t\t\ttext = `${fps.toFixed(1)} FPS`\n\t\t\tprevTime = time\n\t\t\tframes = 0\n\t\t}\n\n\t\tif (!show) {\n\t\t\ttext = ''\n\t\t}\n\t})\n</script>\n\n<Text\n\t{text}\n\tfontSize=12\n\tfontFamily='Courier New'\n\talign='left'\n\tbaseline='top'\n\tx={20}\n\ty={20} />\n\n<!-- The following allows this component to nest children -->\n<slot></slot>","<script lang=\"ts\">\n  export let name: string;\n  export let min: number = 0;\n  export let max: number = 100;\n  export let value: number = min;\n  export let step: number = 1;\n</script>\n\n<label class=\"wrapper\">\n  <div>{name}: {value}</div>\n  <input type=\"range\" bind:value {min} {max} {step} />\n</label>\n\n<style>\n  .wrapper {\n    /* display: flex; */\n    display: block;\n    /* font-weight: bold; */\n  }\n  .wrapper:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  input {\n    display: block;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    /* margin-left: 10px; */\n    /* transform: translateY(-4px); */\n  }\n  div {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n    overflow: hidden;\n    /* font-family: monospace; */\n    font-size: 65%;\n  }\n  input {\n    margin-top: 2px;\n  }\n</style>\n","<script>\n  export let title;\n  export let checked = false;\n</script>\n\n<label>\n  <input type=\"checkbox\" bind:checked />\n  <span>{title}</span>\n</label>\n\n<style>\n  label {\n    display: block;\n    cursor: pointer;\n    margin-bottom: 5px;\n  }\n  input {\n    user-select: none;\n    position: relative;\n    appearance: none;\n    -webkit-appearance: none;\n    margin: 0px 5px 0px 0px;\n    outline: none;\n    border: none;\n  }\n\n  input::before {\n    content: \"\";\n    box-sizing: border-box;\n    transform: translate(0px, 2px);\n    display: block;\n    width: 15px;\n    height: 15px;\n    border-radius: 2px;\n    background-color: rgba(255, 255, 255, 0.3);\n    transition-duration: 0.2s;\n  }\n\n  input:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    left: 1px;\n    top: 3px;\n    width: 10px;\n    height: 5px;\n    transform: translateY(-2px) rotateZ(-45deg);\n    border-bottom: 4px solid whitesmoke;\n    border-left: 4px solid whitesmoke;\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n  input:checked::after {\n    transform: rotateZ(-45deg);\n    opacity: 1;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte'\n\n  export let colors: string[] = []\n  export let selectedId: number = 0\n\n  let checkmarkColor = 'white'\n\n  onMount(function(){\n    checkmarkColor = invertColor(colors[selectedId])\n  })\n\n  function invertColor(hex) {\n    if (hex === 'white') {\n      hex = '#FFFFFF'\n    } else if (hex === 'black') {\n      hex = '#000000'\n    }\n\n    if (hex.indexOf('#') === 0) {\n      hex = hex.slice(1)\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n    }\n    if (hex.length !== 6) {\n      throw new Error('Invalid HEX color.')\n    }\n\n    let r = parseInt(hex.slice(0, 2), 16),\n            g = parseInt(hex.slice(2, 4), 16),\n            b = parseInt(hex.slice(4, 6), 16)\n\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n            ? 'black'\n            : 'white'\n  }\n</script>\n\n<div class=\"wrapper\">\n  {#each Array(...colors.entries()) as idAndColor}\n    <button\n      class=\"{selectedId === idAndColor[0] ? 'selected' : ''} {checkmarkColor}\"\n      name=\"color\"\n      type=\"radio\"\n      style={`background-color: ${idAndColor[1]};`}\n      on:click={() => {\n        selectedId = idAndColor[0]\n        checkmarkColor = invertColor(colors[selectedId])\n      }}\n    />\n  {/each}\n</div>\n\n<style>\n  .selected.white:before {\n    content: \"\";\n    display: block;\n    width: 6px;\n    height: 14px;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    transform: translateY(-2px) rotate(45deg);\n  }\n  .selected.black:before {\n    content: \"\";\n    display: block;\n    width: 6px;\n    height: 14px;\n    border-bottom: 3px solid black;\n    border-right: 3px solid black;\n    transform: translateY(-2px) rotate(45deg);\n  }\n  .wrapper {\n    display: flex;\n    /* flex-wrap: wrap; */\n    overflow: hidden;\n    border-radius: 5px;\n    /* border: 2px dotted rgba(0, 0, 0, 0.5); */\n  }\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 29px;\n    padding: 0;\n    margin: 0;\n    border-radius: 0;\n  }\n  /* label {\n    font-size: 75%;\n    text-align: center;\n    width: 30px;\n    line-height: 30px;\n    overflow: hidden;\n    cursor: pointer;\n    width: 100%;\n  }\n  label:hover {\n    box-shadow: inset 0 0 0 100px rgba(0, 0, 0, 0.1);\n  }\n  input {\n    appearance: none;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n  input:checked::before {\n    content: \"\";\n    display: block;\n    width: 5px;\n    height: 10px;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    transform: rotate(45deg) translateY(-1px);\n    margin-right: 7px;\n  } */\n</style>\n","<script lang=\"ts\">\r\n    import {height, width} from \"./game\"\r\n    import {afterUpdate} from \"svelte\"\r\n\r\n    let window\r\n\r\n    export let title = ''\r\n    export let isOpened = true\r\n    export let zIndex = 0\r\n    export let onCloseHandler = null\r\n    export let onClickHandler = null\r\n    export let x = 100\r\n    export let y = 100\r\n\r\n    let isMouseDown = false\r\n    let isFirstRender = true\r\n    let mouse: { x: number, y: number }\r\n    let outOfBoundLimitX = 100\r\n    let outOfBoundLimitY = 100\r\n\r\n    afterUpdate(() => {\r\n        if (isFirstRender && window) {\r\n            x = Math.floor($width / 2) - Math.floor(window.clientWidth / 2)\r\n            y = Math.floor($height / 2) - Math.floor(window.clientHeight / 2)\r\n\r\n            isFirstRender = false\r\n        }\r\n\r\n        if (window) {\r\n            outOfBoundLimitX = Math.floor(window.clientWidth / 2)\r\n            outOfBoundLimitY = Math.floor(window.clientHeight / 2)\r\n\r\n            checkPosition()\r\n        }\r\n    })\r\n\r\n    function onClose() {\r\n        isOpened = false\r\n\r\n        if (onCloseHandler) {\r\n            onCloseHandler()\r\n        }\r\n    }\r\n\r\n    function checkPosition() {\r\n        if (x > $width - outOfBoundLimitX) {\r\n            x = $width - outOfBoundLimitX\r\n        } else if (x < -outOfBoundLimitX) {\r\n            x = -outOfBoundLimitX\r\n        }\r\n\r\n        if (y > $height - outOfBoundLimitY) {\r\n            y = $height - outOfBoundLimitY\r\n        } else if (y < -outOfBoundLimitY) {\r\n            y = -outOfBoundLimitY\r\n        }\r\n    }\r\n\r\n    function handleTouchStart(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        handleMouseDown(touch)\r\n    }\r\n\r\n    let previousTouch = null\r\n    function handleTouchMove(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        if (previousTouch) {\r\n            touch.movementX = touch.pageX - previousTouch.pageX\r\n            touch.movementY = touch.pageY - previousTouch.pageY\r\n            handleMouseMove(touch)\r\n        }\r\n\r\n        previousTouch = touch\r\n    }\r\n\r\n    function handleMouseDown(ev) {\r\n        const classes = ev.target.className\r\n        const moveClasses = ['controls', 'controls-block', 'controls-block__title']\r\n        const dy = ev.clientY - y\r\n\r\n        if (moveClasses.some(classes.includes.bind(classes)) && dy < 50) {\r\n            isMouseDown = true\r\n            mouse = { x, y }\r\n        }\r\n\r\n        if (onClickHandler) {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    function handleMouseMove(ev) {\r\n        if (isMouseDown && mouse) {\r\n            mouse.x += ev.movementX\r\n            mouse.y += ev.movementY\r\n            x = mouse.x\r\n            y = mouse.y\r\n\r\n            checkPosition()\r\n        }\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        isMouseDown = false\r\n        previousTouch = null\r\n    }\r\n</script>\r\n\r\n<svelte:window\r\n        on:mouseup={handleMouseUp}\r\n        on:touchend={handleMouseUp}\r\n        on:mousemove={handleMouseMove}\r\n        on:touchmove={handleTouchMove}\r\n/>\r\n\r\n{#if isOpened}\r\n    <div class=\"controls\"\r\n         style=\"z-index: {zIndex + 1}; left: {x}px; top: {y}px;\"\r\n         on:mousedown={handleMouseDown}\r\n         on:touchstart={handleTouchStart}\r\n         bind:this={window}\r\n    >\r\n        <div class=\"controls-block\">\r\n            <h2 class=\"controls-block__title\">\r\n                {title}\r\n            </h2>\r\n            <button on:click=\"{onClose}\" class=\"close\"></button>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .controls {\r\n        overflow-y: scroll;\r\n        box-shadow: 0 0 10px 0 black;\r\n        position: fixed;\r\n        max-height: calc(100% - 40px);\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        backdrop-filter: blur(8px);\r\n        -webkit-backdrop-filter: blur(8px);\r\n        -ms-overflow-style: none; /* IE and Edge */\r\n        scrollbar-width: none; /* Firefox */\r\n        padding: 10px;\r\n        width: 300px;\r\n        border-radius: 10px;\r\n    }\r\n    .controls::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    .controls-block > * {\r\n        margin-bottom: 0;\r\n    }\r\n    .controls-block:not(:last-child) {\r\n        margin-bottom: 20px;\r\n    }\r\n    .controls-block__title {\r\n        margin: 0;\r\n        margin-bottom: 5px;\r\n        text-transform: uppercase;\r\n        font-size: 100%;\r\n    }\r\n    @supports (not (backdrop-filter: blur())) and\r\n    (not (-webkit-backdrop-filter: blur())) {\r\n        .controls {\r\n            background-color: rgba(150, 150, 150, 0.95);\r\n        }\r\n    }\r\n    .close {\r\n        display: block;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 10px;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15px;\r\n        height: 15px;\r\n        border: 0;\r\n        color: black;\r\n        border-radius: 1.5rem;\r\n        background: transparent;\r\n        box-shadow: 0 0 0 1px black;\r\n        transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\r\n        background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n        -webkit-appearance: none;\r\n    }\r\n\r\n    .close:before,\r\n    .close:after {\r\n        content: '';\r\n        display: block;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: 50%;\r\n        width: 9px;\r\n        height: 1px;\r\n        background: black;\r\n        transform-origin: center;\r\n        transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\r\n        background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n    }\r\n\r\n    .close:before {\r\n        -webkit-transform: translate(0, -50%) rotate(45deg);\r\n        -moz-transform: translate(0, -50%) rotate(45deg);\r\n        transform: translate(0, -50%) rotate(45deg);\r\n        left: 3px;\r\n        top: 7px;\r\n    }\r\n\r\n    .close:after {\r\n        -webkit-transform: translate(0, -50%) rotate(-45deg);\r\n        -moz-transform: translate(0, -50%) rotate(-45deg);\r\n        transform: translate(0, -50%) rotate(-45deg);\r\n        left: 3px;\r\n        top: 7px;\r\n    }\r\n\r\n    .close:hover {\r\n        background: black;\r\n    }\r\n\r\n    .close:hover:before,\r\n    .close:hover:after {\r\n        height: 2px;\r\n        background: white;\r\n    }\r\n\r\n    .close:focus {\r\n        border-color: #3399ff;\r\n        box-shadow: 0 0 0 2px #3399ff;\r\n    }\r\n\r\n    .close:active {\r\n        transform: scale(0.9);\r\n    }\r\n\r\n    .close:hover,\r\n    .close:focus,\r\n    .close:active {\r\n        outline: none;\r\n    }\r\n</style>\r\n","export default {\r\n    language: {\r\n        en: \"Language\",\r\n        ru: \"Язык\",\r\n    },\r\n    english: {\r\n        en: \"English\",\r\n        ru: \"Английский\",\r\n    },\r\n    russian: {\r\n        en: \"Russian\",\r\n        ru: \"Русский\",\r\n    },\r\n    showMenu: {\r\n        en: \"Show Menu\",\r\n        ru: \"Показать меню\"\r\n    },\r\n    hideMenu: {\r\n        en: \"Hide menu\",\r\n        ru: \"Скрыть меню\"\r\n    },\r\n    addHint: {\r\n        en: 'Click to add vertex.',\r\n        ru: 'Нажмите чтобы добавить вершину.',\r\n    },\r\n    showHint: {\r\n        en: 'Show Hint',\r\n        ru: 'Показать подсказку'\r\n    },\r\n    about: {\r\n        en: \"About\",\r\n        ru: \"О программе\"\r\n    },\r\n    graphicalSettings: {\r\n        en: \"Graphical settings\",\r\n        ru: \"Настройки просмотра\",\r\n    },\r\n    showFPS: {\r\n        en: \"Show FPS\",\r\n        ru: \"Показать FPS\",\r\n    },\r\n    vertexColor: {\r\n        en: \"Vertex color\",\r\n        ru: \"Цвет вершин\",\r\n    },\r\n    edgeColor: {\r\n        en: \"Edge color\",\r\n        ru: \"Цвет граней\",\r\n    },\r\n    vertexSize: {\r\n        en: \"Vertex size\",\r\n        ru: \"Размер вершин\",\r\n    },\r\n    edgeSize: {\r\n        en: \"Edge size\",\r\n        ru: \"Размер грани\",\r\n    },\r\n    showVertexLabel: {\r\n        en: \"Show vertex label\",\r\n        ru: \"Показывать координаты вершин\",\r\n    },\r\n    vertexLabelSize: {\r\n        en: \"Vertex label size\",\r\n        ru: \"Размер шрифта координат вершины\",\r\n    },\r\n    vertexLabelColor: {\r\n        en: \"Vertex label color\",\r\n        ru: \"Цвет шрифта координат вершины\",\r\n    },\r\n    graphControls: {\r\n        en: \"Graph Controls\",\r\n        ru: \"Управление Графом\",\r\n    },\r\n    removeAllVertices: {\r\n        en: \"Remove all vertices\",\r\n        ru: \"Удалить все вершины\",\r\n    },\r\n    removeAllEdges: {\r\n        en: \"Remove all edges\",\r\n        ru: \"Удалить все грани\",\r\n    },\r\n    generateVertices: {\r\n        en: \"Generate vertices\",\r\n        ru: \"Генерировать вершины\",\r\n    },\r\n    verticesGenerationCount: {\r\n        en: \"Vertices generation count\",\r\n        ru: \"Количество генерируемых вершин\",\r\n    },\r\n    removeEdgesOnMoving: {\r\n        en: \"Remove edges on moving\",\r\n        ru: \"Удалять грани при перемещении\",\r\n    },\r\n    edgeLabelDistance: {\r\n        en: \"Edge label distance\",\r\n        ru: \"Удалённость этикетки грани\",\r\n    },\r\n    edgeLabelSize: {\r\n        en: \"Edge label size\",\r\n        ru: \"Размер этикетки грани\",\r\n    },\r\n    edgeLabelColor: {\r\n        en: \"Edge label color\",\r\n        ru: \"Цвет этикетки грани\",\r\n    },\r\n    showEdgeLabel: {\r\n        en: \"Show edge label\",\r\n        ru: \"Показывать этекетку грани\",\r\n    },\r\n    vertexSettings: {\r\n        en: \"Vertex Settings\",\r\n        ru: \"Настройка вершин\",\r\n    },\r\n    edgeSettings: {\r\n        en: \"Edge Settings\",\r\n        ru: \"Настройка граней\",\r\n    },\r\n    otherSettings: {\r\n        en: \"Other Settings\",\r\n        ru: \"Другие Настройки\",\r\n    },\r\n    settings: {\r\n        en: \"Settings\",\r\n        ru: \"Настройки\",\r\n    },\r\n    openVertexSettings: {\r\n        en: \"Open Vertex Settings\",\r\n        ru: \"Открыть настройки вершин\"\r\n    },\r\n    openEdgeSettings: {\r\n        en: \"Open Edge Settings\",\r\n        ru: \"Открыть настройки граней\"\r\n    },\r\n    openOtherSettings: {\r\n        en: \"Open Other Settings\",\r\n        ru: \"Открыть другие настройки\"\r\n    },\r\n    exitFullsceen: {\r\n        en: \"Exit fullscreen\",\r\n        ru: \"Выйти из полноэкранного режима\"\r\n    },\r\n    enterFullsceen: {\r\n        en: \"Enter fullscreen\",\r\n        ru: \"Развернуть на весь экран\"\r\n    },\r\n    pcbDrillingOptimazer: {\r\n        en: \"PCB drilling optimazer\",\r\n        ru: \"Оптимизатор сверления печатных плат\"\r\n    },\r\n    githubPage: {\r\n        en: \"GitHub page\",\r\n        ru: \"Страница на GitHub\"\r\n    },\r\n    developedUsingSvelte: {\r\n        en: \"Developed using svelte\",\r\n        ru: \"Разработано с использованием svelte\"\r\n    },\r\n    distance: {\r\n        en: \"Distance\",\r\n        ru: \"Расстояние\"\r\n    },\r\n    totalDistance: {\r\n        en: \"Total distance\",\r\n        ru: \"Общее расстояние\"\r\n    },\r\n    totalDistanceWithStart: {\r\n        en: \"Total distance with start\",\r\n        ru: \"Общее расстояние со старта\"\r\n    },\r\n    showTotalDistance: {\r\n        en: \"Show total distance\",\r\n        ru: \"Показать общее расстояние\"\r\n    },\r\n    connectVertices: {\r\n        en: \"Connect vertices\",\r\n        ru: \"Соединить вершины\"\r\n    },\r\n    connect: {\r\n        en: \"Connect\",\r\n        ru: \"Соединить\"\r\n    },\r\n    algorithms: {\r\n        en: \"Algorithms\",\r\n        ru: \"Алгоритмы\"\r\n    },\r\n    zAlgorithm: {\r\n        en: \"Z-algorithm\",\r\n        ru: \"Z-алгоритм\"\r\n    },\r\n    greedy: {\r\n        en: \"Greedy\",\r\n        ru: \"Жадный\"\r\n    },\r\n    spanningTreePrim: {\r\n        en: \"Prim (Spanning tree)\",\r\n        ru: \"Прима (Остановое дерево)\"\r\n    },\r\n    prim: {\r\n        en: \"Prim\",\r\n        ru: \"Прима\"\r\n    },\r\n    salesman: {\r\n        en: \"Salesman\",\r\n        ru: \"Конвояжёры\"\r\n    },\r\n    lastOrder: {\r\n        en: \"Last order\",\r\n        ru: \"В текущем порядке\"\r\n    },\r\n    simulationMode: {\r\n        en: \"Simulation mode\",\r\n        ru: \"Режим симулятора\"\r\n    },\r\n    simulationControls: {\r\n        en: \"Simulation Controls\",\r\n        ru: \"Управление симулятором\"\r\n    },\r\n    startSimulation: {\r\n        en: \"Start simulation\",\r\n        ru: \"Запустить симуляцию\"\r\n    },\r\n    moveDrillToStart: {\r\n        en: \"Move drill to start\",\r\n        ru: \"Переместить дрель в начало\"\r\n    },\r\n    simulationSettings: {\r\n        en: \"Simulation Settings\",\r\n        ru: \"Настройки симуляции\"\r\n    },\r\n    drillMoveSpeed: {\r\n        en: \"Drill move speed\",\r\n        ru: \"Скорость перемещения дрели\"\r\n    },\r\n    drillSpinSpeed: {\r\n        en: \"Drill spin speed\",\r\n        ru: \"Скорость вращения дрели\"\r\n    },\r\n    drillRotationsCount: {\r\n        en: \"Drill rotations count\",\r\n        ru: \"Число вращений дрели\"\r\n    },\r\n    drillColor: {\r\n        en: \"Drill color\",\r\n        ru: \"Цвет дрели\"\r\n    },\r\n    drillNormalColor: {\r\n        en: \"Normal color\",\r\n        ru: \"Цвет нормали\"\r\n    },\r\n    drillLabelSize: {\r\n        en: \"Drill label size\",\r\n        ru: \"Размер этикетки дрели\"\r\n    },\r\n    drillLabelColor: {\r\n        en: \"Drill label color\",\r\n        ru: \"Цвет этикетки дрели\"\r\n    },\r\n    showDrillLabel: {\r\n        en: \"Show drill label\",\r\n        ru: \"Показывать этикетку дрели\"\r\n    },\r\n    infiniteSimulation: {\r\n        en: \"Infinite simulation\",\r\n        ru: \"Бесконечная симуляция\"\r\n    },\r\n    showDrillingTime: {\r\n        en: \"Show drilling time\",\r\n        ru: \"Показать время сверления\"\r\n    },\r\n    drillingTime: {\r\n        en: \"Drilling time\",\r\n        ru: \"Время сверления\"\r\n    },\r\n    minutesShort: {\r\n        en: \"m\",\r\n        ru: \"м\"\r\n    },\r\n    secondsShort: {\r\n        en: \"s\",\r\n        ru: \"с\"\r\n    },\r\n    milliSecondsShort: {\r\n        en: \"ms\",\r\n        ru: \"мс\"\r\n    },\r\n    lastDrillingTime: {\r\n        en: \"Last drilling time\",\r\n        ru: \"Последнее время сверления\"\r\n    },\r\n    returnDrillToStart: {\r\n        en: \"Return drill to start\",\r\n        ru: \"Вернуть дрель в начало\"\r\n    },\r\n    drilledVertexColor: {\r\n        en: \"Drilled vertex color\",\r\n        ru: \"Цвет высверленной вершины\"\r\n    },\r\n    backgroundColor: {\r\n        en: \"Background color\",\r\n        ru: \"Цвет фона\"\r\n    },\r\n    zAlgorithmRowSize: {\r\n        en: \"Z-algorithm row size\",\r\n        ru: \"Размер ряда для z-алгоритма\"\r\n    }\r\n};\r\n","<script lang=\"ts\">\r\n    export let options: {option: any, label: string, id: string}[]\r\n    export let group: any = null\r\n    export let groupName: string = \"\"\r\n    export let lang = 'en'\r\n    export let getTranslation = (lang: string, key: string) => { return key }\r\n</script>\r\n\r\n{#each options as { option, label, id }}\r\n    <div class=\"input_row\">\r\n        <div class=\"option\">\r\n            <input id=\"{id}\" type=radio bind:group={group} name=\"{groupName}\" value={option}>\r\n            <label for=\"{id}\">{getTranslation(lang, label)}</label>\r\n        </div>\r\n    </div>\r\n{/each}\r\n\r\n<style>\r\n    input[type=\"radio\"] {\r\n        position: absolute;\r\n        clip: rect(0, 0, 0, 0);\r\n    }\r\n    input[type=\"radio\"] + label::before {\r\n        content: '\\a0';\r\n        display: inline-block;\r\n        margin: .2em .5em;\r\n        width: .8em;\r\n        height: .8em;\r\n        line-height: .75em;\r\n        transition: all .5s;\r\n        border: 1px solid silver;\r\n    }\r\n    input[type=\"radio\"] + label::before {\r\n        border-radius: 50%;\r\n    }\r\n    input[type=\"radio\"]:checked + label::before {\r\n        content: '\\a0';\r\n        background: rgba(255, 255, 255, 0.3);\r\n        box-shadow: inset 0 0 0 2px silver, 0 0 0 2px rgba(255, 255, 255, 0.3);\r\n    }\r\n    .input_row {\r\n        position: relative;\r\n        left: -7px;\r\n        display: flex;\r\n    }\r\n    .input_row:not(:last-child){\r\n        margin-bottom: 5px;\r\n    }\r\n    .input_row .option {\r\n        width: 100%;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { width, height } from './game.ts'\r\n\r\n\timport { onMount } from 'svelte'\r\n\timport Canvas from './Canvas.svelte'\r\n\timport Background from './Background.svelte'\r\n\timport DotGrid from './DotGrid.svelte'\r\n\timport Graph from './Graph.svelte'\r\n\timport Text from './Text.svelte'\r\n\timport FPS from './FPS.svelte'\r\n\timport InputRange from \"./InputRange.svelte\"\r\n\timport Checkbox from \"./Checkbox.svelte\"\r\n\timport ColorSelector from \"./ColorSelector.svelte\"\r\n\timport Window from \"./Window.svelte\"\r\n\r\n\timport TRANSLATIONS from \"./translations\"\r\n\timport RadioButtons from \"./RadioButtons.svelte\"\r\n\r\n\tfunction getTranslation(lang: string, key: string) {\r\n\t\tconst phrase: { [key: string]: string } = TRANSLATIONS[key]\r\n\t\treturn Object.keys(phrase).includes(lang) ? phrase[lang] : phrase[\"en\"]\r\n\t}\r\n\r\n\tlet languages = [{option: 'en', label: 'english', id: \"en_radio\"},\r\n\t\t\t\t\t {option: 'ru', label: 'russian', id: \"ru_radio\"}]\r\n\r\n\tlet connectAlgorithmsStrings = ['zAlgorithm', 'greedy', 'spanningTreePrim', 'prim', 'salesman', 'lastOrder']\r\n\r\n\tlet connectAlgorithms = connectAlgorithmsStrings.map((algorithm) => {\r\n\t\treturn {option: algorithm, label: algorithm, id: algorithm + '_radio'}\r\n\t})\r\n\r\n\tconst COLORS = [\r\n\t\t\"#fa1414\",\r\n\t\t\"#c88c64\",\r\n\t\t\"#50aa8c\",\r\n\t\t\"#0096e6\",\r\n\t\t\"#0a14e6\",\r\n\t\t\"#8200c8\",\r\n\t\t\"#fa96d2\",\r\n\t\t\"#828282\",\r\n\t\t\"#417530\",\r\n\t\t\"white\",\r\n\t\t\"#1a1a1a\",\r\n\t]\r\n\r\n\tlet lang = new URLSearchParams(location.search).get(\"lang\") || \"en\"\r\n\tlet showMenu = true\r\n\tlet showFPS = true\r\n\tlet showHint = true\r\n\tlet showVertexLabel = true\r\n\tlet showEdgeLabel = true\r\n\tlet removeEdgesOnMoving = false\r\n\tlet isFullscreen = false\r\n\tlet isSimulationMode = false\r\n\tlet vertexColorId = 0\r\n\tlet edgeColorId = 0\r\n\tlet vertexSize = 10\r\n\tlet edgeSize = 3\r\n\tlet vertexLabelColorId = 9\r\n\tlet vertexLabelSize = 8\r\n\tlet verticesGenerationCount = 30\r\n\tlet edgeLabelDistance = 30\r\n\tlet edgeLabelSize = 8\r\n\tlet edgeLabelColorId = 9\r\n\tlet totalDistance = '0'\r\n\tlet totalDistanceWithStart = '0'\r\n\tlet connectAlgorithm = connectAlgorithmsStrings[0]\r\n\tlet drillMoveSpeed = 0.1\r\n\tlet drillSpinSpeed = 0.5\r\n\tlet drillRotationsCount = 10\r\n\tlet drillColorId = 1\r\n\tlet drillNormalColorId = 0\r\n\tlet drillLabelSize = 8\r\n\tlet drillLabelColorId = 9\r\n\tlet isShowDrillLabel = true\r\n\tlet isInfiniteSimulation = false\r\n\tlet drillingTime = 0\r\n\tlet lastDrillingTime = 0\r\n\tlet isReturnDrillToStart = false\r\n\tlet isBlockDrillControls = false\r\n\tlet drilledVertexColorId = 9\r\n\tlet backgroundColorId = 10\r\n\tlet zAlgorithmRowSize = 30\r\n\r\n\tlet graphComponent\r\n\tlet graphClickHandler\r\n\tlet graphMouseDownHandler\r\n\tlet graphTouchStartHandler\r\n\tlet graphRemoveVerticesHandler\r\n\tlet graphRemoveEdgesHandler\r\n\tlet graphGenerateVerticesHandler\r\n\tlet graphConnectEdgesHandler\r\n\tlet moveDrillToStartHandler\r\n\tlet startSimulationHandler\r\n\r\n\tonMount(function(){\r\n\t\tgraphClickHandler = function(ev) {\r\n\t\t\tgraphComponent.handleClick(ev)\r\n\t\t}\r\n\t\tgraphMouseDownHandler = function(ev) {\r\n\t\t\tgraphComponent.handleMouseDown(ev)\r\n\t\t}\r\n\t\tgraphTouchStartHandler = function (ev) {\r\n\t\t\tgraphComponent.handleTouchStart(ev)\r\n\t\t}\r\n\t\tgraphRemoveVerticesHandler = function() {\r\n\t\t\tgraphComponent.removeAllVertices()\r\n\t\t}\r\n\t\tgraphRemoveEdgesHandler = function() {\r\n\t\t\tgraphComponent.removeAllEdges()\r\n\t\t}\r\n\t\tgraphGenerateVerticesHandler = function() {\r\n\t\t\tgraphComponent.generateVertices()\r\n\t\t}\r\n\t\tgraphConnectEdgesHandler = function() {\r\n\t\t\tgraphComponent.connectEdges()\r\n\t\t}\r\n\t\tmoveDrillToStartHandler = function () {\r\n\t\t\tif (!isSimulationMode) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tgraphComponent.moveDrillToStart()\r\n\t\t}\r\n\t\tstartSimulationHandler = function () {\r\n\t\t\tif (!isSimulationMode) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tgraphComponent.startSimulation()\r\n\t\t}\r\n\t})\r\n\r\n\tenum Windows {\r\n\t\tVertexSettings,\r\n\t\tEdgeSettings,\r\n\t\tOtherSettings,\r\n\t\tAbout,\r\n\t\tTotalDistance,\r\n\t\tConnectVertices,\r\n\t\tSimulationControls,\r\n\t\tDrillingTime,\r\n\t\tSize,\r\n\t}\r\n\r\n\tlet windowsOrder = [...Array(Windows.Size).keys()]\r\n\tlet windowsStatus = new Array<boolean>(Windows.Size)\r\n\twindowsStatus.fill(false)\r\n\r\n\tfunction makeWindowActive(window: Windows) {\r\n\t\twindowsStatus[window] = true\r\n\r\n\t\tfor (let i = 0; i < windowsOrder.length; i++) {\r\n\t\t\tif (windowsOrder[i] > windowsOrder[window]) {\r\n\t\t\t\twindowsOrder[i] -= 1\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindowsOrder[window] = Windows.Size - 1\r\n\t}\r\n\r\n\tfunction makeWindowInactive(window: Windows) {\r\n\t\twindowsStatus[window] = false\r\n\r\n\t\tfor (let i = 0; i < windowsOrder.length; i++) {\r\n\t\t\tif (windowsOrder[i] < windowsOrder[window]) {\r\n\t\t\t\twindowsOrder[i] += 1\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindowsOrder[window] = 0\r\n\t}\r\n\r\n\tfunction switchFullscreen() {\r\n\t\tif (document.fullscreenElement) {\r\n\t\t\tdocument.exitFullscreen()\r\n\t\t\t\t.then(function() {\r\n\t\t\t\t\t// element has exited fullscreen mode\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t// element could not exit fullscreen mode\r\n\t\t\t\t\t// error message\r\n\t\t\t\t\tconsole.log(error.message);\r\n\t\t\t\t})\r\n\r\n\t\t\tisFullscreen = false\r\n\t\t} else {\r\n\t\t\tdocument.documentElement.requestFullscreen()\r\n\t\t\t\t.then(function() {\r\n\t\t\t\t\t// element has entered fullscreen mode successfully\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t// element could not enter fullscreen mode\r\n\t\t\t\t\t// error message\r\n\t\t\t\t\tconsole.log(error.message);\r\n\t\t\t\t})\r\n\r\n\t\t\tisFullscreen = true\r\n\t\t}\r\n\t}\r\n\r\n\tfunction msToStringTime(time) {\r\n\t\tlet seconds = Math.floor(time / 1000)\r\n\t\tlet minutes = Math.floor(seconds / 60)\r\n\t\tseconds = seconds % 60\r\n\t\tlet milliseconds = time % 1000\r\n\r\n\t\treturn minutes + getTranslation(lang, 'minutesShort') + \" \" +\r\n\t\t\t\tseconds + getTranslation(lang, 'secondsShort') + \" \" +\r\n\t\t\t\tmilliseconds + getTranslation(lang, 'milliSecondsShort')\r\n\t}\r\n\r\n</script>\r\n\r\n<Canvas\r\n\t\tonClick={graphClickHandler}\r\n\t\tonMouseDown={graphMouseDownHandler}\r\n\t\tonTouchStart={graphTouchStartHandler}\r\n>\r\n\t<Background color={COLORS[backgroundColorId]}>\r\n\t\t<DotGrid divisions={30} color='hsla(0, 0%, 100%, 0.5)' />\r\n\t</Background>\r\n\t<Graph\r\n\t\t\tbind:this={graphComponent}\r\n\t\t\tbind:totalDistance={totalDistance}\r\n\t\t\tbind:totalDistanceWithStart={totalDistanceWithStart}\r\n\t\t\tbind:drillingTime={drillingTime}\r\n\t\t\tbind:lastDrillingTime={lastDrillingTime}\r\n\t\t\tbind:isBlockDrillControls={isBlockDrillControls}\r\n\t\t\tvertexColor={COLORS[vertexColorId]}\r\n\t\t\tedgeColor={COLORS[edgeColorId]}\r\n\t\t\tvertexSize={vertexSize}\r\n\t\t\tedgeSize={edgeSize}\r\n\t\t\tshowVertexLabel={showVertexLabel}\r\n\t\t\tremoveEdgesOnMoving={removeEdgesOnMoving}\r\n\t\t\tvertexLabelSize={vertexLabelSize}\r\n\t\t\tvertexLabelColor={COLORS[vertexLabelColorId]}\r\n\t\t\tverticesGenerationCount={verticesGenerationCount}\r\n\t\t\tshowEdgeLabel={showEdgeLabel}\r\n\t\t\tedgeLabelColor={COLORS[edgeLabelColorId]}\r\n\t\t\tedgeLabelSize={edgeLabelSize}\r\n\t\t\tedgeLabelDistance={edgeLabelDistance}\r\n\t\t\tconnectAlgorithm={connectAlgorithm}\r\n\t\t\tisSimulationMode={isSimulationMode}\r\n\t\t\tisShowDrillLabel={isShowDrillLabel}\r\n\t\t\tdrillLabelSize={drillLabelSize}\r\n\t\t\tdrillLabelColor={COLORS[drillLabelColorId]}\r\n\t\t\tdrillColor={COLORS[drillColorId]}\r\n\t\t\tdrillNormalColor={COLORS[drillNormalColorId]}\r\n\t\t\tdrillMoveSpeed={drillMoveSpeed}\r\n\t\t\tdrillSpinSpeed={drillSpinSpeed}\r\n\t\t\tdrillRotationsCount={drillRotationsCount}\r\n\t\t\tisInfiniteSimulation={isInfiniteSimulation}\r\n\t\t\tisReturnDrillToStart={isReturnDrillToStart}\r\n\t\t\tdrilledVertexColor={COLORS[drilledVertexColorId]}\r\n\t\t\tzAlgorithmRowSize={zAlgorithmRowSize}\r\n\t/>\r\n\t<Text\r\n\t\t\tshow={showHint}\r\n\t\t\ttext={getTranslation(lang, 'addHint')}\r\n\t\t\tfontSize={12}\r\n\t\t\talign='right'\r\n\t\t\tbaseline='bottom'\r\n\t\t\tx={$width - 20}\r\n\t\t\ty={$height - 20}\r\n\t/>\r\n\t<FPS show={showFPS} />\r\n</Canvas>\r\n<div class=\"controls\" class:controls_opened={showMenu}>\r\n\t{#if showMenu}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.About)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"about\")}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button on:click={() => (showMenu = false)}>\r\n\t\t\t\t\t{getTranslation(lang, \"hideMenu\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"graphControls\")}\r\n\t\t\t</h2>\r\n\t\t\t<Checkbox\r\n\t\t\t\t\ttitle={getTranslation(lang, \"removeEdgesOnMoving\")}\r\n\t\t\t\t\tbind:checked={removeEdgesOnMoving}\r\n\t\t\t/>\r\n\t\t\t{#if !isBlockDrillControls}\r\n\t\t\t\t<Checkbox\r\n\t\t\t\t\t\ttitle={getTranslation(lang, \"simulationMode\")}\r\n\t\t\t\t\t\tbind:checked={isSimulationMode}\r\n\t\t\t\t/>\r\n\t\t\t{/if}\r\n\t\t\t{#if !isSimulationMode}\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={graphRemoveVerticesHandler}>\r\n\t\t\t\t\t\t{getTranslation(lang, \"removeAllVertices\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={graphRemoveEdgesHandler}>\r\n\t\t\t\t\t\t{getTranslation(lang, \"removeAllEdges\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={graphGenerateVerticesHandler}>\r\n\t\t\t\t\t\t{getTranslation(lang, \"generateVertices\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation(lang, \"verticesGenerationCount\")}\r\n\t\t\t\t\tmin={2}\r\n\t\t\t\t\tmax={100}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tbind:value={verticesGenerationCount}\r\n\t\t\t/>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.ConnectVertices)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"connectVertices\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.TotalDistance)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"showTotalDistance\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{#if isSimulationMode}\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={() => {makeWindowActive(Windows.SimulationControls)}}>\r\n\t\t\t\t\t\t{getTranslation(lang, \"simulationControls\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"settings\")}\r\n\t\t\t</h2>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.VertexSettings)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"openVertexSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.EdgeSettings)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"openEdgeSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.OtherSettings)}}>\r\n\t\t\t\t\t{getTranslation(lang, \"openOtherSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<button on:click={() => (showMenu = true)}>\r\n\t\t\t{getTranslation(lang, \"showMenu\")}\r\n\t\t</button>\r\n\t{/if}\r\n</div>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'vertexSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.VertexSettings]}\r\n\t\tzIndex={windowsOrder[Windows.VertexSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.VertexSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.VertexSettings) }}\r\n>\r\n\t<Checkbox\r\n\t\t\ttitle={getTranslation(lang, \"showVertexLabel\")}\r\n\t\t\tbind:checked={showVertexLabel}\r\n\t/>\r\n\t<InputRange\r\n\t\t\tname={getTranslation(lang, \"vertexSize\")}\r\n\t\t\tmin={5}\r\n\t\t\tmax={20}\r\n\t\t\tstep={0.3}\r\n\t\t\tbind:value={vertexSize}\r\n\t/>\r\n\t{#if showVertexLabel}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"vertexLabelSize\")}\r\n\t\t\t\tmin={8}\r\n\t\t\t\tmax={16}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={vertexLabelSize}\r\n\t\t/>\r\n\t{/if}\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, \"vertexColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tcolors={COLORS}\r\n\t\t\t\tbind:selectedId={vertexColorId}\r\n\t\t/>\r\n\t</div>\r\n\t{#if showVertexLabel}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"vertexLabelColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={vertexLabelColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'edgeSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.EdgeSettings]}\r\n\t\tzIndex={windowsOrder[Windows.EdgeSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.EdgeSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.EdgeSettings) }}\r\n>\r\n\t<Checkbox\r\n\t\t\ttitle={getTranslation(lang, \"showEdgeLabel\")}\r\n\t\t\tbind:checked={showEdgeLabel}\r\n\t/>\r\n\t<InputRange\r\n\t\t\tname={getTranslation(lang, \"edgeSize\")}\r\n\t\t\tmin={1}\r\n\t\t\tmax={10}\r\n\t\t\tstep={0.3}\r\n\t\t\tbind:value={edgeSize}\r\n\t/>\r\n\t{#if showEdgeLabel}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"edgeLabelSize\")}\r\n\t\t\t\tmin={8}\r\n\t\t\t\tmax={16}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={edgeLabelSize}\r\n\t\t/>\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"edgeLabelDistance\")}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={40}\r\n\t\t\t\tstep={0.3}\r\n\t\t\t\tbind:value={edgeLabelDistance}\r\n\t\t/>\r\n\t{/if}\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, \"edgeColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tcolors={COLORS}\r\n\t\t\t\tbind:selectedId={edgeColorId}\r\n\t\t/>\r\n\t</div>\r\n\t{#if showEdgeLabel}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"edgeLabelColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={edgeLabelColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'otherSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.OtherSettings]}\r\n\t\tzIndex={windowsOrder[Windows.OtherSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.OtherSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.OtherSettings) }}\r\n>\r\n\t<div class=\"controls-block\">\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"showFPS\")}\r\n\t\t\t\tbind:checked={showFPS}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"showHint\")}\r\n\t\t\t\tbind:checked={showHint}\r\n\t\t/>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, 'language')}\r\n\t\t</h2>\r\n\t\t<RadioButtons\r\n\t\t\t\toptions={languages}\r\n\t\t\t\tbind:group={lang}\r\n\t\t\t\tgroupName=\"lang\"\r\n\t\t\t\tgetTranslation={getTranslation}\r\n\t\t\t\tlang={lang}\r\n\t\t/>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t<button on:click={switchFullscreen}>\r\n\t\t\t\t{#if isFullscreen}\r\n\t\t\t\t\t{getTranslation(lang, 'exitFullsceen')}\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t{getTranslation(lang, 'enterFullsceen')}\r\n\t\t\t\t{/if}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation(lang, \"backgroundColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tcolors={COLORS}\r\n\t\t\t\tbind:selectedId={backgroundColorId}\r\n\t\t/>\r\n\t</div>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'about')}\"\r\n\t\tisOpened={windowsStatus[Windows.About]}\r\n\t\tzIndex={windowsOrder[Windows.About]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.About) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.About) }}\r\n>\r\n\t<p style=\"text-align: center\">\r\n\t\t{getTranslation(lang, 'pcbDrillingOptimazer')}<br>\r\n\t\t<a\r\n\t\t\t\thref=\"https://github.com/ITsJust4Fun/DrillingOptimizer\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t>\r\n\t\t\t{getTranslation(lang, 'githubPage')}\r\n\t\t</a>\r\n\t</p>\r\n\t<p style=\"text-align: center\">{getTranslation(lang, 'developedUsingSvelte')}</p>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'distance')}\"\r\n\t\tisOpened={windowsStatus[Windows.TotalDistance]}\r\n\t\tzIndex={windowsOrder[Windows.TotalDistance]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.TotalDistance) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.TotalDistance) }}\r\n>\r\n\t<div>\r\n\t\t{getTranslation(lang, 'totalDistance')}: {totalDistance}\r\n\t</div>\r\n\t<div>\r\n\t\t{getTranslation(lang, 'totalDistanceWithStart')}: {totalDistanceWithStart}\r\n\t</div>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation(lang, 'connectVertices')}\"\r\n\t\tisOpened={windowsStatus[Windows.ConnectVertices]}\r\n\t\tzIndex={windowsOrder[Windows.ConnectVertices]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.ConnectVertices) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.ConnectVertices) }}\r\n>\r\n\t<h2 class=\"controls-block__title\">\r\n\t\t{getTranslation(lang, 'algorithms')}\r\n\t</h2>\r\n\t<RadioButtons\r\n\t\t\toptions={connectAlgorithms}\r\n\t\t\tbind:group={connectAlgorithm}\r\n\t\t\tgroupName=\"connectAlgorithm\"\r\n\t\t\tgetTranslation={getTranslation}\r\n\t\t\tlang={lang}\r\n\t/>\r\n\t{#if connectAlgorithm === 'zAlgorithm'}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation(lang, \"zAlgorithmRowSize\")}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={150}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={zAlgorithmRowSize}\r\n\t\t/>\r\n\t{/if}\r\n\t{#if !isSimulationMode}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={graphConnectEdgesHandler}>\r\n\t\t\t\t\t{getTranslation(lang, 'connect')}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n{#if isSimulationMode}\r\n\t<Window\r\n\t\t\ttitle=\"{getTranslation(lang, 'simulationControls')}\"\r\n\t\t\tisOpened={windowsStatus[Windows.SimulationControls]}\r\n\t\t\tzIndex={windowsOrder[Windows.SimulationControls]}\r\n\t\t\tonClickHandler={() => { makeWindowActive(Windows.SimulationControls) }}\r\n\t\t\tonCloseHandler={() => { makeWindowInactive(Windows.SimulationControls) }}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"showDrillLabel\")}\r\n\t\t\t\tbind:checked={isShowDrillLabel}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"infiniteSimulation\")}\r\n\t\t\t\tbind:checked={isInfiniteSimulation}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation(lang, \"returnDrillToStart\")}\r\n\t\t\t\tbind:checked={isReturnDrillToStart}\r\n\t\t/>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t{#if !isBlockDrillControls}\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={startSimulationHandler}>\r\n\t\t\t\t\t\t{getTranslation(lang, 'startSimulation')}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={moveDrillToStartHandler}>\r\n\t\t\t\t\t\t{getTranslation(lang, 'moveDrillToStart')}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.DrillingTime)}}>\r\n\t\t\t\t\t{getTranslation(lang, 'showDrillingTime')}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, 'simulationSettings')}\r\n\t\t\t</h2>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation(lang, \"drillMoveSpeed\")}\r\n\t\t\t\t\tmin={0.05}\r\n\t\t\t\t\tmax={1}\r\n\t\t\t\t\tstep={0.05}\r\n\t\t\t\t\tbind:value={drillMoveSpeed}\r\n\t\t\t/>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation(lang, \"drillSpinSpeed\")}\r\n\t\t\t\t\tmin={0.05}\r\n\t\t\t\t\tmax={1}\r\n\t\t\t\t\tstep={0.05}\r\n\t\t\t\t\tbind:value={drillSpinSpeed}\r\n\t\t\t/>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation(lang, \"drillRotationsCount\")}\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tmax={100}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tbind:value={drillRotationsCount}\r\n\t\t\t/>\r\n\t\t\t{#if isShowDrillLabel}\r\n\t\t\t\t<InputRange\r\n\t\t\t\t\t\tname={getTranslation(lang, \"drillLabelSize\")}\r\n\t\t\t\t\t\tmin={8}\r\n\t\t\t\t\t\tmax={16}\r\n\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\tbind:value={drillLabelSize}\r\n\t\t\t\t/>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"drillColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={drillColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"drillNormalColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={drillNormalColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t{#if isShowDrillLabel}\r\n\t\t\t<div class=\"controls-block\">\r\n\t\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t\t{getTranslation(lang, \"drillLabelColor\")}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<ColorSelector\r\n\t\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\t\tbind:selectedId={drillLabelColorId}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation(lang, \"drilledVertexColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tcolors={COLORS}\r\n\t\t\t\t\tbind:selectedId={drilledVertexColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</Window>\r\n\t<Window\r\n\t\t\ttitle={getTranslation(lang, \"drillingTime\")}\r\n\t\t\tisOpened={windowsStatus[Windows.DrillingTime]}\r\n\t\t\tzIndex={windowsOrder[Windows.DrillingTime]}\r\n\t\t\tonClickHandler={() => { makeWindowActive(Windows.DrillingTime) }}\r\n\t\t\tonCloseHandler={() => { makeWindowInactive(Windows.DrillingTime) }}\r\n\t>\r\n\t\t<div>\r\n\t\t\t{getTranslation(lang, \"lastDrillingTime\")}: {msToStringTime(lastDrillingTime)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{getTranslation(lang, \"drillingTime\")}: {msToStringTime(drillingTime)}\r\n\t\t</div>\r\n\t</Window>\r\n{/if}\r\n\r\n<svelte:window\r\n\t\ton:fullscreenchange={() => { isFullscreen = document.fullscreenElement !== null }}\r\n/>\r\n\r\n<style>\r\n\t:global(body) {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\tbutton {\r\n\t\tpadding: 8px 15px;\r\n\t\tcolor: inherit;\r\n\t\tfont-size: 13px;\r\n\t\t/* white-space: nowrap; */\r\n\t\t/* overflow: hidden;\r\n        text-overflow: ellipsis; */\r\n\t}\r\n\t.controls {\r\n\t\toverflow-y: scroll;\r\n\t\tbox-shadow: 0 0 10px 0 black;\r\n\t\t/* display: flex; */\r\n\t\t/* flex-direction: row; */\r\n\t\tposition: fixed;\r\n\t\t/* width: 300px; */\r\n\t\tmax-height: calc(100% - 40px);\r\n\t\tright: 20px;\r\n\t\ttop: 20px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\r\n\t\t/* padding: 10px; */\r\n\t\tborder-radius: 5px;\r\n\t\tbackdrop-filter: blur(8px);\r\n\t\t-webkit-backdrop-filter: blur(8px);\r\n\t\t-ms-overflow-style: none; /* IE and Edge */\r\n\t\tscrollbar-width: none; /* Firefox */\r\n\t\ttransition-duration: 0.2s;\r\n\t}\r\n\t.controls::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.controls_opened {\r\n\t\tpadding: 10px;\r\n\t\twidth: 300px;\r\n\t\tborder-radius: 10px;\r\n\t}\r\n\t.controls-block > * {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t.controls-block:not(:last-child) {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\t.controls-block__title {\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: 5px;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 100%;\r\n\t}\r\n\t.buttons-row {\r\n\t\tdisplay: flex;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t.buttons-row button {\r\n\t\twidth: 100%;\r\n\t}\r\n\t@supports (not (backdrop-filter: blur())) and\r\n    (not (-webkit-backdrop-filter: blur())) {\r\n\t\t.controls {\r\n\t\t\tbackground-color: rgba(150, 150, 150, 0.95);\r\n\t\t}\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","bind","index","props","bound","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","width","innerWidth","height","innerHeight","pixelRatio","devicePixelRatio","canvas","time","list","array","reduce","dict","deriveObject","Symbol","renderable","render","api","get","getContext","mounted","setup","remove","canvas_1","canvas_1_width_value","canvas_1_height_value","passive","apply","arguments","preventDefault","call","current","frame","killLoopOnError","attributes","onClick","ev","onMouseDown","onTouchStart","listeners","canvasStore","contextStore","async","entity","$props","elapsed","lastTime","performance","now","loop","requestAnimationFrame","beginTime","dt","cancelAnimationFrame","createLoop","save","scale","$pixelRatio","err","console","error","warn","restore","setContext","idx","$$value","color","clearRect","fillStyle","fillRect","divisions","pointSize","aspect","y","beginPath","x","u","v","px","py","arc","PI","show","align","baseline","fontSize","fontFamily","font","textAlign","textBaseline","fillText","epsilon","create_1","out","Float32Array","clone_1","fromValues_1","copy_1","set_1","equals_1","a0","a1","b0","b1","abs","EPSILON","exactEquals_1","add_1","subtract_1","sub","require$$0","multiply_1","mul","divide_1","div","inverse_1","min_1","min","max_1","rotate_1","angle","cos","s","sin","floor_1","floor","ceil_1","ceil","round_1","round","scale_1","scaleAndAdd_1","distance_1","sqrt","dist","squaredDistance_1","sqrDist","length_1","squaredLength_1","sqrLen","negate_1","normalize_1","dot_1","cross_1","z","lerp_1","t","ax","ay","random_1","random","transformMat2_1","transformMat2d_1","transformMat3_1","transformMat4_1","forEach_1","stride","offset","count","arg","vec","limit_1","mSq","n","glVec2","require$$1","clone","require$$2","fromValues","require$$3","copy","require$$4","require$$5","equals","require$$6","exactEquals","require$$7","require$$8","subtract","require$$9","require$$10","multiply","require$$11","require$$12","divide","require$$13","require$$14","inverse","require$$15","require$$16","require$$17","rotate","require$$18","require$$19","require$$20","require$$21","require$$22","scaleAndAdd","require$$23","distance","require$$24","require$$25","squaredDistance","require$$26","require$$27","require$$28","require$$29","squaredLength","require$$30","require$$31","negate","require$$32","normalize","require$$33","dot","require$$34","cross","require$$35","lerp","require$$36","require$$37","transformMat2","require$$38","transformMat2d","require$$39","transformMat3","require$$40","transformMat4","require$$41","require$$42","limit","require$$43","isShow","isShowLabel","drillColor","normalColor","thickness","moveTo","isSpinEnabled","isFinished","moveSpeed","spinSpeed","rotationsCount","labelSize","labelColor","velocity","lastNormal","isSpin","spinOffset","rotationsCompleted","drawNormal","position","normal","point","vec2","lineTo","stroke","checkDistance","delta","zone","$$invalidate","lineCap","strokeStyle","lineWidth","theta","cx","cy","ex","ey","dy","dx","atan2","resultX","resultY","spin","join","PriorityNode","constructor","priority","PriorityQueue","enqueue","head","previous","next","tail","dequeue","oldHead","peek","_a","isEmpty","Path","points","order","distances","j","q","prototype","change","temp","randomPos","delta_distance","exp","swap","tmp","jm1","jp1","im1","ip1","access","module","exports","solve","temp_coeff","path","has_callback","temperature","Point","getRandomInt","getDistance","vertexI","vertexJ","x1","x2","y1","y2","vertexColor","edgeColor","vertexSize","edgeSize","showVertexLabel","removeEdgesOnMoving","vertexLabelColor","vertexLabelSize","verticesGenerationCount","showEdgeLabel","edgeLabelDistance","edgeLabelSize","edgeLabelColor","totalDistance","totalDistanceWithStart","connectAlgorithm","isSimulationMode","drillNormalColor","drillLabelSize","drillLabelColor","drillMoveSpeed","drillSpinSpeed","drillRotationsCount","isShowDrillLabel","isDrillingFinished","isInfiniteSimulation","isReturnDrillToStart","drillingTime","lastDrillingTime","isBlockDrillControls","drilledVertexColor","zAlgorithmRowSize","vertices","drilledVertices","edges","startPosition","mouse","movingVertexId","mouseDown","isDrillingHoleFinished","moveDrillTo","drillingEdgeIndex","isMovingToStart","drillingStartTime","drilledVertex","handleMouseDown","nearest","getNearestVertex","clientX","clientY","Date","handleMouseMove","movementX","movementY","$width","$height","removeAllEdges","calculateDistances","edge","drawLine","vertex","entries","vertexDrawColor","includes","drawVertexLabel","drawEdgeLabel","stopDrillingTime","generateVertices","startSimulation","moveDrillToStart","moveToVertex","moveDrill","previousTouch","removeAllVertices","attempts","log","fillEdges","connectEdges","sort","isYEqual","isYLess","sortedVertices","searchVertexes","sortVertices","nearestVertex","nearestToDrillVertex","greedy","prim","spanningTreePrim","salesmanAlgorithm","orderedVertices","salesman","queue","allEdges","Infinity","minKey","getChildren","edgesList","transformToPath","startIndex","isEdgeEqual","child","childIndex","findIndex","reversedChildIndex","verticesIndexes","newVertices","verticesIndex","spanningTreeToPath","totalDistanceCount","totalDistanceWithStartCount","at","toString","label","String","thetaVertices","radius","translate","verticesList","nearestIndex","nearestValue","touch","touches","pageX","pageY","frames","prevTime","state","toFixed","step","span","title","checked","button","button_style_value","invertColor","hex","parseInt","colors","selectedId","checkmarkColor","idAndColor","div1","div0","h2","create_if_block","isOpened","zIndex","onCloseHandler","onClickHandler","isMouseDown","isFirstRender","outOfBoundLimitX","outOfBoundLimitY","checkPosition","afterUpdate","clientWidth","clientHeight","classes","className","some","TRANSLATIONS","language","en","ru","english","russian","showMenu","hideMenu","addHint","showHint","about","graphicalSettings","showFPS","graphControls","vertexSettings","edgeSettings","otherSettings","settings","openVertexSettings","openEdgeSettings","openOtherSettings","exitFullsceen","enterFullsceen","pcbDrillingOptimazer","githubPage","developedUsingSvelte","showTotalDistance","connectVertices","connect","algorithms","zAlgorithm","lastOrder","simulationMode","simulationControls","simulationSettings","showDrillLabel","infiniteSimulation","showDrillingTime","minutesShort","secondsShort","milliSecondsShort","returnDrillToStart","backgroundColor","t1","t1_value","group","groupName","lang","getTranslation","__value","background_changes","graph_changes","text_1_changes","t_value","create_if_block_14","create_if_block_13","create_if_block_12","button0","button1","div4","h20","div2","button2","div3","button3","div8","h21","div5","button4","div6","button5","div7","button6","t0","t0_value","t2","t2_value","t4","t4_value","t10","t10_value","t12","t12_value","t15","t15_value","t17","t17_value","t19","t19_value","t21","t21_value","create_if_block_10","create_if_block_9","t3","t3_value","create_if_block_8","create_if_block_7","create_if_block_6","t6","t6_value","p0","br","p1","if_block0","create_if_block_5","create_if_block_4","SimulationControls","DrillingTime","create_if_block_3","create_if_block_2","create_if_block_1","h22","h23","VertexSettings","EdgeSettings","OtherSettings","About","TotalDistance","ConnectVertices","phrase","connectAlgorithmsStrings","connectAlgorithms","algorithm","option","id","graphComponent","graphClickHandler","graphMouseDownHandler","graphTouchStartHandler","graphRemoveVerticesHandler","graphRemoveEdgesHandler","graphGenerateVerticesHandler","graphConnectEdgesHandler","moveDrillToStartHandler","startSimulationHandler","URLSearchParams","location","search","isFullscreen","vertexColorId","edgeColorId","vertexLabelColorId","edgeLabelColorId","drillColorId","drillNormalColorId","drillLabelColorId","drilledVertexColorId","backgroundColorId","Windows","handleClick","handleTouchStart","windowsOrder","Size","windowsStatus","makeWindowActive","makeWindowInactive","fullscreenElement","exitFullscreen","catch","message","documentElement","requestFullscreen","seconds","minutes","milliseconds","body"],"mappings":"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"}
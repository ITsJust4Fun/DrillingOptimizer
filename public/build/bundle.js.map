{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/game.ts","../../src/stores/graph.ts","../../src/translations.ts","../../src/stores/translation.ts","../../src/stores/ui.ts","../../src/Canvas.svelte","../../src/Background.svelte","../../src/DotGrid.svelte","../../src/Text.svelte","../../node_modules/gl-vec2/epsilon.js","../../node_modules/gl-vec2/create.js","../../node_modules/gl-vec2/clone.js","../../node_modules/gl-vec2/fromValues.js","../../node_modules/gl-vec2/copy.js","../../node_modules/gl-vec2/set.js","../../node_modules/gl-vec2/equals.js","../../node_modules/gl-vec2/exactEquals.js","../../node_modules/gl-vec2/add.js","../../node_modules/gl-vec2/subtract.js","../../node_modules/gl-vec2/sub.js","../../node_modules/gl-vec2/multiply.js","../../node_modules/gl-vec2/mul.js","../../node_modules/gl-vec2/divide.js","../../node_modules/gl-vec2/div.js","../../node_modules/gl-vec2/inverse.js","../../node_modules/gl-vec2/min.js","../../node_modules/gl-vec2/max.js","../../node_modules/gl-vec2/rotate.js","../../node_modules/gl-vec2/floor.js","../../node_modules/gl-vec2/ceil.js","../../node_modules/gl-vec2/round.js","../../node_modules/gl-vec2/scale.js","../../node_modules/gl-vec2/scaleAndAdd.js","../../node_modules/gl-vec2/distance.js","../../node_modules/gl-vec2/dist.js","../../node_modules/gl-vec2/squaredDistance.js","../../node_modules/gl-vec2/sqrDist.js","../../node_modules/gl-vec2/length.js","../../node_modules/gl-vec2/len.js","../../node_modules/gl-vec2/squaredLength.js","../../node_modules/gl-vec2/sqrLen.js","../../node_modules/gl-vec2/negate.js","../../node_modules/gl-vec2/normalize.js","../../node_modules/gl-vec2/dot.js","../../node_modules/gl-vec2/cross.js","../../node_modules/gl-vec2/lerp.js","../../node_modules/gl-vec2/random.js","../../node_modules/gl-vec2/transformMat2.js","../../node_modules/gl-vec2/transformMat2d.js","../../node_modules/gl-vec2/transformMat3.js","../../node_modules/gl-vec2/transformMat4.js","../../node_modules/gl-vec2/forEach.js","../../node_modules/gl-vec2/limit.js","../../node_modules/gl-vec2/index.js","../../src/Drill.svelte","../../src/PriorityNode.ts","../../src/PriorityQueue.ts","../../src/salesman/index.js","../../src/Graph.svelte","../../src/FPS.svelte","../../src/InputRange.svelte","../../src/Checkbox.svelte","../../src/ColorSelector.svelte","../../src/Window.svelte","../../src/RadioButtons.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getContext, onMount, onDestroy } from 'svelte';\nimport { writable, derived } from 'svelte/store';\n\n// Some props for the app\nexport const width = writable(window.innerWidth);\nexport const height = writable(window.innerHeight);\nexport const pixelRatio = writable(window.devicePixelRatio);\nexport const context = writable();\nexport const canvas = writable();\nexport const time = writable(0);\n\n// A more convenient store for grabbing all game props\nexport const props = deriveObject({\n\tcontext,\n\tcanvas,\n\twidth,\n\theight,\n\tpixelRatio,\n\ttime\n});\n\nexport const key = Symbol();\n\nexport const getState = () => {\n\tconst api: any = getContext(key);\n\treturn api.getState();\n};\n\nexport const renderable = (render) => {\n\tconst api: any = getContext(key);\n\tconst element: any = {\n\t\tready: false,\n\t\tmounted: false\n\t};\n\n\tif (typeof render === 'function') {\n\t\telement.render = render;\n\t} else if (render) {\n\t\tif (render.render) element.render = render.render;\n\t\tif (render.setup) element.setup = render.setup;\n\t}\n\n\tapi.add(element);\n\n\tonMount(() => {\n\t\telement.mounted = true;\n\t\treturn () => {\n\t\t\tapi.remove(element);\n\t\t\telement.mounted = false;\n\t\t};\n\t});\n}\n\nfunction deriveObject (obj) {\n\tconst keys = Object.keys(obj);\n\tconst list = keys.map(key => {\n\t\treturn obj[key];\n\t});\n\n\treturn derived(list, (array) => {\n\t\treturn array.reduce((dict, value, i) => {\n\t\t\tdict[keys[i]] = value;\n\t\t\treturn dict;\n\t\t}, {});\n\t});\n}","import { writable } from 'svelte/store'\r\n\r\nexport const showVertexLabel = writable<boolean>(\r\n    localStorage.getItem('showVertexLabel') === null ? true : localStorage.showVertexLabel === 'true'\r\n)\r\n\r\nshowVertexLabel.subscribe(\r\n    (value) => localStorage.showVertexLabel = String(value)\r\n)\r\n\r\nexport const showEdgeLabel = writable<boolean>(\r\n    localStorage.getItem('showEdgeLabel') === null ? true : localStorage.showEdgeLabel === 'true'\r\n)\r\n\r\nshowEdgeLabel.subscribe(\r\n    (value) => localStorage.showEdgeLabel = String(value)\r\n)\r\n\r\nexport const removeEdgesOnMoving = writable<boolean>(\r\n    localStorage.getItem('removeEdgesOnMoving') === null ? false : localStorage.removeEdgesOnMoving === 'true'\r\n)\r\n\r\nremoveEdgesOnMoving.subscribe(\r\n    (value) => localStorage.removeEdgesOnMoving = String(value)\r\n)\r\n\r\nexport const isSimulationMode = writable<boolean>(\r\n    localStorage.getItem('isSimulationMode') === null ? false : localStorage.isSimulationMode === 'true'\r\n)\r\n\r\nisSimulationMode.subscribe(\r\n    (value) => localStorage.isSimulationMode = String(value)\r\n)\r\n\r\nexport const vertexColorId = writable<Number>(\r\n    localStorage.getItem('vertexColorId') === null ? 0 : parseInt(localStorage.vertexColorId)\r\n)\r\n\r\nvertexColorId.subscribe(\r\n    (value) => localStorage.vertexColorId = String(value)\r\n)\r\n\r\nexport const edgeColorId = writable<Number>(\r\n    localStorage.getItem('edgeColorId') === null ? 0 : parseInt(localStorage.edgeColorId)\r\n)\r\n\r\nedgeColorId.subscribe(\r\n    (value) => localStorage.edgeColorId = String(value)\r\n)\r\n","export default {\r\n  language: {\r\n    en: \"Language\",\r\n    ru: \"Язык\",\r\n  },\r\n  english: {\r\n    en: \"English\",\r\n    ru: \"Английский\",\r\n  },\r\n  russian: {\r\n    en: \"Russian\",\r\n    ru: \"Русский\",\r\n  },\r\n  showMenu: {\r\n    en: \"Show Menu\",\r\n    ru: \"Показать меню\"\r\n  },\r\n  hideMenu: {\r\n    en: \"Hide menu\",\r\n    ru: \"Скрыть меню\"\r\n  },\r\n  addHint: {\r\n    en: 'Click to add vertex.',\r\n    ru: 'Нажмите чтобы добавить вершину.',\r\n  },\r\n  showHint: {\r\n    en: 'Show Hint',\r\n    ru: 'Показать подсказку'\r\n  },\r\n  about: {\r\n    en: \"About\",\r\n    ru: \"О программе\"\r\n  },\r\n  graphicalSettings: {\r\n    en: \"Graphical settings\",\r\n    ru: \"Настройки просмотра\",\r\n  },\r\n  showFPS: {\r\n    en: \"Show FPS\",\r\n    ru: \"Показать FPS\",\r\n  },\r\n  vertexColor: {\r\n    en: \"Vertex color\",\r\n    ru: \"Цвет вершин\",\r\n  },\r\n  edgeColor: {\r\n    en: \"Edge color\",\r\n    ru: \"Цвет граней\",\r\n  },\r\n  vertexSize: {\r\n    en: \"Vertex size\",\r\n    ru: \"Размер вершин\",\r\n  },\r\n  edgeSize: {\r\n    en: \"Edge size\",\r\n    ru: \"Размер грани\",\r\n  },\r\n  showVertexLabel: {\r\n    en: \"Show vertex label\",\r\n    ru: \"Показывать координаты вершин\",\r\n  },\r\n  vertexLabelSize: {\r\n    en: \"Vertex label size\",\r\n    ru: \"Размер шрифта координат вершины\",\r\n  },\r\n  vertexLabelColor: {\r\n    en: \"Vertex label color\",\r\n    ru: \"Цвет шрифта координат вершины\",\r\n  },\r\n  graphControls: {\r\n    en: \"Graph Controls\",\r\n    ru: \"Управление Графом\",\r\n  },\r\n  removeAllVertices: {\r\n    en: \"Remove all vertices\",\r\n    ru: \"Удалить все вершины\",\r\n  },\r\n  removeAllEdges: {\r\n    en: \"Remove all edges\",\r\n    ru: \"Удалить все грани\",\r\n  },\r\n  generateVertices: {\r\n    en: \"Generate vertices\",\r\n    ru: \"Генерировать вершины\",\r\n  },\r\n  verticesGenerationCount: {\r\n    en: \"Vertices generation count\",\r\n    ru: \"Количество генерируемых вершин\",\r\n  },\r\n  removeEdgesOnMoving: {\r\n    en: \"Remove edges on moving\",\r\n    ru: \"Удалять грани при перемещении\",\r\n  },\r\n  edgeLabelDistance: {\r\n    en: \"Edge label distance\",\r\n    ru: \"Удалённость этикетки грани\",\r\n  },\r\n  edgeLabelSize: {\r\n    en: \"Edge label size\",\r\n    ru: \"Размер этикетки грани\",\r\n  },\r\n  edgeLabelColor: {\r\n    en: \"Edge label color\",\r\n    ru: \"Цвет этикетки грани\",\r\n  },\r\n  showEdgeLabel: {\r\n    en: \"Show edge label\",\r\n    ru: \"Показывать этекетку грани\",\r\n  },\r\n  vertexSettings: {\r\n    en: \"Vertex Settings\",\r\n    ru: \"Настройка вершин\",\r\n  },\r\n  edgeSettings: {\r\n    en: \"Edge Settings\",\r\n    ru: \"Настройка граней\",\r\n  },\r\n  otherSettings: {\r\n    en: \"Other Settings\",\r\n    ru: \"Другие Настройки\",\r\n  },\r\n  settings: {\r\n    en: \"Settings\",\r\n    ru: \"Настройки\",\r\n  },\r\n  openVertexSettings: {\r\n    en: \"Open Vertex Settings\",\r\n    ru: \"Открыть настройки вершин\"\r\n  },\r\n  openEdgeSettings: {\r\n    en: \"Open Edge Settings\",\r\n    ru: \"Открыть настройки граней\"\r\n  },\r\n  openOtherSettings: {\r\n    en: \"Open Other Settings\",\r\n    ru: \"Открыть другие настройки\"\r\n  },\r\n  exitFullsceen: {\r\n    en: \"Exit fullscreen\",\r\n    ru: \"Выйти из полноэкранного режима\"\r\n  },\r\n  enterFullsceen: {\r\n    en: \"Enter fullscreen\",\r\n    ru: \"Развернуть на весь экран\"\r\n  },\r\n  pcbDrillingOptimazer: {\r\n    en: \"PCB drilling optimazer\",\r\n    ru: \"Оптимизатор сверления печатных плат\"\r\n  },\r\n  githubPage: {\r\n    en: \"GitHub page\",\r\n    ru: \"Страница на GitHub\"\r\n  },\r\n  developedUsingSvelte: {\r\n    en: \"Developed using svelte\",\r\n    ru: \"Разработано с использованием svelte\"\r\n  },\r\n  distance: {\r\n    en: \"Distance\",\r\n    ru: \"Расстояние\"\r\n  },\r\n  totalDistance: {\r\n    en: \"Total distance\",\r\n    ru: \"Общее расстояние\"\r\n  },\r\n  totalDistanceWithStart: {\r\n    en: \"Total distance with start\",\r\n    ru: \"Общее расстояние со старта\"\r\n  },\r\n  showTotalDistance: {\r\n    en: \"Show total distance\",\r\n    ru: \"Показать общее расстояние\"\r\n  },\r\n  connectVertices: {\r\n    en: \"Connect vertices\",\r\n    ru: \"Соединить вершины\"\r\n  },\r\n  connect: {\r\n    en: \"Connect\",\r\n    ru: \"Соединить\"\r\n  },\r\n  algorithms: {\r\n    en: \"Algorithms\",\r\n    ru: \"Алгоритмы\"\r\n  },\r\n  zAlgorithm: {\r\n    en: \"Z-algorithm\",\r\n    ru: \"Z-алгоритм\"\r\n  },\r\n  greedy: {\r\n    en: \"Greedy\",\r\n    ru: \"Жадный\"\r\n  },\r\n  spanningTreePrim: {\r\n    en: \"Prim (Spanning tree)\",\r\n    ru: \"Прима (Остановое дерево)\"\r\n  },\r\n  prim: {\r\n    en: \"Prim\",\r\n    ru: \"Прима\"\r\n  },\r\n  salesman: {\r\n    en: \"Salesman\",\r\n    ru: \"Конвояжёры\"\r\n  },\r\n  lastOrder: {\r\n    en: \"Last order\",\r\n    ru: \"В текущем порядке\"\r\n  },\r\n  simulationMode: {\r\n    en: \"Simulation mode\",\r\n    ru: \"Режим симулятора\"\r\n  },\r\n  simulationControls: {\r\n    en: \"Simulation Controls\",\r\n    ru: \"Управление симулятором\"\r\n  },\r\n  startSimulation: {\r\n    en: \"Start simulation\",\r\n    ru: \"Запустить симуляцию\"\r\n  },\r\n  moveDrillToStart: {\r\n    en: \"Move drill to start\",\r\n    ru: \"Переместить дрель в начало\"\r\n  },\r\n  simulationSettings: {\r\n    en: \"Simulation Settings\",\r\n    ru: \"Настройки симуляции\"\r\n  },\r\n  drillMoveSpeed: {\r\n    en: \"Drill move speed\",\r\n    ru: \"Скорость перемещения дрели\"\r\n  },\r\n  drillSpinSpeed: {\r\n    en: \"Drill spin speed\",\r\n    ru: \"Скорость вращения дрели\"\r\n  },\r\n  drillRotationsCount: {\r\n    en: \"Drill rotations count\",\r\n    ru: \"Число вращений дрели\"\r\n  },\r\n  drillColor: {\r\n    en: \"Drill color\",\r\n    ru: \"Цвет дрели\"\r\n  },\r\n  drillNormalColor: {\r\n    en: \"Normal color\",\r\n    ru: \"Цвет нормали\"\r\n  },\r\n  drillLabelSize: {\r\n    en: \"Drill label size\",\r\n    ru: \"Размер этикетки дрели\"\r\n  },\r\n  drillLabelColor: {\r\n    en: \"Drill label color\",\r\n    ru: \"Цвет этикетки дрели\"\r\n  },\r\n  showDrillLabel: {\r\n    en: \"Show drill label\",\r\n    ru: \"Показывать этикетку дрели\"\r\n  },\r\n  infiniteSimulation: {\r\n    en: \"Infinite simulation\",\r\n    ru: \"Бесконечная симуляция\"\r\n  },\r\n  showDrillingTime: {\r\n    en: \"Show drilling time\",\r\n    ru: \"Показать время сверления\"\r\n  },\r\n  drillingTime: {\r\n    en: \"Drilling time\",\r\n    ru: \"Время сверления\"\r\n  },\r\n  minutesShort: {\r\n    en: \"m\",\r\n    ru: \"м\"\r\n  },\r\n  secondsShort: {\r\n    en: \"s\",\r\n    ru: \"с\"\r\n  },\r\n  milliSecondsShort: {\r\n    en: \"ms\",\r\n    ru: \"мс\"\r\n  },\r\n  lastDrillingTime: {\r\n    en: \"Last drilling time\",\r\n    ru: \"Последнее время сверления\"\r\n  },\r\n  returnDrillToStart: {\r\n    en: \"Return drill to start\",\r\n    ru: \"Вернуть дрель в начало\"\r\n  },\r\n  drilledVertexColor: {\r\n    en: \"Drilled vertex color\",\r\n    ru: \"Цвет высверленной вершины\"\r\n  },\r\n  backgroundColor: {\r\n    en: \"Background color\",\r\n    ru: \"Цвет фона\"\r\n  },\r\n  zAlgorithmRowSize: {\r\n    en: \"Z-algorithm row size\",\r\n    ru: \"Размер ряда для z-алгоритма\"\r\n  }\r\n} as { [phrase: string]: { [lang: string]: string } };\r\n","import { writable } from 'svelte/store'\r\nimport TRANSLATIONS from \"../translations\"\r\n\r\nexport let languages = [{option: 'en', label: 'english', id: \"en_radio\"},\r\n                        {option: 'ru', label: 'russian', id: \"ru_radio\"}]\r\n\r\nexport function getTranslation(lang: string, key: string) {\r\n    const phrase: { [key: string]: string } = TRANSLATIONS[key]\r\n    return Object.keys(phrase).includes(lang) ? phrase[lang] : phrase[\"en\"]\r\n}\r\n\r\nexport const lang = writable<string>(\r\n    localStorage.getItem('lang') === null ? 'en'\r\n                                                    : localStorage.lang\r\n)\r\n\r\nlang.subscribe((value) => localStorage.lang = value)\r\n","import { writable } from 'svelte/store'\r\n\r\nexport const COLORS = [\r\n    \"#fa1414\",\r\n    \"#c88c64\",\r\n    \"#50aa8c\",\r\n    \"#0096e6\",\r\n    \"#0a14e6\",\r\n    \"#8200c8\",\r\n    \"#fa96d2\",\r\n    \"#828282\",\r\n    \"#417530\",\r\n    \"white\",\r\n    \"#1a1a1a\",\r\n]\r\n\r\nexport const showMenu = writable<boolean>(\r\n    localStorage.getItem('showMenu') === null ? true : localStorage.showMenu === 'true'\r\n)\r\n\r\nshowMenu.subscribe(\r\n    (value) => localStorage.showMenu = String(value)\r\n)\r\n\r\nexport const showFPS = writable<boolean>(\r\n    localStorage.getItem('showFPS') === null ? true : localStorage.showFPS === 'true'\r\n)\r\n\r\nshowFPS.subscribe(\r\n    (value) => localStorage.showFPS = String(value)\r\n)\r\n\r\nexport const showHint = writable<boolean>(\r\n    localStorage.getItem('showHint') === null ? true : localStorage.showHint === 'true'\r\n)\r\n\r\nshowHint.subscribe(\r\n    (value) => localStorage.showHint = String(value)\r\n)\r\n","<script>\n\timport { onMount, onDestroy, setContext } from 'svelte';\n\n\timport {\n\t\tkey,\n\t\twidth,\n\t\theight,\n\t\tcanvas as canvasStore,\n\t\tcontext as contextStore,\n\t\tpixelRatio,\n\t\tprops,\n\t\ttime\n\t} from './game.js';\n\n\texport let killLoopOnError = true;\n\texport let attributes = {};\n\texport let onClick = (ev) => {}\n\texport let onMouseDown = (ev) => {}\n\texport let onTouchStart = (ev) => {}\n\t\n\tlet listeners = [];\n\tlet canvas;\n\tlet context;\n\tlet frame;\n\n\tonMount(() => {\n\t\t// prepare canvas stores\n\t\tcontext = canvas.getContext('2d', attributes);\n\t\tcanvasStore.set(canvas);\n\t\tcontextStore.set(context);\n\n\t\t// setup entities\n\t\tlisteners.forEach(async entity => {\n\t\t\tif (entity.setup) {\n\t\t\t\tlet p = entity.setup($props);\n\t\t\t\tif (p && p.then) await p;\n\t\t\t}\n\t\t\tentity.ready = true;\n\t\t});\n\t\t\n\t\t// start game loop\n\t\treturn createLoop((elapsed, dt) => {\n\t\t\ttime.set(elapsed);\n\t\t\trender(dt);\n\t\t});\n\t});\n\t\n\tsetContext(key, {\n\t\tadd (fn) {\n\t\t\tthis.remove(fn);\n\t\t\tlisteners.push(fn);\n\t\t},\n\t\tremove (fn) {\n\t\t\tconst idx = listeners.indexOf(fn);\n\t\t\tif (idx >= 0) listeners.splice(idx, 1);\n\t\t}\n\t});\n\t\n\tfunction render (dt) {\n\t\tcontext.save();\n\t\tcontext.scale($pixelRatio, $pixelRatio);\n\t\tlisteners.forEach(entity => {\n\t\t\ttry {\n\t\t\t\tif (entity.mounted && entity.ready && entity.render) {\n\t\t\t\t\tentity.render($props, dt);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\tif (killLoopOnError) {\n\t\t\t\t\tcancelAnimationFrame(frame);\n\t\t\t\t\tconsole.warn('Animation loop stopped due to an error');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tcontext.restore();\n\t}\n\t\n\tfunction handleResize () {\n\t\twidth.set(window.innerWidth);\n\t\theight.set(window.innerHeight);\n\t\tpixelRatio.set(window.devicePixelRatio);\n\t}\n\t\n\tfunction createLoop (fn) {\n\t\tlet elapsed = 0;\n\t\tlet lastTime = performance.now();\n\t\t(function loop() {\n\t\t\tframe = requestAnimationFrame(loop);\n\t\t\tconst beginTime = performance.now();\n\t\t\tconst dt = (beginTime - lastTime) / 1000;\n\t\t\tlastTime = beginTime;\n\t\t\telapsed += dt;\n\t\t\tfn(elapsed, dt);\n\t\t})();\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(frame);\n\t\t};\n\t}\n</script>\n\n<canvas\n\tbind:this={canvas}\n\ton:click|preventDefault={onClick}\n\ton:mousedown={onMouseDown}\n\ton:touchstart={onTouchStart}\n\twidth={$width * $pixelRatio}\n\theight={$height * $pixelRatio}\n\tstyle=\"width: {$width}px; height: {$height}px;\"></canvas>\n\n<svelte:window on:resize|passive={handleResize} />\n\n<slot></slot>\n","<script>\n\timport { renderable } from './game.ts';\n\texport let color = null;\n\t\n\trenderable(props => {\n\t\tconst { context, width, height } = props;\n\t\tcontext.clearRect(0, 0, width, height);\n\t\tif (color) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fillRect(0, 0, width, height);\n\t\t}\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>\n","<script>\n\timport { renderable } from './game.js';\n\t\n\texport let color = 'black';\n\texport let divisions = 20;\n\texport let pointSize = 1;\n\n\trenderable(props => {\n\t\tconst { context, width, height } = props;\n\t\tconst aspect = width / height;\n\t\t\n\t\tcontext.save();\n\t\tfor (let y = 0; y < divisions; y++) {\n\t\t\tcontext.beginPath();\n\t\t\tfor (let x = 0; x < divisions; x++) {\n\t\t\t\tconst u = divisions <= 1 ? 0.5 : x / (divisions - 1);\n\t\t\t\tconst v = divisions <= 1 ? 0.5 : y / (divisions - 1);\n\n\t\t\t\tlet px, py;\n\t\t\t\tif (width > height) {\n\t\t\t\t\tpx = u * width;\n\t\t\t\t\tpy = (v * aspect) * height;\n\t\t\t\t} else {\n\t\t\t\t\tpx = (u / aspect) * width;\n\t\t\t\t\tpy = v * height;\n\t\t\t\t}\n\t\t\t\tcontext.arc(px, py, pointSize, 0, Math.PI * 2);\n\t\t\t}\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fill();\n\t\t}\n\t\tcontext.restore();\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>","<script lang=\"ts\">\n\timport { renderable } from './game.js'\n\n    export let show = true\n\t\n\texport let color = 'hsl(0, 0%, 100%)'\n\texport let align = 'center'\n\texport let baseline = 'middle'\n\t\n\texport let text = ''\n\texport let x = 0\n\texport let y = 0\n\t\n\texport let fontSize = 16\n\texport let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\n\t\n\trenderable(props => {\n\t\tconst { context, width, height } = props\n\t\tif (text && show) {\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.font = `${fontSize}px ${fontFamily}`\n\t\t\tcontext.textAlign = align;\n\t\t\tcontext.textBaseline = baseline;\t\t\n\t\t\tcontext.fillText(text, x, y);\n\t\t}\n\t});\n</script>\n\n<!-- The following allows this component to nest children -->\n<slot></slot>\n","module.exports = 0.000001\n","module.exports = create\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n    var out = new Float32Array(2)\n    out[0] = 0\n    out[1] = 0\n    return out\n}","module.exports = clone\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(2)\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = fromValues\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n    var out = new Float32Array(2)\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = copy\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = set\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var b0 = b[0]\n  var b1 = b[1]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)))\n}\n","module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1]\n}\n","module.exports = add\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    return out\n}","module.exports = subtract\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    return out\n}","module.exports = require('./subtract')\n","module.exports = multiply\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    return out\n}","module.exports = require('./multiply')\n","module.exports = divide\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    return out\n}","module.exports = require('./divide')\n","module.exports = inverse\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  return out\n}\n","module.exports = min\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    return out\n}","module.exports = max\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    return out\n}","module.exports = rotate\n\n/**\n * Rotates a vec2 by an angle\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to rotate\n * @param {Number} angle the angle of rotation (in radians)\n * @returns {vec2} out\n */\nfunction rotate(out, a, angle) {\n  var c = Math.cos(angle),\n      s = Math.sin(angle)\n  var x = a[0],\n      y = a[1]\n\n  out[0] = x * c - y * s\n  out[1] = x * s + y * c\n\n  return out\n}\n\n","module.exports = floor\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  return out\n}\n","module.exports = ceil\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  return out\n}\n","module.exports = round\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  return out\n}\n","module.exports = scale\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    return out\n}","module.exports = scaleAndAdd\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    return out\n}","module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./distance')\n","module.exports = squaredDistance\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredDistance')\n","module.exports = length\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./length')\n","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredLength')\n","module.exports = negate\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    return out\n}","module.exports = normalize\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1]\n    var len = x*x + y*y\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n    }\n    return out\n}","module.exports = dot\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1]\n}","module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    return out\n}","module.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n    var r = Math.random() * 2.0 * Math.PI\n    out[0] = Math.cos(r) * scale\n    out[1] = Math.sin(r) * scale\n    return out\n}","module.exports = transformMat2\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y\n    out[1] = m[1] * x + m[3] * y\n    return out\n}","module.exports = transformMat2d\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y + m[4]\n    out[1] = m[1] * x + m[3] * y + m[5]\n    return out\n}","module.exports = transformMat3\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[3] * y + m[6]\n    out[1] = m[1] * x + m[4] * y + m[7]\n    return out\n}","module.exports = transformMat4\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], \n        y = a[1]\n    out[0] = m[0] * x + m[4] * y + m[12]\n    out[1] = m[1] * x + m[5] * y + m[13]\n    return out\n}","module.exports = forEach\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n    var i, l\n    if(!stride) {\n        stride = 2\n    }\n\n    if(!offset) {\n        offset = 0\n    }\n    \n    if(count) {\n        l = Math.min((count * stride) + offset, a.length)\n    } else {\n        l = a.length\n    }\n\n    for(i = offset; i < l; i += stride) {\n        vec[0] = a[i]\n        vec[1] = a[i+1]\n        fn(vec, vec, arg)\n        a[i] = vec[0]\n        a[i+1] = vec[1]\n    }\n    \n    return a\n}","module.exports = limit;\n\n/**\n * Limit the magnitude of this vector to the value used for the `max`\n * parameter.\n *\n * @param  {vec2} the vector to limit\n * @param  {Number} max the maximum magnitude for the vector\n * @returns {vec2} out\n */\nfunction limit(out, a, max) {\n  var mSq = a[0] * a[0] + a[1] * a[1];\n\n  if (mSq > max * max) {\n    var n = Math.sqrt(mSq);\n    out[0] = a[0] / n * max;\n    out[1] = a[1] / n * max;\n  } else {\n    out[0] = a[0];\n    out[1] = a[1];\n  }\n\n  return out;\n}\n","module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , inverse: require('./inverse')\n  , min: require('./min')\n  , max: require('./max')\n  , rotate: require('./rotate')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat2: require('./transformMat2')\n  , transformMat2d: require('./transformMat2d')\n  , transformMat3: require('./transformMat3')\n  , transformMat4: require('./transformMat4')\n  , forEach: require('./forEach')\n  , limit: require('./limit')\n}\n","<script>\n\timport { renderable } from './game.js'\n\timport Text from './Text.svelte'\n\timport vec2 from 'gl-vec2'\n\n\texport let isShow = true\n\texport let isShowLabel = true\n\texport let drillColor = '#419e5a'\n\texport let normalColor = '#ffe554'\n\texport let size = 10\n\texport let thickness = 3\n\texport let moveTo = [ 0, 0 ]\n\texport let isSpinEnabled = false\n\texport let isFinished = true\n\texport let moveSpeed = 0.1\n\texport let spinSpeed = 0.5\n\texport let rotationsCount = 50\n\texport let labelSize = 8\n\texport let labelColor = 'hsl(0, 0%, 100%)'\n\t\n\tlet text\n\t\n\tlet x = 0\n\tlet y = 0\n\tlet velocity = [ 0, 0 ]\n\tlet lastNormal = [ 1, 0 ]\n\n\tlet isSpin = false\n\tlet spinOffset = 0\n\tlet rotationsCompleted = 0\n\t\n\trenderable((props, dt) => {\n\t\tconst { context, width, height } = props\n\n\t\tif (!isShow) {\n\t\t\ttext.$set({\n\t\t\t\ttext: '',\n\t\t\t\tx,\n\t\t\t\ty: y + size + 10\n\t\t\t})\n\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlet position = [ x, y ]\n\t\tif (!isFinished) {\n\t\t\tconst delta = vec2.sub([], moveTo, position)\n\t\t\tvec2.normalize(delta, delta)\n\t\t\tvec2.scaleAndAdd(velocity, velocity, delta, moveSpeed)\n\t\t}\n\t\t\n\t\tif (x < 0 || x > width) {\n\t\t\tvelocity = [ 0, 0 ]\n\t\t}\n\n\t\tif (y < 0 || y > height) {\n\t\t\tvelocity = [ 0, 0 ]\n\t\t}\n\n\t\tx += velocity[0]\n\t\ty += velocity[1]\n\t\t\n\t\tposition[0] = x\n\t\tposition[1] = y\n\n\t\tconst delta = vec2.sub([], moveTo, position)\n\n\t\tif (checkDistance(delta, 0) && checkDistance(delta, 1)) {\n\t\t\tstop()\n\t\t}\n\n\t\tcontext.lineCap = 'round'\n\n\t\tcontext.beginPath()\n\t\tcontext.fillStyle = drillColor\n\t\tcontext.strokeStyle = drillColor\n\t\tcontext.lineWidth = thickness\n\t\tcontext.arc(x, y, size, 0, Math.PI * 2)\n\t\tcontext.fill()\n\n\t\tlet normal\n\t\t\n\t\tif (vec2.squaredLength(velocity) > 0) {\n\t\t\tnormal = vec2.normalize([], velocity)\n\t\t\tlastNormal = normal\n\t\t} else {\n\t\t\tnormal = lastNormal\n\t\t}\n\n\t\tcontext.fillStyle = normalColor\n\t\tcontext.strokeStyle = normalColor\n\t\tcontext.lineWidth = thickness\n\n\t\tif (isSpin) {\n\t\t\tspin(context, normal)\n\t\t} else {\n\t\t\tdrawNormal(context, position, normal, size)\n\t\t}\n\n\t\t// We use this to make sure the text is in sync with the character\n\t\t// Because regular prop reactivity happens a frame too late\n\t\tif (isShowLabel) {\n\t\t\ttext.$set({\n\t\t\t\ttext: `(${position.map(n => Math.round(n)).join(', ')})`,\n\t\t\t\tx,\n\t\t\t\ty: y + size + 10\n\t\t\t})\n\t\t} else {\n\t\t\ttext.$set({\n\t\t\t\ttext: '',\n\t\t\t\tx,\n\t\t\t\ty: y + size + 10\n\t\t\t})\n\t\t}\n\t})\n\t\n\tfunction drawNormal(context, position, normal, length) {\n\t\tconst point = vec2.scaleAndAdd([], position, normal, length)\n\t\tcontext.beginPath()\n\t\tcontext.moveTo(position[0], position[1])\n\t\tcontext.lineTo(point[0], point[1])\n\t\tcontext.stroke()\n\t}\n\n\tfunction stop() {\n\t\tx = moveTo[0]\n\t\ty = moveTo[1]\n\n\t\tvelocity = [ 0, 0 ]\n\n\t\tif (isSpinEnabled) {\n\t\t\tif (!isFinished) {\n\t\t\t\tisSpin = true\n\t\t\t}\n\t\t} else {\n\t\t\tisFinished = true\n\t\t}\n\t}\n\n\tfunction spin(context, normal) {\n\n\t\tlet theta = angle(0, 0, normal[0], normal[1]) + spinOffset\n\t\tlet resultX = Math.cos(theta)\n\t\tlet resultY = Math.sin(theta)\n\n\t\tdrawNormal(context, [ x, y ], vec2.normalize([], [ resultX, resultY ]), size)\n\n\t\tlet isFinishingRotation = (spinOffset + spinSpeed) - 2 * Math.PI > 0.01\n\n\t\tif (!isFinishingRotation) {\n\t\t\tspinOffset += spinSpeed\n\t\t} else {\n\t\t\tspinOffset = 0\n\t\t\trotationsCompleted++\n\n\t\t\tif (rotationsCompleted >= rotationsCount) {\n\t\t\t\trotationsCompleted = 0\n\t\t\t\tisSpin = false\n\t\t\t\tisFinished = true\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction checkDistance(delta, index) {\n\t\tlet zone = Math.abs(velocity[index])\n\t\tzone = zone !== 0 ? zone : 1\n\n\t\treturn Math.abs(delta[index]) < zone\n\t}\n\n\tfunction angle(cx, cy, ex, ey) {\n\t\tlet dy = ey - cy\n\t\tlet dx = ex - cx\n\t\treturn Math.atan2(dy, dx) // range (-PI, PI]\n\t}\n</script>\n\n<Text\n\tfontSize={labelSize}\n\tcolor={labelColor}\n\tbaseline='top'\n\tbind:this={text}\n/>\n\n<slot></slot>\n","export class PriorityNode<T> {\r\n    value: T\r\n\r\n    priority: number\r\n\r\n    next: PriorityNode<T>\r\n\r\n    constructor(value: T, priority: number) {\r\n        this.value = value\r\n        this.priority = priority\r\n    }\r\n}\r\n","import {PriorityNode} from './PriorityNode'\r\n\r\nexport class PriorityQueue<T> {\r\n    private head: PriorityNode<T>\r\n\r\n    private tail: PriorityNode<T>\r\n\r\n    public enqueue(value: T, priority: number): PriorityNode<T> {\r\n        const node = new PriorityNode(value, priority)\r\n        if (!this.head) {\r\n            this.head = this.tail = node\r\n        } else {\r\n            let previous = this.head\r\n            if (previous.priority > priority) {\r\n                node.next = previous\r\n                this.head = node\r\n                return node\r\n            }\r\n            let next = previous?.next\r\n            while(previous && next) {\r\n                if (next.priority > priority) {\r\n                    node.next = next\r\n                    previous.next = node\r\n                    return node\r\n                }\r\n                previous = previous.next\r\n                next = next.next\r\n            }\r\n\r\n            this.tail.next = node\r\n            this.tail = node\r\n        }\r\n        return node\r\n    }\r\n\r\n    public dequeue(): PriorityNode<T> {\r\n        if (!this.head) {\r\n            return\r\n        }\r\n        const oldHead = this.head\r\n        this.head  = oldHead.next\r\n        return oldHead\r\n    }\r\n\r\n    public peek(): T {\r\n        return this.head?.value\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.head == null\r\n    }\r\n\r\n    public get data() {\r\n        const values = []\r\n        let head = this.head\r\n        while (head) {\r\n            values.push(head.value)\r\n            head = head.next\r\n        }\r\n        return values\r\n    }\r\n}\r\n","/**\r\n * @module\r\n * @author Ophir LOJKINE\r\n * salesman npm module\r\n *\r\n * Good heuristic for the traveling salesman problem using simulated annealing.\r\n * @see {@link https://lovasoa.github.io/salesman.js/|demo}\r\n **/\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nfunction Path(points) {\r\n    this.points = points;\r\n    this.order = new Array(points.length);\r\n    for(var i=0; i<points.length; i++) this.order[i] = i;\r\n    this.distances = new Array(points.length * points.length);\r\n    for(var i=0; i<points.length; i++)\r\n        for(var j=0; j<points.length; j++)\r\n            this.distances[j + i*points.length] = distance(points[i], points[j]);\r\n}\r\nPath.prototype.change = function(temp) {\r\n    var i = this.randomPos(), j = this.randomPos();\r\n    var delta = this.delta_distance(i, j);\r\n    if (delta < 0 || Math.random() < Math.exp(-delta / temp)) {\r\n        this.swap(i,j);\r\n    }\r\n};\r\nPath.prototype.size = function() {\r\n    var s = 0;\r\n    for (var i=0; i<this.points.length; i++) {\r\n        s += this.distance(i, ((i+1)%this.points.length));\r\n    }\r\n    return s;\r\n};\r\nPath.prototype.swap = function(i,j) {\r\n    var tmp = this.order[i];\r\n    this.order[i] = this.order[j];\r\n    this.order[j] = tmp;\r\n};\r\nPath.prototype.delta_distance = function(i, j) {\r\n    var jm1 = this.index(j-1),\r\n        jp1 = this.index(j+1),\r\n        im1 = this.index(i-1),\r\n        ip1 = this.index(i+1);\r\n    var s =\r\n        this.distance(jm1, i  )\r\n        + this.distance(i  , jp1)\r\n        + this.distance(im1, j  )\r\n        + this.distance(j  , ip1)\r\n        - this.distance(im1, i  )\r\n        - this.distance(i  , ip1)\r\n        - this.distance(jm1, j  )\r\n        - this.distance(j  , jp1);\r\n    if (jm1 === i || jp1 === i)\r\n        s += 2*this.distance(i,j);\r\n    return s;\r\n};\r\nPath.prototype.index = function(i) {\r\n    return (i + this.points.length) % this.points.length;\r\n};\r\nPath.prototype.access = function(i) {\r\n    return this.points[this.order[this.index(i)]];\r\n};\r\nPath.prototype.distance = function(i, j) {\r\n    return this.distances[this.order[i] * this.points.length + this.order[j]];\r\n};\r\n// Random index between 1 and the last position in the array of points\r\nPath.prototype.randomPos = function() {\r\n    return 1 + Math.floor(Math.random() * (this.points.length - 1));\r\n};\r\n\r\n/**\r\n * Solves the following problem:\r\n *  Given a list of points and the distances between each pair of points,\r\n *  what is the shortest possible route that visits each point exactly\r\n *  once and returns to the origin point?\r\n *\r\n * @param {Point[]} points The points that the path will have to visit.\r\n * @param {Number} [temp_coeff=0.999] changes the convergence speed of the algorithm: the closer to 1, the slower the algorithm and the better the solutions.\r\n * @param {Function} [callback=] An optional callback to be called after each iteration.\r\n *\r\n * @returns {Number[]} An array of indexes in the original array. Indicates in which order the different points are visited.\r\n *\r\n * @example\r\n * var points = [\r\n *       new salesman.Point(2,3)\r\n *       //other points\r\n *     ];\r\n * var solution = salesman.solve(points);\r\n * var ordered_points = solution.map(i => points[i]);\r\n * // ordered_points now contains the points, in the order they ought to be visited.\r\n **/\r\nfunction solve(points, temp_coeff, callback) {\r\n    var path = new Path(points);\r\n    if (points.length < 2) return path.order; // There is nothing to optimize\r\n    if (!temp_coeff)\r\n        temp_coeff = 1 - Math.exp(-10 - Math.min(points.length,1e6)/1e5);\r\n    var has_callback = typeof(callback) === \"function\";\r\n\r\n    for (var temperature = 100 * distance(path.access(0), path.access(1));\r\n         temperature > 1e-6;\r\n         temperature *= temp_coeff) {\r\n        path.change(temperature);\r\n        if (has_callback) callback(path.order);\r\n    }\r\n    return path.order;\r\n};\r\n\r\n/**\r\n * Represents a point in two dimensions.\r\n * @class\r\n * @param {Number} x abscissa\r\n * @param {Number} y ordinate\r\n */\r\nfunction Point(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n};\r\n\r\nfunction distance(p, q) {\r\n    var dx = p.x - q.x, dy = p.y - q.y;\r\n    return Math.sqrt(dx*dx + dy*dy);\r\n}\r\n\r\nif (typeof module === \"object\") {\r\n    module.exports = {\r\n        \"solve\": solve,\r\n        \"Point\": Point\r\n    };\r\n}\r\n","<script lang=\"ts\">\r\n    import { renderable, width, height } from './game'\r\n    import { showVertexLabel, showEdgeLabel, removeEdgesOnMoving,\r\n             isSimulationMode, vertexColorId, edgeColorId } from './stores/graph'\r\n    import { COLORS } from './stores/ui'\r\n    import Drill from \"./Drill.svelte\"\r\n    import {PriorityQueue} from \"./PriorityQueue\"\r\n\r\n    import salesmanAlgorithm from './salesman'\r\n\r\n    export let vertexSize = 10\r\n    export let edgeSize = 3\r\n    export let vertexLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let vertexLabelSize = 8\r\n    export let verticesGenerationCount = 30\r\n    export let edgeLabelDistance = 30\r\n    export let edgeLabelSize = 8\r\n    export let edgeLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let totalDistance = '0'\r\n    export let totalDistanceWithStart = '0'\r\n    export let connectAlgorithm = ''\r\n    export let drillColor = '#419e5a'\r\n    export let drillNormalColor = '#ffe554'\r\n    export let drillLabelSize = 8\r\n    export let drillLabelColor = 'hsl(0, 0%, 100%)'\r\n    export let drillMoveSpeed = 0.1\r\n    export let drillSpinSpeed = 0.5\r\n    export let drillRotationsCount = 50\r\n    export let isShowDrillLabel = true\r\n    export let isDrillingFinished = true\r\n    export let isInfiniteSimulation = false\r\n    export let isReturnDrillToStart = true\r\n    export let drillingTime = 0\r\n    export let lastDrillingTime = 0\r\n    export let isBlockDrillControls = false\r\n    export let drilledVertexColor = 'hsl(0, 0%, 100%)'\r\n    export let zAlgorithmRowSize = 30\r\n\r\n    interface Vertex {\r\n        x: number\r\n        y: number\r\n    }\r\n\r\n    interface Edge {\r\n        i: number\r\n        j: number\r\n    }\r\n\r\n    let vertices: Vertex[] = []\r\n    let drilledVertices: number[] = []\r\n    let edges: Edge[] = []\r\n    let minDistance = 80\r\n    let startPosition = { x: 0, y: 0 }\r\n\r\n    let mouse: Vertex = null\r\n    let movingVertexId = -1\r\n    let mouseDown = false\r\n    let time = -1\r\n\r\n    const CLICK_TIME_MS = 100\r\n\r\n    let isDrillingHoleFinished = true\r\n    let moveDrillTo = [ 0, 0 ]\r\n    let drillingEdgeIndex = -1\r\n    let isSpinEnabled = true\r\n    let isMovingToStart = false\r\n    let drillingStartTime = 0\r\n    let drilledVertex = -1\r\n\r\n    renderable((props) => {\r\n        const { context } = props\r\n\r\n        if (mouseDown && movingVertexId !== -1 && Date.now() - time > CLICK_TIME_MS) {\r\n            let x = mouse.x\r\n            let y = mouse.y\r\n\r\n            if (x > $width) {\r\n                x = $width\r\n            } else if (x < 0) {\r\n                x = 0\r\n            }\r\n\r\n            if (y > $height) {\r\n                y = $height\r\n            } else if (y < 0) {\r\n                y = 0\r\n            }\r\n\r\n            vertices[movingVertexId] = { x, y }\r\n\r\n            if ($removeEdgesOnMoving) {\r\n                removeAllEdges()\r\n            } else {\r\n                calculateDistances()\r\n            }\r\n        }\r\n\r\n        for (let edge of edges) {\r\n            drawLine(context, vertices[edge.i], vertices[edge.j])\r\n        }\r\n\r\n        for (let [index, vertex] of vertices.entries()) {\r\n            let vertexDrawColor = COLORS[$vertexColorId]\r\n\r\n            if ($isSimulationMode && drilledVertices.includes(index)) {\r\n                vertexDrawColor = drilledVertexColor\r\n            }\r\n\r\n            context.lineCap = 'round'\r\n            context.beginPath()\r\n            context.fillStyle = vertexDrawColor\r\n            context.strokeStyle = vertexDrawColor\r\n            context.lineWidth = 3\r\n            context.arc(vertex.x, vertex.y, vertexSize, 0, Math.PI * 2)\r\n            context.fill()\r\n        }\r\n\r\n        if ($showVertexLabel) {\r\n            for (let vertex of vertices) {\r\n                let text = `(${Math.round(vertex.x)}, ${Math.round(vertex.y)})`\r\n                drawVertexLabel({ context, text, x: vertex.x, y: vertex.y + vertexSize + 10 })\r\n            }\r\n        }\r\n\r\n        if ($showEdgeLabel) {\r\n            for (let edge of edges) {\r\n                drawEdgeLabel(context, vertices[edge.i], vertices[edge.j])\r\n            }\r\n        }\r\n\r\n        if (isMovingToStart) {\r\n            finishMovingToStart()\r\n        } else if ($isSimulationMode) {\r\n            moveDrill()\r\n        }\r\n\r\n        if (drillingStartTime !== 0) {\r\n            drillingTime = Date.now() - drillingStartTime\r\n        }\r\n    })\r\n\r\n    export function handleClick(ev) {\r\n        if ($isSimulationMode) {\r\n            return\r\n        }\r\n\r\n        if (Date.now() - time > CLICK_TIME_MS && time !== -1) {\r\n            time = -1\r\n            return\r\n        }\r\n\r\n        time = -1\r\n        removeAllEdges()\r\n\r\n        let x = ev.clientX\r\n        let y = ev.clientY\r\n\r\n        let nearest = getNearestVertex(x, y)\r\n\r\n        if (nearest.value <= vertexSize && nearest.index !== -1) {\r\n            vertices = [...vertices.slice(0, nearest.index), ...vertices.slice(nearest.index + 1, vertices.length)]\r\n            return\r\n        }\r\n\r\n        let vertex: Vertex = { x, y }\r\n        vertices = [...vertices, vertex]\r\n    }\r\n\r\n    export function handleMouseDown(ev) {\r\n        if ($isSimulationMode) {\r\n            return\r\n        }\r\n\r\n        let x = ev.clientX\r\n        let y = ev.clientY\r\n\r\n        let nearest = getNearestVertex(x, y)\r\n\r\n        if (nearest.value > vertexSize || nearest.index === -1) {\r\n            return\r\n        }\r\n\r\n        movingVertexId = nearest.index\r\n        mouse = vertices[movingVertexId]\r\n        mouseDown = true\r\n        time = Date.now()\r\n    }\r\n\r\n    function handleMouseMove(ev) {\r\n        if (!mouse) {\r\n            return\r\n        }\r\n\r\n        mouse.x += ev.movementX\r\n        mouse.y += ev.movementY\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        if ($isSimulationMode) {\r\n            return\r\n        }\r\n\r\n        mouseDown = false\r\n        movingVertexId = -1\r\n        previousTouch = null\r\n    }\r\n\r\n    export function handleTouchStart(ev) {\r\n        let touch = ev.touches[0]\r\n        handleMouseDown(touch)\r\n    }\r\n\r\n    let previousTouch = null\r\n    function handleTouchMove(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        if (previousTouch) {\r\n            touch.movementX = touch.pageX - previousTouch.pageX\r\n            touch.movementY = touch.pageY - previousTouch.pageY\r\n            handleMouseMove(touch)\r\n        }\r\n\r\n        previousTouch = touch\r\n    }\r\n\r\n    export function removeAllEdges() {\r\n        edges = []\r\n        totalDistance = '0'\r\n        totalDistanceWithStart = '0'\r\n        resetDistances()\r\n    }\r\n\r\n    export function removeAllVertices() {\r\n        removeAllEdges()\r\n        vertices = []\r\n        drilledVertices = []\r\n    }\r\n\r\n    function getRandomInt(min: number, max:number): number {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n    }\r\n\r\n    export function generateVertices() {\r\n        removeAllVertices()\r\n        let attempts = 0\r\n\r\n        while (vertices.length !== verticesGenerationCount && attempts !== 5000) {\r\n            let x = getRandomInt(0, $width - 1)\r\n            let y = getRandomInt(0, $height - 1)\r\n\r\n            let nearest = getNearestVertex(x, y)\r\n\r\n            if (nearest.value < minDistance && nearest.index != -1) {\r\n                attempts++\r\n                continue\r\n            }\r\n\r\n            let vertex: Vertex = { x, y }\r\n            vertices = [...vertices, vertex]\r\n\r\n            attempts = 0\r\n        }\r\n\r\n        console.log(`Generated ${vertices.length} vertices`)\r\n    }\r\n\r\n    function fillEdges() {\r\n        removeAllEdges()\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let j = i + 1\r\n\r\n            if (j < vertices.length) {\r\n                edges = [...edges, { i, j }]\r\n            }\r\n        }\r\n\r\n        calculateDistances()\r\n    }\r\n\r\n    export function moveDrillToStart() {\r\n        moveDrillTo = [ 0, 0 ]\r\n        isSpinEnabled = false\r\n        isMovingToStart = true\r\n        isDrillingFinished = true\r\n        isDrillingHoleFinished = false\r\n        isBlockDrillControls = true\r\n    }\r\n\r\n    function finishMovingToStart() {\r\n        if (isDrillingHoleFinished) {\r\n            isSpinEnabled = true\r\n            isMovingToStart = false\r\n            isBlockDrillControls = false\r\n\r\n            if (isReturnDrillToStart) {\r\n                stopDrillingTime()\r\n            }\r\n        }\r\n    }\r\n\r\n    export function startSimulation() {\r\n        drillingStartTime = Date.now()\r\n\r\n        if (vertices.length === 0) {\r\n            generateVertices()\r\n        }\r\n\r\n        connectEdges()\r\n        calculateDistances()\r\n\r\n        isSpinEnabled = true\r\n        isDrillingFinished = false\r\n        drillingEdgeIndex = -1\r\n        isBlockDrillControls = true\r\n        drilledVertex = -1\r\n        drilledVertices = []\r\n    }\r\n\r\n    export function connectEdges() {\r\n\r\n        switch (connectAlgorithm) {\r\n            case 'zAlgorithm':\r\n                zAlgorithm()\r\n                break\r\n            case 'greedy':\r\n                greedy()\r\n                break\r\n            case 'spanningTreePrim':\r\n                if (!$isSimulationMode) {\r\n                    spanningTreePrim()\r\n                } else {\r\n                    prim()\r\n                }\r\n                break\r\n            case 'prim':\r\n                prim()\r\n                break\r\n            case 'salesman':\r\n                salesman()\r\n                break\r\n            case 'lastOrder':\r\n                fillEdges()\r\n        }\r\n    }\r\n\r\n    function zAlgorithm() {\r\n        vertices.sort((a:Vertex, b:Vertex) => {\r\n            let isYEqual = Math.abs(a.y - b.y) < zAlgorithmRowSize\r\n            let isYLess = a.y - b.y < -zAlgorithmRowSize\r\n\r\n            if (isYLess) {\r\n                return -1\r\n            } else if (isYEqual) {\r\n                if (a.x < b.x) {\r\n                    return -1\r\n                } else if (a.x > b.x) {\r\n                    return 1\r\n                }\r\n            } else if (!isYLess) {\r\n                return 1\r\n            }\r\n\r\n            return 0\r\n        })\r\n\r\n        fillEdges()\r\n    }\r\n\r\n    function greedy() {\r\n        if (vertices.length <= 1) {\r\n            return\r\n        }\r\n\r\n        let sortedVertices: Vertex[] = []\r\n        let searchVertexes: Vertex[] = vertices\r\n\r\n        let sortVertices = (index) => {\r\n            let vertex: Vertex = searchVertexes[index]\r\n            sortedVertices.push(vertex)\r\n            searchVertexes = vertices.filter(n => !sortedVertices.includes(n))\r\n\r\n            if (searchVertexes.length == 0) {\r\n                return sortedVertices\r\n            }\r\n\r\n            let nearestVertex = getNearestVertex(vertex.x, vertex.y, searchVertexes)\r\n            return sortVertices(nearestVertex.index)\r\n        }\r\n\r\n        let nearestToDrillVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[1], vertices).index\r\n\r\n        vertices = sortVertices(nearestToDrillVertex)\r\n        fillEdges()\r\n    }\r\n\r\n    function spanningTreePrim() {\r\n        if (vertices.length === 0) {\r\n            return\r\n        }\r\n\r\n        let keys: number[] = []\r\n        let p: number[] = []\r\n        let queue = new PriorityQueue<number>()\r\n        let allEdges: Edge[] = []\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            keys.push(Infinity)\r\n            p.push(-1)\r\n        }\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            for (let j = 0; j < i; j++) {\r\n                allEdges.push({ i, j })\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            let minKey = Infinity\r\n\r\n            for (let j = 0; j < i; j++) {\r\n                let key = getDistance(vertices[i], vertices[j])\r\n\r\n                if (key < minKey) {\r\n                    minKey = key\r\n                }\r\n            }\r\n\r\n            queue.enqueue(i, minKey)\r\n        }\r\n\r\n        let nearestVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[0], vertices)\r\n\r\n        if (nearestVertex.index === -1 || nearestVertex.value === -1) {\r\n            nearestVertex = { index: 0, value: 0 }\r\n        }\r\n\r\n        keys[nearestVertex.index]\r\n\r\n        while (!queue.isEmpty()) {\r\n            let v = queue.dequeue().value\r\n\r\n            for (let edge of allEdges) {\r\n                let u = -1\r\n\r\n                if (edge.i === v) {\r\n                    u = edge.j\r\n                }\r\n\r\n                if (edge.j === v) {\r\n                    u = edge.i\r\n                }\r\n\r\n                if (u !== -1) {\r\n                    let distance = getDistance(vertices[v], vertices[u])\r\n\r\n                    if (queue.data.includes(u) && keys[u] > distance) {\r\n                        p[u] = v\r\n                        keys[u] = distance\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        removeAllEdges()\r\n\r\n        for (let i = 0; i < p.length; i++) {\r\n            if (p[i] !== -1) {\r\n                edges = [...edges, {i, j: p[i]}]\r\n            }\r\n        }\r\n    }\r\n\r\n    function prim() {\r\n        if (vertices.length === 0) {\r\n            return\r\n        }\r\n\r\n        spanningTreePrim()\r\n        spanningTreeToPath()\r\n    }\r\n\r\n    function spanningTreeToPath() {\r\n        let getChildren = (index: number, edgesList: Edge[]) => {\r\n            let children: Edge[] = []\r\n\r\n            for (let edge of edgesList) {\r\n                if (edge.i === index) {\r\n                    children.push(edge)\r\n                }\r\n            }\r\n\r\n            for (let edge of edgesList) {\r\n                if (edge.j === index) {\r\n                    children.push({ i: edge.j, j: edge.i })\r\n                }\r\n            }\r\n\r\n            return children\r\n        }\r\n\r\n        let nearestVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[0], vertices)\r\n\r\n        if (nearestVertex.index === -1 || nearestVertex.value === -1) {\r\n            nearestVertex = { index: 0, value: 0 }\r\n        }\r\n\r\n        let edgesList = edges\r\n\r\n        let transformToPath = (startIndex: number) => {\r\n            if (edgesList.length === 0) {\r\n                return [startIndex]\r\n            }\r\n\r\n            let isEdgeEqual = (edge) => {\r\n                return (element) => {\r\n                    return element.i === edge.i && element.j === edge.j\r\n                }\r\n            }\r\n\r\n            let children = getChildren(startIndex, edgesList)\r\n            let path = [startIndex]\r\n\r\n            for (let child of children) {\r\n\r\n                let childIndex = edgesList.findIndex(isEdgeEqual(child))\r\n                let reversedChildIndex = edgesList.findIndex(isEdgeEqual({ i: child.j, j: child.i }))\r\n\r\n                if (childIndex > -1) {\r\n                    edgesList.splice(childIndex, 1)\r\n                } else if (reversedChildIndex > -1) {\r\n                    edgesList.splice(reversedChildIndex, 1)\r\n                }\r\n\r\n                path.push(...transformToPath(child.j))\r\n            }\r\n\r\n            return path\r\n        }\r\n\r\n        let verticesIndexes = transformToPath(nearestVertex.index)\r\n\r\n        let newVertices: Vertex[] = []\r\n\r\n        for (let verticesIndex of verticesIndexes) {\r\n            newVertices.push(vertices[verticesIndex])\r\n        }\r\n\r\n        vertices = newVertices\r\n\r\n        fillEdges()\r\n    }\r\n\r\n    function salesman() {\r\n        let points = []\r\n\r\n        for (let vertex of vertices) {\r\n            points.push(new salesmanAlgorithm.Point(vertex.x, vertex.y))\r\n        }\r\n\r\n        //  let orderedVertices = salesmanAlgorithm.solve(points, 1-5e-7).map(i => vertices[i]) - take time but better\r\n        let orderedVertices  = salesmanAlgorithm.solve(points).map(i => vertices[i])\r\n        let nearestVertex = getNearestVertex(moveDrillTo[0], moveDrillTo[1], orderedVertices)\r\n\r\n        if (nearestVertex.index === -1) {\r\n            vertices = orderedVertices\r\n            fillEdges()\r\n\r\n            return\r\n        }\r\n\r\n        vertices = []\r\n\r\n        for (let i = nearestVertex.index; i < orderedVertices.length; i++) {\r\n            vertices.push(orderedVertices[i])\r\n        }\r\n\r\n        for (let i = 0; i < nearestVertex.index; i++) {\r\n            vertices.push(orderedVertices[i])\r\n        }\r\n\r\n        fillEdges()\r\n    }\r\n\r\n    function calculateDistances() {\r\n        if (!$isSimulationMode && connectAlgorithm.includes('spanningTree')) {\r\n            return\r\n        }\r\n\r\n        let totalDistanceCount = 0\r\n\r\n        for (let edge of edges) {\r\n            totalDistanceCount += getDistance(vertices[edge.i], vertices[edge.j])\r\n        }\r\n\r\n        let totalDistanceWithStartCount = totalDistanceCount\r\n\r\n        if (vertices.length) {\r\n            totalDistanceWithStartCount += getDistance(startPosition, vertices[0])\r\n            totalDistanceWithStartCount += getDistance(startPosition, vertices.at(-1))\r\n        }\r\n\r\n        totalDistance = Math.round(totalDistanceCount).toString()\r\n        totalDistanceWithStart = Math.round(totalDistanceWithStartCount).toString()\r\n    }\r\n\r\n    function resetDistances() {\r\n        totalDistance = '0'\r\n        totalDistanceWithStart = '0'\r\n    }\r\n\r\n    function drawVertexLabel(props) {\r\n        const { context, text, x, y } = props\r\n\r\n        let align = 'center'\r\n        let baseline = 'top'\r\n        let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\r\n\r\n        if (text && context) {\r\n            context.fillStyle = vertexLabelColor\r\n            context.font = `${vertexLabelSize}px ${fontFamily}`\r\n            context.textAlign = align\r\n            context.textBaseline = baseline\r\n            context.fillText(text, x, y)\r\n        }\r\n    }\r\n\r\n    function drawLine(context, vertexI: Vertex, vertexJ: Vertex) {\r\n        if (!context) {\r\n            return\r\n        }\r\n\r\n        context.beginPath()\r\n        context.moveTo(vertexI.x, vertexI.y)\r\n        context.lineTo(vertexJ.x, vertexJ.y)\r\n        context.strokeStyle = COLORS[$edgeColorId]\r\n        context.lineWidth = edgeSize\r\n        context.stroke()\r\n    }\r\n\r\n    function drawEdgeLabel(context, vertexI: Vertex, vertexJ: Vertex) {\r\n        if (!context) {\r\n            return\r\n        }\r\n\r\n        let label = String(Math.round(getDistance(vertexI, vertexJ)))\r\n\r\n        let x = (vertexI.x + vertexJ.x) / 2\r\n        let y = (vertexI.y + vertexJ.y) / 2\r\n\r\n        let thetaVertices = angle(vertexI.x, vertexI.y, vertexJ.x, vertexJ.y)\r\n\r\n        let radius = edgeLabelDistance\r\n        let resultX = radius * Math.cos(thetaVertices + 3 * Math.PI / 2) + x\r\n        let resultY = radius * Math.sin(thetaVertices + 3 * Math.PI / 2) + y\r\n\r\n        let align = 'center'\r\n        let baseline = 'top'\r\n        let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica'\r\n\r\n        context.beginPath()\r\n        context.fillStyle = edgeLabelColor\r\n        context.font = `${edgeLabelSize}px ${fontFamily}`\r\n        context.textAlign = align\r\n        context.textBaseline = baseline\r\n        context.save()\r\n        context.translate(resultX, resultY)\r\n        context.rotate(thetaVertices)\r\n        context.fillText(label, 0, 0)\r\n        context.restore()\r\n    }\r\n\r\n    function angle(cx, cy, ex, ey) {\r\n        let dy = ey - cy\r\n        let dx = ex - cx\r\n        let theta = Math.atan2(dy, dx) // range (-PI, PI]\r\n        return theta >= -(Math.PI / 2) && theta <= (Math.PI / 2) ? theta : theta + Math.PI\r\n    }\r\n\r\n    function getDistance(vertexI: Vertex, vertexJ: Vertex): number {\r\n        if (vertexI.x === vertexJ.x && vertexI.y === vertexJ.y) {\r\n            return 0\r\n        }\r\n\r\n        let x1: number = vertexI.x\r\n        let x2: number = vertexJ.x\r\n        let y1: number = vertexI.y\r\n        let y2: number = vertexJ.y\r\n\r\n        return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\r\n    }\r\n\r\n    function getNearestVertex(x: number, y: number, verticesList = vertices): {index: number, value: number} {\r\n        let nearestIndex: number = -1\r\n        let nearestValue: number = -1\r\n\r\n        for (let i = 0; i < verticesList.length; i++) {\r\n            let vertex: Vertex = verticesList[i]\r\n\r\n            let value: number = getDistance(vertex, { x, y })\r\n\r\n            if (nearestIndex === -1 || nearestValue > value) {\r\n                nearestIndex = i\r\n                nearestValue = value\r\n            }\r\n        }\r\n\r\n        return { value: nearestValue, index: nearestIndex }\r\n    }\r\n\r\n    function moveDrill() {\r\n        if (isDrillingFinished) {\r\n            if (!isInfiniteSimulation) {\r\n                drillingEdgeIndex = -1\r\n                isBlockDrillControls = false\r\n                return\r\n            }\r\n\r\n            if (drillingEdgeIndex !== -1) {\r\n                generateVertices()\r\n                startSimulation()\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n\r\n        if (drillingEdgeIndex >= edges.length || vertices.length === 0) {\r\n            if (isDrillingHoleFinished) {\r\n                if (drilledVertex !== -1) {\r\n                    drilledVertices = [...drilledVertices, drilledVertex]\r\n                }\r\n\r\n                if (!isReturnDrillToStart) {\r\n                    isDrillingFinished = true\r\n                    stopDrillingTime()\r\n                } else {\r\n                    moveDrillToStart()\r\n                }\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        if (!isDrillingHoleFinished) {\r\n            return\r\n        }\r\n\r\n        if (drilledVertex !== -1) {\r\n            drilledVertices = [...drilledVertices, drilledVertex]\r\n        }\r\n\r\n        let moveToVertex\r\n\r\n        if (edges.length === 0) {\r\n            moveToVertex = vertices[0]\r\n            drilledVertex = 0\r\n        } else if (drillingEdgeIndex === -1) {\r\n            moveToVertex = vertices[edges[0].i]\r\n            drilledVertex = edges[0].i\r\n        } else {\r\n            moveToVertex = vertices[edges[drillingEdgeIndex].j]\r\n            drilledVertex = edges[drillingEdgeIndex].j\r\n        }\r\n\r\n        moveDrillTo = [ moveToVertex.x, moveToVertex.y ]\r\n        isDrillingHoleFinished = false\r\n        drillingEdgeIndex++\r\n    }\r\n\r\n    function stopDrillingTime() {\r\n        lastDrillingTime = drillingTime\r\n        drillingStartTime = 0\r\n        drillingTime = 0\r\n    }\r\n</script>\r\n\r\n<svelte:window\r\n        on:mouseup={handleMouseUp}\r\n        on:touchend={handleMouseUp}\r\n        on:mousemove={handleMouseMove}\r\n        on:touchmove={handleTouchMove}\r\n\r\n/>\r\n\r\n<slot>\r\n    <Drill\r\n          bind:isFinished={isDrillingHoleFinished}\r\n          bind:moveTo={moveDrillTo}\r\n          isShow={$isSimulationMode}\r\n          size={vertexSize}\r\n          drillColor={drillColor}\r\n          normalColor={drillNormalColor}\r\n          isSpinEnabled={isSpinEnabled}\r\n          moveSpeed={drillMoveSpeed}\r\n          spinSpeed={drillSpinSpeed}\r\n          rotationsCount={drillRotationsCount}\r\n          isShowLabel={isShowDrillLabel}\r\n          labelSize={drillLabelSize}\r\n          labelColor={drillLabelColor}\r\n    />\r\n</slot>\r\n","<script>\n\timport Text from './Text.svelte'\n\timport { width, renderable } from './game'\n\n\timport { showFPS } from './stores/ui'\n\n\tlet text = ''\n\tlet frames = 0\n\tlet prevTime = performance.now()\n\n\trenderable((state, dt) => {\n\t\tlet time = performance.now()\n\t\tframes++\n\n\t\tif ( time >= prevTime + 1000 ) {\n\t\t\tconst fps = ((frames * 1000) / (time - prevTime))\n\t\t\ttext = `${fps.toFixed(1)} FPS`\n\t\t\tprevTime = time\n\t\t\tframes = 0\n\t\t}\n\n\t\tif (!$showFPS) {\n\t\t\ttext = ''\n\t\t}\n\t})\n</script>\n\n<Text\n\t{text}\n\tfontSize=12\n\tfontFamily='Courier New'\n\talign='left'\n\tbaseline='top'\n\tx={20}\n\ty={20} />\n\n<!-- The following allows this component to nest children -->\n<slot></slot>","<script lang=\"ts\">\n  export let name: string;\n  export let min: number = 0;\n  export let max: number = 100;\n  export let value: number = min;\n  export let step: number = 1;\n</script>\n\n<label class=\"wrapper\">\n  <div>{name}: {value}</div>\n  <input type=\"range\" bind:value {min} {max} {step} />\n</label>\n\n<style>\n  .wrapper {\n    /* display: flex; */\n    display: block;\n    /* font-weight: bold; */\n  }\n  .wrapper:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  input {\n    display: block;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    /* margin-left: 10px; */\n    /* transform: translateY(-4px); */\n  }\n  div {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n    overflow: hidden;\n    /* font-family: monospace; */\n    font-size: 65%;\n  }\n  input {\n    margin-top: 2px;\n  }\n</style>\n","<script>\n  export let title;\n  export let checked = false;\n</script>\n\n<label>\n  <input type=\"checkbox\" bind:checked />\n  <span>{title}</span>\n</label>\n\n<style>\n  label {\n    display: block;\n    cursor: pointer;\n    margin-bottom: 5px;\n  }\n  input {\n    user-select: none;\n    position: relative;\n    appearance: none;\n    -webkit-appearance: none;\n    margin: 0px 5px 0px 0px;\n    outline: none;\n    border: none;\n  }\n\n  input::before {\n    content: \"\";\n    box-sizing: border-box;\n    transform: translate(0px, 2px);\n    display: block;\n    width: 15px;\n    height: 15px;\n    border-radius: 2px;\n    background-color: rgba(255, 255, 255, 0.3);\n    transition-duration: 0.2s;\n  }\n\n  input:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    left: 1px;\n    top: 3px;\n    width: 10px;\n    height: 5px;\n    transform: translateY(-2px) rotateZ(-45deg);\n    border-bottom: 4px solid whitesmoke;\n    border-left: 4px solid whitesmoke;\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n  input:checked::after {\n    transform: rotateZ(-45deg);\n    opacity: 1;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte'\n  import { COLORS } from './stores/ui'\n\n  export let selectedId: number = 0\n\n  let checkmarkColor = 'white'\n\n  onMount(function(){\n    checkmarkColor = invertColor(COLORS[selectedId])\n  })\n\n  function invertColor(hex) {\n    if (hex === 'white') {\n      hex = '#FFFFFF'\n    } else if (hex === 'black') {\n      hex = '#000000'\n    }\n\n    if (hex.indexOf('#') === 0) {\n      hex = hex.slice(1)\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n    }\n    if (hex.length !== 6) {\n      throw new Error('Invalid HEX color.')\n    }\n\n    let r = parseInt(hex.slice(0, 2), 16),\n            g = parseInt(hex.slice(2, 4), 16),\n            b = parseInt(hex.slice(4, 6), 16)\n\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n            ? 'black'\n            : 'white'\n  }\n</script>\n\n<div class=\"wrapper\">\n  {#each Array(...COLORS.entries()) as idAndColor}\n    <button\n      class=\"{selectedId === idAndColor[0] ? 'selected' : ''} {checkmarkColor}\"\n      name=\"color\"\n      type=\"radio\"\n      style={`background-color: ${idAndColor[1]};`}\n      on:click={() => {\n        selectedId = idAndColor[0]\n        checkmarkColor = invertColor(COLORS[selectedId])\n      }}\n    />\n  {/each}\n</div>\n\n<style>\n  .selected.white:before {\n    content: \"\";\n    display: block;\n    width: 6px;\n    height: 14px;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    transform: translateY(-2px) rotate(45deg);\n  }\n  .selected.black:before {\n    content: \"\";\n    display: block;\n    width: 6px;\n    height: 14px;\n    border-bottom: 3px solid black;\n    border-right: 3px solid black;\n    transform: translateY(-2px) rotate(45deg);\n  }\n  .wrapper {\n    display: flex;\n    /* flex-wrap: wrap; */\n    overflow: hidden;\n    border-radius: 5px;\n    /* border: 2px dotted rgba(0, 0, 0, 0.5); */\n  }\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 29px;\n    padding: 0;\n    margin: 0;\n    border-radius: 0;\n  }\n  /* label {\n    font-size: 75%;\n    text-align: center;\n    width: 30px;\n    line-height: 30px;\n    overflow: hidden;\n    cursor: pointer;\n    width: 100%;\n  }\n  label:hover {\n    box-shadow: inset 0 0 0 100px rgba(0, 0, 0, 0.1);\n  }\n  input {\n    appearance: none;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n  input:checked::before {\n    content: \"\";\n    display: block;\n    width: 5px;\n    height: 10px;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    transform: rotate(45deg) translateY(-1px);\n    margin-right: 7px;\n  } */\n</style>\n","<script lang=\"ts\">\r\n    import {height, width} from \"./game\"\r\n    import {afterUpdate} from \"svelte\"\r\n\r\n    let window\r\n\r\n    export let title = ''\r\n    export let isOpened = true\r\n    export let zIndex = 0\r\n    export let onCloseHandler = null\r\n    export let onClickHandler = null\r\n    export let x = 100\r\n    export let y = 100\r\n\r\n    let isMouseDown = false\r\n    let isFirstRender = true\r\n    let mouse: { x: number, y: number }\r\n    let outOfBoundLimitX = 100\r\n    let outOfBoundLimitY = 100\r\n\r\n    afterUpdate(() => {\r\n        if (isFirstRender && window) {\r\n            x = Math.floor($width / 2) - Math.floor(window.clientWidth / 2)\r\n            y = Math.floor($height / 2) - Math.floor(window.clientHeight / 2)\r\n\r\n            isFirstRender = false\r\n        }\r\n\r\n        if (window) {\r\n            outOfBoundLimitX = Math.floor(window.clientWidth / 2)\r\n            outOfBoundLimitY = Math.floor(window.clientHeight / 2)\r\n\r\n            checkPosition()\r\n        }\r\n    })\r\n\r\n    function onClose() {\r\n        isOpened = false\r\n\r\n        if (onCloseHandler) {\r\n            onCloseHandler()\r\n        }\r\n    }\r\n\r\n    function checkPosition() {\r\n        if (x > $width - outOfBoundLimitX) {\r\n            x = $width - outOfBoundLimitX\r\n        } else if (x < -outOfBoundLimitX) {\r\n            x = -outOfBoundLimitX\r\n        }\r\n\r\n        if (y > $height - outOfBoundLimitY) {\r\n            y = $height - outOfBoundLimitY\r\n        } else if (y < -outOfBoundLimitY) {\r\n            y = -outOfBoundLimitY\r\n        }\r\n    }\r\n\r\n    function handleTouchStart(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        handleMouseDown(touch)\r\n    }\r\n\r\n    let previousTouch = null\r\n    function handleTouchMove(ev) {\r\n        let touch = ev.touches[0]\r\n\r\n        if (previousTouch) {\r\n            touch.movementX = touch.pageX - previousTouch.pageX\r\n            touch.movementY = touch.pageY - previousTouch.pageY\r\n            handleMouseMove(touch)\r\n        }\r\n\r\n        previousTouch = touch\r\n    }\r\n\r\n    function handleMouseDown(ev) {\r\n        const classes = ev.target.className\r\n        const moveClasses = ['controls', 'controls-block', 'controls-block__title']\r\n        const dy = ev.clientY - y\r\n\r\n        if (moveClasses.some(classes.includes.bind(classes)) && dy < 50) {\r\n            isMouseDown = true\r\n            mouse = { x, y }\r\n        }\r\n\r\n        if (onClickHandler) {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    function handleMouseMove(ev) {\r\n        if (isMouseDown && mouse) {\r\n            mouse.x += ev.movementX\r\n            mouse.y += ev.movementY\r\n            x = mouse.x\r\n            y = mouse.y\r\n\r\n            checkPosition()\r\n        }\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        isMouseDown = false\r\n        previousTouch = null\r\n    }\r\n</script>\r\n\r\n<svelte:window\r\n        on:mouseup={handleMouseUp}\r\n        on:touchend={handleMouseUp}\r\n        on:mousemove={handleMouseMove}\r\n        on:touchmove={handleTouchMove}\r\n/>\r\n\r\n{#if isOpened}\r\n    <div class=\"controls\"\r\n         style=\"z-index: {zIndex + 1}; left: {x}px; top: {y}px;\"\r\n         on:mousedown={handleMouseDown}\r\n         on:touchstart={handleTouchStart}\r\n         bind:this={window}\r\n    >\r\n        <div class=\"controls-block\">\r\n            <h2 class=\"controls-block__title\">\r\n                {title}\r\n            </h2>\r\n            <button on:click=\"{onClose}\" class=\"close\"></button>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .controls {\r\n        overflow-y: scroll;\r\n        box-shadow: 0 0 10px 0 black;\r\n        position: fixed;\r\n        max-height: calc(100% - 40px);\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        backdrop-filter: blur(8px);\r\n        -webkit-backdrop-filter: blur(8px);\r\n        -ms-overflow-style: none; /* IE and Edge */\r\n        scrollbar-width: none; /* Firefox */\r\n        padding: 10px;\r\n        width: 300px;\r\n        border-radius: 10px;\r\n    }\r\n    .controls::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    .controls-block > * {\r\n        margin-bottom: 0;\r\n    }\r\n    .controls-block:not(:last-child) {\r\n        margin-bottom: 20px;\r\n    }\r\n    .controls-block__title {\r\n        margin: 0;\r\n        margin-bottom: 5px;\r\n        text-transform: uppercase;\r\n        font-size: 100%;\r\n    }\r\n    @supports (not (backdrop-filter: blur())) and\r\n    (not (-webkit-backdrop-filter: blur())) {\r\n        .controls {\r\n            background-color: rgba(150, 150, 150, 0.95);\r\n        }\r\n    }\r\n    .close {\r\n        display: block;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 10px;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: 15px;\r\n        height: 15px;\r\n        border: 0;\r\n        color: black;\r\n        border-radius: 1.5rem;\r\n        background: transparent;\r\n        box-shadow: 0 0 0 1px black;\r\n        transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\r\n        background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n        -webkit-appearance: none;\r\n    }\r\n\r\n    .close:before,\r\n    .close:after {\r\n        content: '';\r\n        display: block;\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: 50%;\r\n        width: 9px;\r\n        height: 1px;\r\n        background: black;\r\n        transform-origin: center;\r\n        transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\r\n        background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n    }\r\n\r\n    .close:before {\r\n        -webkit-transform: translate(0, -50%) rotate(45deg);\r\n        -moz-transform: translate(0, -50%) rotate(45deg);\r\n        transform: translate(0, -50%) rotate(45deg);\r\n        left: 3px;\r\n        top: 7px;\r\n    }\r\n\r\n    .close:after {\r\n        -webkit-transform: translate(0, -50%) rotate(-45deg);\r\n        -moz-transform: translate(0, -50%) rotate(-45deg);\r\n        transform: translate(0, -50%) rotate(-45deg);\r\n        left: 3px;\r\n        top: 7px;\r\n    }\r\n\r\n    .close:hover {\r\n        background: black;\r\n    }\r\n\r\n    .close:hover:before,\r\n    .close:hover:after {\r\n        height: 2px;\r\n        background: white;\r\n    }\r\n\r\n    .close:focus {\r\n        border-color: #3399ff;\r\n        box-shadow: 0 0 0 2px #3399ff;\r\n    }\r\n\r\n    .close:active {\r\n        transform: scale(0.9);\r\n    }\r\n\r\n    .close:hover,\r\n    .close:focus,\r\n    .close:active {\r\n        outline: none;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { lang, getTranslation } from './stores/translation'\r\n\r\n    export let options: {option: any, label: string, id: string}[]\r\n    export let group: any = null\r\n    export let groupName: string = \"\"\r\n</script>\r\n\r\n{#each options as { option, label, id }}\r\n    <div class=\"input_row\">\r\n        <div class=\"option\">\r\n            <input id=\"{id}\" type=radio bind:group={group} name=\"{groupName}\" value={option}>\r\n            <label for=\"{id}\">{getTranslation($lang, label)}</label>\r\n        </div>\r\n    </div>\r\n{/each}\r\n\r\n<style>\r\n    input[type=\"radio\"] {\r\n        position: absolute;\r\n        clip: rect(0, 0, 0, 0);\r\n    }\r\n    input[type=\"radio\"] + label::before {\r\n        content: '\\a0';\r\n        display: inline-block;\r\n        margin: .2em .5em;\r\n        width: .8em;\r\n        height: .8em;\r\n        line-height: .75em;\r\n        transition: all .5s;\r\n        border: 1px solid silver;\r\n    }\r\n    input[type=\"radio\"] + label::before {\r\n        border-radius: 50%;\r\n    }\r\n    input[type=\"radio\"]:checked + label::before {\r\n        content: '\\a0';\r\n        background: rgba(255, 255, 255, 0.3);\r\n        box-shadow: inset 0 0 0 2px silver, 0 0 0 2px rgba(255, 255, 255, 0.3);\r\n    }\r\n    .input_row {\r\n        position: relative;\r\n        left: -7px;\r\n        display: flex;\r\n    }\r\n    .input_row:not(:last-child){\r\n        margin-bottom: 5px;\r\n    }\r\n    .input_row .option {\r\n        width: 100%;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { width, height } from './game'\r\n\timport { showVertexLabel, showEdgeLabel, removeEdgesOnMoving,\r\n\t\t\t isSimulationMode, vertexColorId, edgeColorId } from './stores/graph'\r\n\timport { languages, getTranslation, lang } from './stores/translation'\r\n\timport { COLORS, showMenu, showFPS, showHint } from './stores/ui'\r\n\r\n\timport { onMount } from 'svelte'\r\n\timport Canvas from './Canvas.svelte'\r\n\timport Background from './Background.svelte'\r\n\timport DotGrid from './DotGrid.svelte'\r\n\timport Graph from './Graph.svelte'\r\n\timport Text from './Text.svelte'\r\n\timport FPS from './FPS.svelte'\r\n\timport InputRange from \"./InputRange.svelte\"\r\n\timport Checkbox from \"./Checkbox.svelte\"\r\n\timport ColorSelector from \"./ColorSelector.svelte\"\r\n\timport Window from \"./Window.svelte\"\r\n\timport RadioButtons from \"./RadioButtons.svelte\"\r\n\r\n\r\n\tlet connectAlgorithmsStrings = ['zAlgorithm', 'greedy', 'spanningTreePrim', 'prim', 'salesman', 'lastOrder']\r\n\r\n\tlet connectAlgorithms = connectAlgorithmsStrings.map((algorithm) => {\r\n\t\treturn {option: algorithm, label: algorithm, id: algorithm + '_radio'}\r\n\t})\r\n\r\n\tlet isFullscreen = false\r\n\tlet vertexSize = 10\r\n\tlet edgeSize = 3\r\n\tlet vertexLabelColorId = 9\r\n\tlet vertexLabelSize = 8\r\n\tlet verticesGenerationCount = 30\r\n\tlet edgeLabelDistance = 30\r\n\tlet edgeLabelSize = 8\r\n\tlet edgeLabelColorId = 9\r\n\tlet totalDistance = '0'\r\n\tlet totalDistanceWithStart = '0'\r\n\tlet connectAlgorithm = connectAlgorithmsStrings[0]\r\n\tlet drillMoveSpeed = 0.1\r\n\tlet drillSpinSpeed = 0.5\r\n\tlet drillRotationsCount = 10\r\n\tlet drillColorId = 1\r\n\tlet drillNormalColorId = 0\r\n\tlet drillLabelSize = 8\r\n\tlet drillLabelColorId = 9\r\n\tlet isShowDrillLabel = true\r\n\tlet isInfiniteSimulation = false\r\n\tlet drillingTime = 0\r\n\tlet lastDrillingTime = 0\r\n\tlet isReturnDrillToStart = false\r\n\tlet isBlockDrillControls = false\r\n\tlet drilledVertexColorId = 9\r\n\tlet backgroundColorId = 10\r\n\tlet zAlgorithmRowSize = 30\r\n\r\n\tlet graphComponent\r\n\tlet graphClickHandler\r\n\tlet graphMouseDownHandler\r\n\tlet graphTouchStartHandler\r\n\tlet graphRemoveVerticesHandler\r\n\tlet graphRemoveEdgesHandler\r\n\tlet graphGenerateVerticesHandler\r\n\tlet graphConnectEdgesHandler\r\n\tlet moveDrillToStartHandler\r\n\tlet startSimulationHandler\r\n\r\n\tonMount(function(){\r\n\t\tgraphClickHandler = function(ev) {\r\n\t\t\tgraphComponent.handleClick(ev)\r\n\t\t}\r\n\t\tgraphMouseDownHandler = function(ev) {\r\n\t\t\tgraphComponent.handleMouseDown(ev)\r\n\t\t}\r\n\t\tgraphTouchStartHandler = function (ev) {\r\n\t\t\tgraphComponent.handleTouchStart(ev)\r\n\t\t}\r\n\t\tgraphRemoveVerticesHandler = function() {\r\n\t\t\tgraphComponent.removeAllVertices()\r\n\t\t}\r\n\t\tgraphRemoveEdgesHandler = function() {\r\n\t\t\tgraphComponent.removeAllEdges()\r\n\t\t}\r\n\t\tgraphGenerateVerticesHandler = function() {\r\n\t\t\tgraphComponent.generateVertices()\r\n\t\t}\r\n\t\tgraphConnectEdgesHandler = function() {\r\n\t\t\tgraphComponent.connectEdges()\r\n\t\t}\r\n\t\tmoveDrillToStartHandler = function () {\r\n\t\t\tif (!$isSimulationMode) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tgraphComponent.moveDrillToStart()\r\n\t\t}\r\n\t\tstartSimulationHandler = function () {\r\n\t\t\tif (!$isSimulationMode) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tgraphComponent.startSimulation()\r\n\t\t}\r\n\t})\r\n\r\n\tenum Windows {\r\n\t\tVertexSettings,\r\n\t\tEdgeSettings,\r\n\t\tOtherSettings,\r\n\t\tAbout,\r\n\t\tTotalDistance,\r\n\t\tConnectVertices,\r\n\t\tSimulationControls,\r\n\t\tDrillingTime,\r\n\t\tSize,\r\n\t}\r\n\r\n\tlet windowsOrder = [...Array(Windows.Size).keys()]\r\n\tlet windowsStatus = new Array<boolean>(Windows.Size)\r\n\twindowsStatus.fill(false)\r\n\r\n\tfunction makeWindowActive(window: Windows) {\r\n\t\twindowsStatus[window] = true\r\n\r\n\t\tfor (let i = 0; i < windowsOrder.length; i++) {\r\n\t\t\tif (windowsOrder[i] > windowsOrder[window]) {\r\n\t\t\t\twindowsOrder[i] -= 1\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindowsOrder[window] = Windows.Size - 1\r\n\t}\r\n\r\n\tfunction makeWindowInactive(window: Windows) {\r\n\t\twindowsStatus[window] = false\r\n\r\n\t\tfor (let i = 0; i < windowsOrder.length; i++) {\r\n\t\t\tif (windowsOrder[i] < windowsOrder[window]) {\r\n\t\t\t\twindowsOrder[i] += 1\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindowsOrder[window] = 0\r\n\t}\r\n\r\n\tfunction switchFullscreen() {\r\n\t\tif (document.fullscreenElement) {\r\n\t\t\tdocument.exitFullscreen()\r\n\t\t\t\t.then(function() {\r\n\t\t\t\t\t// element has exited fullscreen mode\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t// element could not exit fullscreen mode\r\n\t\t\t\t\t// error message\r\n\t\t\t\t\tconsole.log(error.message);\r\n\t\t\t\t})\r\n\r\n\t\t\tisFullscreen = false\r\n\t\t} else {\r\n\t\t\tdocument.documentElement.requestFullscreen()\r\n\t\t\t\t.then(function() {\r\n\t\t\t\t\t// element has entered fullscreen mode successfully\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t// element could not enter fullscreen mode\r\n\t\t\t\t\t// error message\r\n\t\t\t\t\tconsole.log(error.message);\r\n\t\t\t\t})\r\n\r\n\t\t\tisFullscreen = true\r\n\t\t}\r\n\t}\r\n\r\n\tfunction msToStringTime(time) {\r\n\t\tlet seconds = Math.floor(time / 1000)\r\n\t\tlet minutes = Math.floor(seconds / 60)\r\n\t\tseconds = seconds % 60\r\n\t\tlet milliseconds = time % 1000\r\n\r\n\t\treturn minutes + getTranslation($lang, 'minutesShort') + \" \" +\r\n\t\t\t\tseconds + getTranslation($lang, 'secondsShort') + \" \" +\r\n\t\t\t\tmilliseconds + getTranslation($lang, 'milliSecondsShort')\r\n\t}\r\n\r\n</script>\r\n\r\n<Canvas\r\n\t\tonClick={graphClickHandler}\r\n\t\tonMouseDown={graphMouseDownHandler}\r\n\t\tonTouchStart={graphTouchStartHandler}\r\n>\r\n\t<Background color={COLORS[backgroundColorId]}>\r\n\t\t<DotGrid divisions={30} color='hsla(0, 0%, 100%, 0.5)' />\r\n\t</Background>\r\n\t<Graph\r\n\t\t\tbind:this={graphComponent}\r\n\t\t\tbind:totalDistance={totalDistance}\r\n\t\t\tbind:totalDistanceWithStart={totalDistanceWithStart}\r\n\t\t\tbind:drillingTime={drillingTime}\r\n\t\t\tbind:lastDrillingTime={lastDrillingTime}\r\n\t\t\tbind:isBlockDrillControls={isBlockDrillControls}\r\n\t\t\tvertexSize={vertexSize}\r\n\t\t\tedgeSize={edgeSize}\r\n\t\t\tvertexLabelSize={vertexLabelSize}\r\n\t\t\tvertexLabelColor={COLORS[vertexLabelColorId]}\r\n\t\t\tverticesGenerationCount={verticesGenerationCount}\r\n\t\t\tedgeLabelColor={COLORS[edgeLabelColorId]}\r\n\t\t\tedgeLabelSize={edgeLabelSize}\r\n\t\t\tedgeLabelDistance={edgeLabelDistance}\r\n\t\t\tconnectAlgorithm={connectAlgorithm}\r\n\t\t\tisShowDrillLabel={isShowDrillLabel}\r\n\t\t\tdrillLabelSize={drillLabelSize}\r\n\t\t\tdrillLabelColor={COLORS[drillLabelColorId]}\r\n\t\t\tdrillColor={COLORS[drillColorId]}\r\n\t\t\tdrillNormalColor={COLORS[drillNormalColorId]}\r\n\t\t\tdrillMoveSpeed={drillMoveSpeed}\r\n\t\t\tdrillSpinSpeed={drillSpinSpeed}\r\n\t\t\tdrillRotationsCount={drillRotationsCount}\r\n\t\t\tisInfiniteSimulation={isInfiniteSimulation}\r\n\t\t\tisReturnDrillToStart={isReturnDrillToStart}\r\n\t\t\tdrilledVertexColor={COLORS[drilledVertexColorId]}\r\n\t\t\tzAlgorithmRowSize={zAlgorithmRowSize}\r\n\t/>\r\n\t<Text\r\n\t\t\tshow={$showHint}\r\n\t\t\ttext={getTranslation($lang, 'addHint')}\r\n\t\t\tfontSize={12}\r\n\t\t\talign='right'\r\n\t\t\tbaseline='bottom'\r\n\t\t\tx={$width - 20}\r\n\t\t\ty={$height - 20}\r\n\t/>\r\n\t<FPS />\r\n</Canvas>\r\n<div class=\"controls\" class:controls_opened={$showMenu}>\r\n\t{#if $showMenu}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.About)}}>\r\n\t\t\t\t\t{getTranslation($lang, \"about\")}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button on:click={() => ($showMenu = false)}>\r\n\t\t\t\t\t{getTranslation($lang, \"hideMenu\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"graphControls\")}\r\n\t\t\t</h2>\r\n\t\t\t<Checkbox\r\n\t\t\t\t\ttitle={getTranslation($lang, \"removeEdgesOnMoving\")}\r\n\t\t\t\t\tbind:checked={$removeEdgesOnMoving}\r\n\t\t\t/>\r\n\t\t\t{#if !isBlockDrillControls}\r\n\t\t\t\t<Checkbox\r\n\t\t\t\t\t\ttitle={getTranslation($lang, \"simulationMode\")}\r\n\t\t\t\t\t\tbind:checked={$isSimulationMode}\r\n\t\t\t\t/>\r\n\t\t\t{/if}\r\n\t\t\t{#if !$isSimulationMode}\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={graphRemoveVerticesHandler}>\r\n\t\t\t\t\t\t{getTranslation($lang, \"removeAllVertices\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={graphRemoveEdgesHandler}>\r\n\t\t\t\t\t\t{getTranslation($lang, \"removeAllEdges\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={graphGenerateVerticesHandler}>\r\n\t\t\t\t\t\t{getTranslation($lang, \"generateVertices\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation($lang, \"verticesGenerationCount\")}\r\n\t\t\t\t\tmin={2}\r\n\t\t\t\t\tmax={100}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tbind:value={verticesGenerationCount}\r\n\t\t\t/>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.ConnectVertices)}}>\r\n\t\t\t\t\t{getTranslation($lang, \"connectVertices\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.TotalDistance)}}>\r\n\t\t\t\t\t{getTranslation($lang, \"showTotalDistance\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{#if $isSimulationMode}\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={() => {makeWindowActive(Windows.SimulationControls)}}>\r\n\t\t\t\t\t\t{getTranslation($lang, \"simulationControls\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"settings\")}\r\n\t\t\t</h2>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.VertexSettings)}}>\r\n\t\t\t\t\t{getTranslation($lang, \"openVertexSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.EdgeSettings)}}>\r\n\t\t\t\t\t{getTranslation($lang, \"openEdgeSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.OtherSettings)}}>\r\n\t\t\t\t\t{getTranslation($lang, \"openOtherSettings\")}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<button on:click={() => ($showMenu = true)}>\r\n\t\t\t{getTranslation($lang, \"showMenu\")}\r\n\t\t</button>\r\n\t{/if}\r\n</div>\r\n<Window\r\n\t\ttitle=\"{getTranslation($lang, 'vertexSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.VertexSettings]}\r\n\t\tzIndex={windowsOrder[Windows.VertexSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.VertexSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.VertexSettings) }}\r\n>\r\n\t<Checkbox\r\n\t\t\ttitle={getTranslation($lang, \"showVertexLabel\")}\r\n\t\t\tbind:checked={$showVertexLabel}\r\n\t/>\r\n\t<InputRange\r\n\t\t\tname={getTranslation($lang, \"vertexSize\")}\r\n\t\t\tmin={5}\r\n\t\t\tmax={20}\r\n\t\t\tstep={0.3}\r\n\t\t\tbind:value={vertexSize}\r\n\t/>\r\n\t{#if $showVertexLabel}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation($lang, \"vertexLabelSize\")}\r\n\t\t\t\tmin={8}\r\n\t\t\t\tmax={16}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={vertexLabelSize}\r\n\t\t/>\r\n\t{/if}\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation($lang, \"vertexColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tbind:selectedId={$vertexColorId}\r\n\t\t/>\r\n\t</div>\r\n\t{#if $showVertexLabel}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"vertexLabelColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tbind:selectedId={vertexLabelColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation($lang, 'edgeSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.EdgeSettings]}\r\n\t\tzIndex={windowsOrder[Windows.EdgeSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.EdgeSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.EdgeSettings) }}\r\n>\r\n\t<Checkbox\r\n\t\t\ttitle={getTranslation($lang, \"showEdgeLabel\")}\r\n\t\t\tbind:checked={$showEdgeLabel}\r\n\t/>\r\n\t<InputRange\r\n\t\t\tname={getTranslation($lang, \"edgeSize\")}\r\n\t\t\tmin={1}\r\n\t\t\tmax={10}\r\n\t\t\tstep={0.3}\r\n\t\t\tbind:value={edgeSize}\r\n\t/>\r\n\t{#if $showEdgeLabel}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation($lang, \"edgeLabelSize\")}\r\n\t\t\t\tmin={8}\r\n\t\t\t\tmax={16}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={edgeLabelSize}\r\n\t\t/>\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation($lang, \"edgeLabelDistance\")}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={40}\r\n\t\t\t\tstep={0.3}\r\n\t\t\t\tbind:value={edgeLabelDistance}\r\n\t\t/>\r\n\t{/if}\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation($lang, \"edgeColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tbind:selectedId={$edgeColorId}\r\n\t\t/>\r\n\t</div>\r\n\t{#if $showEdgeLabel}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"edgeLabelColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tbind:selectedId={edgeLabelColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation($lang, 'otherSettings')}\"\r\n\t\tisOpened={windowsStatus[Windows.OtherSettings]}\r\n\t\tzIndex={windowsOrder[Windows.OtherSettings]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.OtherSettings) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.OtherSettings) }}\r\n>\r\n\t<div class=\"controls-block\">\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation($lang, \"showFPS\")}\r\n\t\t\t\tbind:checked={$showFPS}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation($lang, \"showHint\")}\r\n\t\t\t\tbind:checked={$showHint}\r\n\t\t/>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation($lang, 'language')}\r\n\t\t</h2>\r\n\t\t<RadioButtons\r\n\t\t\t\toptions={languages}\r\n\t\t\t\tbind:group={$lang}\r\n\t\t\t\tgroupName=\"lang\"\r\n\t\t/>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t<button on:click={switchFullscreen}>\r\n\t\t\t\t{#if isFullscreen}\r\n\t\t\t\t\t{getTranslation($lang, 'exitFullsceen')}\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t{getTranslation($lang, 'enterFullsceen')}\r\n\t\t\t\t{/if}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"controls-block\">\r\n\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t{getTranslation($lang, \"backgroundColor\")}\r\n\t\t</h2>\r\n\t\t<ColorSelector\r\n\t\t\t\tbind:selectedId={backgroundColorId}\r\n\t\t/>\r\n\t</div>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation($lang, 'about')}\"\r\n\t\tisOpened={windowsStatus[Windows.About]}\r\n\t\tzIndex={windowsOrder[Windows.About]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.About) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.About) }}\r\n>\r\n\t<p style=\"text-align: center\">\r\n\t\t{getTranslation($lang, 'pcbDrillingOptimazer')}<br>\r\n\t\t<a\r\n\t\t\t\thref=\"https://github.com/rodimov/DrillingOptimizer\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t>\r\n\t\t\t{getTranslation($lang, 'githubPage')}\r\n\t\t</a>\r\n\t</p>\r\n\t<p style=\"text-align: center\">{getTranslation($lang, 'developedUsingSvelte')}</p>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation($lang, 'distance')}\"\r\n\t\tisOpened={windowsStatus[Windows.TotalDistance]}\r\n\t\tzIndex={windowsOrder[Windows.TotalDistance]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.TotalDistance) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.TotalDistance) }}\r\n>\r\n\t<div>\r\n\t\t{getTranslation($lang, 'totalDistance')}: {totalDistance}\r\n\t</div>\r\n\t<div>\r\n\t\t{getTranslation($lang, 'totalDistanceWithStart')}: {totalDistanceWithStart}\r\n\t</div>\r\n</Window>\r\n<Window\r\n\t\ttitle=\"{getTranslation($lang, 'connectVertices')}\"\r\n\t\tisOpened={windowsStatus[Windows.ConnectVertices]}\r\n\t\tzIndex={windowsOrder[Windows.ConnectVertices]}\r\n\t\tonClickHandler={() => { makeWindowActive(Windows.ConnectVertices) }}\r\n\t\tonCloseHandler={() => { makeWindowInactive(Windows.ConnectVertices) }}\r\n>\r\n\t<h2 class=\"controls-block__title\">\r\n\t\t{getTranslation($lang, 'algorithms')}\r\n\t</h2>\r\n\t<RadioButtons\r\n\t\t\toptions={connectAlgorithms}\r\n\t\t\tbind:group={connectAlgorithm}\r\n\t\t\tgroupName=\"connectAlgorithm\"\r\n\t/>\r\n\t{#if connectAlgorithm === 'zAlgorithm'}\r\n\t\t<InputRange\r\n\t\t\t\tname={getTranslation($lang, \"zAlgorithmRowSize\")}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={150}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tbind:value={zAlgorithmRowSize}\r\n\t\t/>\r\n\t{/if}\r\n\t{#if !$isSimulationMode}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={graphConnectEdgesHandler}>\r\n\t\t\t\t\t{getTranslation($lang, 'connect')}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t{/if}\r\n</Window>\r\n{#if $isSimulationMode}\r\n\t<Window\r\n\t\t\ttitle=\"{getTranslation($lang, 'simulationControls')}\"\r\n\t\t\tisOpened={windowsStatus[Windows.SimulationControls]}\r\n\t\t\tzIndex={windowsOrder[Windows.SimulationControls]}\r\n\t\t\tonClickHandler={() => { makeWindowActive(Windows.SimulationControls) }}\r\n\t\t\tonCloseHandler={() => { makeWindowInactive(Windows.SimulationControls) }}\r\n\t>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation($lang, \"showDrillLabel\")}\r\n\t\t\t\tbind:checked={isShowDrillLabel}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation($lang, \"infiniteSimulation\")}\r\n\t\t\t\tbind:checked={isInfiniteSimulation}\r\n\t\t/>\r\n\t\t<Checkbox\r\n\t\t\t\ttitle={getTranslation($lang, \"returnDrillToStart\")}\r\n\t\t\t\tbind:checked={isReturnDrillToStart}\r\n\t\t/>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t{#if !isBlockDrillControls}\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={startSimulationHandler}>\r\n\t\t\t\t\t\t{getTranslation($lang, 'startSimulation')}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons-row\">\r\n\t\t\t\t\t<button on:click={moveDrillToStartHandler}>\r\n\t\t\t\t\t\t{getTranslation($lang, 'moveDrillToStart')}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t\t<div class=\"buttons-row\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<button on:click={() => {makeWindowActive(Windows.DrillingTime)}}>\r\n\t\t\t\t\t{getTranslation($lang, 'showDrillingTime')}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, 'simulationSettings')}\r\n\t\t\t</h2>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation($lang, \"drillMoveSpeed\")}\r\n\t\t\t\t\tmin={0.05}\r\n\t\t\t\t\tmax={1}\r\n\t\t\t\t\tstep={0.05}\r\n\t\t\t\t\tbind:value={drillMoveSpeed}\r\n\t\t\t/>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation($lang, \"drillSpinSpeed\")}\r\n\t\t\t\t\tmin={0.05}\r\n\t\t\t\t\tmax={1}\r\n\t\t\t\t\tstep={0.05}\r\n\t\t\t\t\tbind:value={drillSpinSpeed}\r\n\t\t\t/>\r\n\t\t\t<InputRange\r\n\t\t\t\t\tname={getTranslation($lang, \"drillRotationsCount\")}\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tmax={100}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tbind:value={drillRotationsCount}\r\n\t\t\t/>\r\n\t\t\t{#if isShowDrillLabel}\r\n\t\t\t\t<InputRange\r\n\t\t\t\t\t\tname={getTranslation($lang, \"drillLabelSize\")}\r\n\t\t\t\t\t\tmin={8}\r\n\t\t\t\t\t\tmax={16}\r\n\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\tbind:value={drillLabelSize}\r\n\t\t\t\t/>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"drillColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tbind:selectedId={drillColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"drillNormalColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tbind:selectedId={drillNormalColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t{#if isShowDrillLabel}\r\n\t\t\t<div class=\"controls-block\">\r\n\t\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t\t{getTranslation($lang, \"drillLabelColor\")}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<ColorSelector\r\n\t\t\t\t\t\tbind:selectedId={drillLabelColorId}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t\t<div class=\"controls-block\">\r\n\t\t\t<h2 class=\"controls-block__title\">\r\n\t\t\t\t{getTranslation($lang, \"drilledVertexColor\")}\r\n\t\t\t</h2>\r\n\t\t\t<ColorSelector\r\n\t\t\t\t\tbind:selectedId={drilledVertexColorId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</Window>\r\n\t<Window\r\n\t\t\ttitle={getTranslation($lang, \"drillingTime\")}\r\n\t\t\tisOpened={windowsStatus[Windows.DrillingTime]}\r\n\t\t\tzIndex={windowsOrder[Windows.DrillingTime]}\r\n\t\t\tonClickHandler={() => { makeWindowActive(Windows.DrillingTime) }}\r\n\t\t\tonCloseHandler={() => { makeWindowInactive(Windows.DrillingTime) }}\r\n\t>\r\n\t\t<div>\r\n\t\t\t{getTranslation($lang, \"lastDrillingTime\")}: {msToStringTime(lastDrillingTime)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{getTranslation($lang, \"drillingTime\")}: {msToStringTime(drillingTime)}\r\n\t\t</div>\r\n\t</Window>\r\n{/if}\r\n\r\n<svelte:window\r\n\t\ton:fullscreenchange={() => { isFullscreen = document.fullscreenElement !== null }}\r\n/>\r\n\r\n<style>\r\n\t:global(body) {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\tbutton {\r\n\t\tpadding: 8px 15px;\r\n\t\tcolor: inherit;\r\n\t\tfont-size: 13px;\r\n\t\t/* white-space: nowrap; */\r\n\t\t/* overflow: hidden;\r\n        text-overflow: ellipsis; */\r\n\t}\r\n\t.controls {\r\n\t\toverflow-y: scroll;\r\n\t\tbox-shadow: 0 0 10px 0 black;\r\n\t\t/* display: flex; */\r\n\t\t/* flex-direction: row; */\r\n\t\tposition: fixed;\r\n\t\t/* width: 300px; */\r\n\t\tmax-height: calc(100% - 40px);\r\n\t\tright: 20px;\r\n\t\ttop: 20px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\r\n\t\t/* padding: 10px; */\r\n\t\tborder-radius: 5px;\r\n\t\tbackdrop-filter: blur(8px);\r\n\t\t-webkit-backdrop-filter: blur(8px);\r\n\t\t-ms-overflow-style: none; /* IE and Edge */\r\n\t\tscrollbar-width: none; /* Firefox */\r\n\t\ttransition-duration: 0.2s;\r\n\t}\r\n\t.controls::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.controls_opened {\r\n\t\tpadding: 10px;\r\n\t\twidth: 300px;\r\n\t\tborder-radius: 10px;\r\n\t}\r\n\t.controls-block > * {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t.controls-block:not(:last-child) {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\t.controls-block__title {\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: 5px;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 100%;\r\n\t}\r\n\t.buttons-row {\r\n\t\tdisplay: flex;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t.buttons-row button {\r\n\t\twidth: 100%;\r\n\t}\r\n\t@supports (not (backdrop-filter: blur())) and\r\n    (not (-webkit-backdrop-filter: blur())) {\r\n\t\t.controls {\r\n\t\t\tbackground-color: rgba(150, 150, 150, 0.95);\r\n\t\t}\r\n\t}\r\n</style>\r\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["canvas","context","canvasStore","contextStore","EPSILON","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","angle","vec2","salesman","salesmanAlgorithm","create_if_block"],"mappings":"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"}